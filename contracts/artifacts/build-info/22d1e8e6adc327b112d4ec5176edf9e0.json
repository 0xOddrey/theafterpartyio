{"id":"22d1e8e6adc327b112d4ec5176edf9e0","_format":"hh-sol-build-info-1","solcVersion":"0.8.20","solcLongVersion":"0.8.20+commit.a1b79de6","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"./IERC1155.sol\";\nimport {IERC1155MetadataURI} from \"./extensions/IERC1155MetadataURI.sol\";\nimport {ERC1155Utils} from \"./utils/ERC1155Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {Arrays} from \"../../utils/Arrays.sol\";\nimport {IERC1155Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                ERC1155Utils.checkOnERC1155Received(operator, from, to, id, value, data);\n            } else {\n                ERC1155Utils.checkOnERC1155BatchReceived(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        assembly (\"memory-safe\") {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155} from \"../IERC1155.sol\";\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[ERC].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n"},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC-1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC-1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC1155/utils/ERC1155Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1155Receiver} from \"../IERC1155Receiver.sol\";\nimport {IERC1155Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-1155 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n *\n * _Available since v5.1._\n */\nlibrary ERC1155Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155Received(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC1155BatchReceived(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC1155Receiver implementer\n                    revert IERC1155Errors.ERC1155InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {ERC721Utils} from \"./utils/ERC721Utils.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if:\n     * - `spender` does not have approval from `owner` for `tokenId`.\n     * - `spender` does not have approval to manage all of `owner`'s assets.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC-721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        ERC721Utils.checkOnERC721Received(_msgSender(), from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC-721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC-721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC-721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC721/utils/ERC721Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721Receiver} from \"../IERC721Receiver.sol\";\nimport {IERC721Errors} from \"../../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Library that provide common ERC-721 utility functions.\n *\n * See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n *\n * _Available since v5.1._\n */\nlibrary ERC721Utils {\n    /**\n     * @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n     * on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n     *\n     * The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n     * Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n     * the transfer.\n     */\n    function checkOnERC721Received(\n        address operator,\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory data\n    ) internal {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(operator, from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    // Token rejected\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-IERC721Receiver implementer\n                    revert IERC721Errors.ERC721InvalidReceiver(to);\n                } else {\n                    assembly (\"memory-safe\") {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Arrays.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Arrays.sol)\n// This file was procedurally generated from scripts/generate/templates/Arrays.js.\n\npragma solidity ^0.8.20;\n\nimport {Comparators} from \"./Comparators.sol\";\nimport {SlotDerivation} from \"./SlotDerivation.sol\";\nimport {StorageSlot} from \"./StorageSlot.sol\";\nimport {Math} from \"./math/Math.sol\";\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using SlotDerivation for bytes32;\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Sort an array of uint256 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        uint256[] memory array,\n        function(uint256, uint256) pure returns (bool) comp\n    ) internal pure returns (uint256[] memory) {\n        _quickSort(_begin(array), _end(array), comp);\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of uint256 in increasing order.\n     */\n    function sort(uint256[] memory array) internal pure returns (uint256[] memory) {\n        sort(array, Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of address (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        address[] memory array,\n        function(address, address) pure returns (bool) comp\n    ) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of address in increasing order.\n     */\n    function sort(address[] memory array) internal pure returns (address[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n     *\n     * This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n     * convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n     *\n     * NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n     * array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n     * when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n     * consume more gas than is available in a block, leading to potential DoS.\n     *\n     * IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way.\n     */\n    function sort(\n        bytes32[] memory array,\n        function(bytes32, bytes32) pure returns (bool) comp\n    ) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), _castToUint256Comp(comp));\n        return array;\n    }\n\n    /**\n     * @dev Variant of {sort} that sorts an array of bytes32 in increasing order.\n     */\n    function sort(bytes32[] memory array) internal pure returns (bytes32[] memory) {\n        sort(_castToUint256Array(array), Comparators.lt);\n        return array;\n    }\n\n    /**\n     * @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n     * at end (exclusive). Sorting follows the `comp` comparator.\n     *\n     * Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n     *\n     * IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n     * be used only if the limits are within a memory array.\n     */\n    function _quickSort(uint256 begin, uint256 end, function(uint256, uint256) pure returns (bool) comp) private pure {\n        unchecked {\n            if (end - begin < 0x40) return;\n\n            // Use first element as pivot\n            uint256 pivot = _mload(begin);\n            // Position where the pivot should be at the end of the loop\n            uint256 pos = begin;\n\n            for (uint256 it = begin + 0x20; it < end; it += 0x20) {\n                if (comp(_mload(it), pivot)) {\n                    // If the value stored at the iterator's position comes before the pivot, we increment the\n                    // position of the pivot and move the value there.\n                    pos += 0x20;\n                    _swap(pos, it);\n                }\n            }\n\n            _swap(begin, pos); // Swap pivot into place\n            _quickSort(begin, pos, comp); // Sort the left side of the pivot\n            _quickSort(pos + 0x20, end, comp); // Sort the right side of the pivot\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first element of `array`.\n     */\n    function _begin(uint256[] memory array) private pure returns (uint256 ptr) {\n        assembly (\"memory-safe\") {\n            ptr := add(array, 0x20)\n        }\n    }\n\n    /**\n     * @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n     * that comes just after the last element of the array.\n     */\n    function _end(uint256[] memory array) private pure returns (uint256 ptr) {\n        unchecked {\n            return _begin(array) + array.length * 0x20;\n        }\n    }\n\n    /**\n     * @dev Load memory word (as a uint256) at location `ptr`.\n     */\n    function _mload(uint256 ptr) private pure returns (uint256 value) {\n        assembly {\n            value := mload(ptr)\n        }\n    }\n\n    /**\n     * @dev Swaps the elements memory location `ptr1` and `ptr2`.\n     */\n    function _swap(uint256 ptr1, uint256 ptr2) private pure {\n        assembly {\n            let value1 := mload(ptr1)\n            let value2 := mload(ptr2)\n            mstore(ptr1, value2)\n            mstore(ptr2, value1)\n        }\n    }\n\n    /// @dev Helper: low level cast address memory array to uint256 memory array\n    function _castToUint256Array(address[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 memory array to uint256 memory array\n    function _castToUint256Array(bytes32[] memory input) private pure returns (uint256[] memory output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast address comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(address, address) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /// @dev Helper: low level cast bytes32 comp function to uint256 comp function\n    function _castToUint256Comp(\n        function(bytes32, bytes32) pure returns (bool) input\n    ) private pure returns (function(uint256, uint256) pure returns (bool) output) {\n        assembly {\n            output := input\n        }\n    }\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * NOTE: The `array` is expected to be sorted in ascending order, and to\n     * contain no repeated elements.\n     *\n     * IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n     * support for repeated elements in the array. The {lowerBound} function should\n     * be used instead.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value greater or equal than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound].\n     */\n    function lowerBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Searches an `array` sorted in ascending order and returns the first\n     * index that contains a value strictly greater than `element`. If no such index\n     * exists (i.e. all values in the array are strictly less than `element`), the array\n     * length is returned. Time complexity O(log n).\n     *\n     * See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound].\n     */\n    function upperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {lowerBound}, but with an array in memory.\n     */\n    function lowerBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) < element) {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            } else {\n                high = mid;\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Same as {upperBound}, but with an array in memory.\n     */\n    function upperBoundMemory(uint256[] memory array, uint256 element) internal pure returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeMemoryAccess(array, mid) > element) {\n                high = mid;\n            } else {\n                // this cannot overflow because mid < high\n                unchecked {\n                    low = mid + 1;\n                }\n            }\n        }\n\n        return low;\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        assembly (\"memory-safe\") {\n            slot := arr.slot\n        }\n        return slot.deriveArray().offset(pos).getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(bytes32[] memory arr, uint256 pos) internal pure returns (bytes32 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(address[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(bytes32[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n\n    /**\n     * @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n     *\n     * WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased.\n     */\n    function unsafeSetLength(uint256[] storage array, uint256 len) internal {\n        assembly (\"memory-safe\") {\n            sstore(array.slot, len)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Comparators.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Comparators.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides a set of functions to compare values.\n *\n * _Available since v5.1._\n */\nlibrary Comparators {\n    function lt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a < b;\n    }\n\n    function gt(uint256 a, uint256 b) internal pure returns (bool) {\n        return a > b;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Return the 512-bit addition of two uint256.\n     *\n     * The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low.\n     */\n    function add512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        assembly (\"memory-safe\") {\n            low := add(a, b)\n            high := lt(low, a)\n        }\n    }\n\n    /**\n     * @dev Return the 512-bit multiplication of two uint256.\n     *\n     * The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low.\n     */\n    function mul512(uint256 a, uint256 b) internal pure returns (uint256 high, uint256 low) {\n        // 512-bit multiply [high low] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n        // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n        // variables such that product = high * 2²⁵⁶ + low.\n        assembly (\"memory-safe\") {\n            let mm := mulmod(a, b, not(0))\n            low := mul(a, b)\n            high := sub(sub(mm, low), lt(mm, low))\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            success = c >= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a - b;\n            success = c <= a;\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a * b;\n            assembly (\"memory-safe\") {\n                // Only true when the multiplication doesn't overflow\n                // (c / a == b) || (a == 0)\n                success := or(eq(div(c, a), b), iszero(a))\n            }\n            // equivalent to: success ? c : 0\n            result = c * SafeCast.toUint(success);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `DIV` opcode returns zero when the denominator is 0.\n                result := div(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            success = b > 0;\n            assembly (\"memory-safe\") {\n                // The `MOD` opcode returns zero when the denominator is 0.\n                result := mod(a, b)\n            }\n        }\n    }\n\n    /**\n     * @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingAdd(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryAdd(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Unsigned saturating subtraction, bounds to zero instead of overflowing.\n     */\n    function saturatingSub(uint256 a, uint256 b) internal pure returns (uint256) {\n        (, uint256 result) = trySub(a, b);\n        return result;\n    }\n\n    /**\n     * @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing.\n     */\n    function saturatingMul(uint256 a, uint256 b) internal pure returns (uint256) {\n        (bool success, uint256 result) = tryMul(a, b);\n        return ternary(success, result, type(uint256).max);\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (high == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return low / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= high) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [high low].\n            uint256 remainder;\n            assembly (\"memory-safe\") {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                high := sub(high, gt(remainder, low))\n                low := sub(low, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly (\"memory-safe\") {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [high low] by twos.\n                low := div(low, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from high into low.\n            low |= high * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and high\n            // is no longer required.\n            result = low * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n) internal pure returns (uint256 result) {\n        unchecked {\n            (uint256 high, uint256 low) = mul512(x, y);\n            if (high >= 1 << n) {\n                Panic.panic(Panic.UNDER_OVERFLOW);\n            }\n            return (high << (256 - n)) | (low >> n);\n        }\n    }\n\n    /**\n     * @dev Calculates x * y >> n with full precision, following the selected rounding direction.\n     */\n    function mulShr(uint256 x, uint256 y, uint8 n, Rounding rounding) internal pure returns (uint256) {\n        return mulShr(x, y, n) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, 1 << n) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // If upper 8 bits of 16-bit half set, add 8 to result\n        r |= SafeCast.toUint((x >> r) > 0xff) << 3;\n        // If upper 4 bits of 8-bit half set, add 4 to result\n        r |= SafeCast.toUint((x >> r) > 0xf) << 2;\n\n        // Shifts value right by the current result and use it as an index into this lookup table:\n        //\n        // | x (4 bits) |  index  | table[index] = MSB position |\n        // |------------|---------|-----------------------------|\n        // |    0000    |    0    |        table[0] = 0         |\n        // |    0001    |    1    |        table[1] = 0         |\n        // |    0010    |    2    |        table[2] = 1         |\n        // |    0011    |    3    |        table[3] = 1         |\n        // |    0100    |    4    |        table[4] = 2         |\n        // |    0101    |    5    |        table[5] = 2         |\n        // |    0110    |    6    |        table[6] = 2         |\n        // |    0111    |    7    |        table[7] = 2         |\n        // |    1000    |    8    |        table[8] = 3         |\n        // |    1001    |    9    |        table[9] = 3         |\n        // |    1010    |   10    |        table[10] = 3        |\n        // |    1011    |   11    |        table[11] = 3        |\n        // |    1100    |   12    |        table[12] = 3        |\n        // |    1101    |   13    |        table[13] = 3        |\n        // |    1110    |   14    |        table[14] = 3        |\n        // |    1111    |   15    |        table[15] = 3        |\n        //\n        // The lookup table is represented as a 32-byte value with the MSB positions for 0-15 in the last 16 bytes.\n        assembly (\"memory-safe\") {\n            r := or(r, byte(shr(r, x), 0x0000010102020202030303030303030300000000000000000000000000000000))\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 x) internal pure returns (uint256 r) {\n        // If value has upper 128 bits set, log2 result is at least 128\n        r = SafeCast.toUint(x > 0xffffffffffffffffffffffffffffffff) << 7;\n        // If upper 64 bits of 128-bit half set, add 64 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffffffffffff) << 6;\n        // If upper 32 bits of 64-bit half set, add 32 to result\n        r |= SafeCast.toUint((x >> r) > 0xffffffff) << 5;\n        // If upper 16 bits of 32-bit half set, add 16 to result\n        r |= SafeCast.toUint((x >> r) > 0xffff) << 4;\n        // Add 1 if upper 8 bits of 16-bit half set, and divide accumulated result by 8\n        return (r >> 3) | SafeCast.toUint((x >> r) > 0xff);\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/SlotDerivation.sol)\n// This file was procedurally generated from scripts/generate/templates/SlotDerivation.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n * corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n * the solidity language / compiler.\n *\n * See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n *\n * Example usage:\n * ```solidity\n * contract Example {\n *     // Add the library methods\n *     using StorageSlot for bytes32;\n *     using SlotDerivation for bytes32;\n *\n *     // Declare a namespace\n *     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n *\n *     function setValueInNamespace(uint256 key, address newValue) internal {\n *         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n *     }\n *\n *     function getValueInNamespace(uint256 key) internal view returns (address) {\n *         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {StorageSlot}.\n *\n * NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n * upgrade safety will ignore the slots accessed through this library.\n *\n * _Available since v5.1._\n */\nlibrary SlotDerivation {\n    /**\n     * @dev Derive an ERC-7201 slot from a string (namespace).\n     */\n    function erc7201Slot(string memory namespace) internal pure returns (bytes32 slot) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, sub(keccak256(add(namespace, 0x20), mload(namespace)), 1))\n            slot := and(keccak256(0x00, 0x20), not(0xff))\n        }\n    }\n\n    /**\n     * @dev Add an offset to a slot to get the n-th element of a structure or an array.\n     */\n    function offset(bytes32 slot, uint256 pos) internal pure returns (bytes32 result) {\n        unchecked {\n            return bytes32(uint256(slot) + pos);\n        }\n    }\n\n    /**\n     * @dev Derive the location of the first element in an array from the slot where the length is stored.\n     */\n    function deriveArray(bytes32 slot) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, slot)\n            result := keccak256(0x00, 0x20)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, address key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, and(key, shr(96, not(0))))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bool key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, iszero(iszero(key)))\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes32 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, uint256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, int256 key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, key)\n            mstore(0x20, slot)\n            result := keccak256(0x00, 0x40)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, string memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n\n    /**\n     * @dev Derive the location of a mapping element from the key.\n     */\n    function deriveMapping(bytes32 slot, bytes memory key) internal pure returns (bytes32 result) {\n        assembly (\"memory-safe\") {\n            let length := mload(key)\n            let begin := add(key, 0x20)\n            let end := add(begin, length)\n            let cache := mload(end)\n            mstore(end, slot)\n            result := keccak256(begin, add(length, 0x20))\n            mstore(end, cache)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SafeCast} from \"./math/SafeCast.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    using SafeCast for *;\n\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n    uint256 private constant SPECIAL_CHARS_LOOKUP =\n        (1 << 0x08) | // backspace\n            (1 << 0x09) | // tab\n            (1 << 0x0a) | // newline\n            (1 << 0x0c) | // form feed\n            (1 << 0x0d) | // carriage return\n            (1 << 0x22) | // double quote\n            (1 << 0x5c); // backslash\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev The string being parsed contains characters that are not in scope of the given base.\n     */\n    error StringsInvalidChar();\n\n    /**\n     * @dev The string being parsed is not a properly formatted address.\n     */\n    error StringsInvalidAddressFormat();\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input) internal pure returns (uint256) {\n        return parseUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[0-9]*`\n     * - The result must fit into an `uint256` type\n     */\n    function parseUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        uint256 result = 0;\n        for (uint256 i = begin; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 9) return (false, 0);\n            result *= 10;\n            result += chr;\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a decimal string and returns the value as a `int256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input) internal pure returns (int256) {\n        return parseInt(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `[-+]?[0-9]*`\n     * - The result must fit in an `int256` type.\n     */\n    function parseInt(string memory input, uint256 begin, uint256 end) internal pure returns (int256) {\n        (bool success, int256 value) = tryParseInt(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n     * the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(string memory input) internal pure returns (bool success, int256 value) {\n        return _tryParseIntUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    uint256 private constant ABS_MIN_INT256 = 2 ** 255;\n\n    /**\n     * @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n     * character or if the result does not fit in a `int256`.\n     *\n     * NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`.\n     */\n    function tryParseInt(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, int256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseIntUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseIntUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, int256 value) {\n        bytes memory buffer = bytes(input);\n\n        // Check presence of a negative sign.\n        bytes1 sign = begin == end ? bytes1(0) : bytes1(_unsafeReadBytesOffset(buffer, begin)); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        bool positiveSign = sign == bytes1(\"+\");\n        bool negativeSign = sign == bytes1(\"-\");\n        uint256 offset = (positiveSign || negativeSign).toUint();\n\n        (bool absSuccess, uint256 absValue) = tryParseUint(input, begin + offset, end);\n\n        if (absSuccess && absValue < ABS_MIN_INT256) {\n            return (true, negativeSign ? -int256(absValue) : int256(absValue));\n        } else if (absSuccess && negativeSign && absValue == ABS_MIN_INT256) {\n            return (true, type(int256).min);\n        } else return (false, 0);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input) internal pure returns (uint256) {\n        return parseHexUint(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n     * - The result must fit in an `uint256` type.\n     */\n    function parseHexUint(string memory input, uint256 begin, uint256 end) internal pure returns (uint256) {\n        (bool success, uint256 value) = tryParseHexUint(input, begin, end);\n        if (!success) revert StringsInvalidChar();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(string memory input) internal pure returns (bool success, uint256 value) {\n        return _tryParseHexUintUncheckedBounds(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n     * invalid character.\n     *\n     * NOTE: This function will revert if the result does not fit in a `uint256`.\n     */\n    function tryParseHexUint(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, uint256 value) {\n        if (end > bytes(input).length || begin > end) return (false, 0);\n        return _tryParseHexUintUncheckedBounds(input, begin, end);\n    }\n\n    /**\n     * @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n     * `begin <= end <= input.length`. Other inputs would result in undefined behavior.\n     */\n    function _tryParseHexUintUncheckedBounds(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) private pure returns (bool success, uint256 value) {\n        bytes memory buffer = bytes(input);\n\n        // skip 0x prefix if present\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(buffer, begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 offset = hasPrefix.toUint() * 2;\n\n        uint256 result = 0;\n        for (uint256 i = begin + offset; i < end; ++i) {\n            uint8 chr = _tryParseChr(bytes1(_unsafeReadBytesOffset(buffer, i)));\n            if (chr > 15) return (false, 0);\n            result *= 16;\n            unchecked {\n                // Multiplying by 16 is equivalent to a shift of 4 bits (with additional overflow check).\n                // This guarantees that adding a value < 16 will not cause an overflow, hence the unchecked.\n                result += chr;\n            }\n        }\n        return (true, result);\n    }\n\n    /**\n     * @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n     *\n     * Requirements:\n     * - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input) internal pure returns (address) {\n        return parseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n     * `end` (excluded).\n     *\n     * Requirements:\n     * - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`\n     */\n    function parseAddress(string memory input, uint256 begin, uint256 end) internal pure returns (address) {\n        (bool success, address value) = tryParseAddress(input, begin, end);\n        if (!success) revert StringsInvalidAddressFormat();\n        return value;\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n     * formatted address. See {parseAddress-string} requirements.\n     */\n    function tryParseAddress(string memory input) internal pure returns (bool success, address value) {\n        return tryParseAddress(input, 0, bytes(input).length);\n    }\n\n    /**\n     * @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n     * formatted address. See {parseAddress-string-uint256-uint256} requirements.\n     */\n    function tryParseAddress(\n        string memory input,\n        uint256 begin,\n        uint256 end\n    ) internal pure returns (bool success, address value) {\n        if (end > bytes(input).length || begin > end) return (false, address(0));\n\n        bool hasPrefix = (end > begin + 1) && bytes2(_unsafeReadBytesOffset(bytes(input), begin)) == bytes2(\"0x\"); // don't do out-of-bound (possibly unsafe) read if sub-string is empty\n        uint256 expectedLength = 40 + hasPrefix.toUint() * 2;\n\n        // check that input is the correct length\n        if (end - begin == expectedLength) {\n            // length guarantees that this does not overflow, and value is at most type(uint160).max\n            (bool s, uint256 v) = _tryParseHexUintUncheckedBounds(input, begin, end);\n            return (s, address(uint160(v)));\n        } else {\n            return (false, address(0));\n        }\n    }\n\n    function _tryParseChr(bytes1 chr) private pure returns (uint8) {\n        uint8 value = uint8(chr);\n\n        // Try to parse `chr`:\n        // - Case 1: [0-9]\n        // - Case 2: [a-f]\n        // - Case 3: [A-F]\n        // - otherwise not supported\n        unchecked {\n            if (value > 47 && value < 58) value -= 48;\n            else if (value > 96 && value < 103) value -= 87;\n            else if (value > 64 && value < 71) value -= 55;\n            else return type(uint8).max;\n        }\n\n        return value;\n    }\n\n    /**\n     * @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n     *\n     * WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n     *\n     * NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n     * RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n     * characters that are not in this range, but other tooling may provide different results.\n     */\n    function escapeJSON(string memory input) internal pure returns (string memory) {\n        bytes memory buffer = bytes(input);\n        bytes memory output = new bytes(2 * buffer.length); // worst case scenario\n        uint256 outputLength = 0;\n\n        for (uint256 i; i < buffer.length; ++i) {\n            bytes1 char = bytes1(_unsafeReadBytesOffset(buffer, i));\n            if (((SPECIAL_CHARS_LOOKUP & (1 << uint8(char))) != 0)) {\n                output[outputLength++] = \"\\\\\";\n                if (char == 0x08) output[outputLength++] = \"b\";\n                else if (char == 0x09) output[outputLength++] = \"t\";\n                else if (char == 0x0a) output[outputLength++] = \"n\";\n                else if (char == 0x0c) output[outputLength++] = \"f\";\n                else if (char == 0x0d) output[outputLength++] = \"r\";\n                else if (char == 0x5c) output[outputLength++] = \"\\\\\";\n                else if (char == 0x22) {\n                    // solhint-disable-next-line quotes\n                    output[outputLength++] = '\"';\n                }\n            } else {\n                output[outputLength++] = char;\n            }\n        }\n        // write the actual length and deallocate unused memory\n        assembly (\"memory-safe\") {\n            mstore(output, outputLength)\n            mstore(0x40, add(output, shl(5, shr(5, add(outputLength, 63)))))\n        }\n\n        return string(output);\n    }\n\n    /**\n     * @dev Reads a bytes32 from a bytes array without bounds checking.\n     *\n     * NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n     * assembly block as such would prevent some optimizations.\n     */\n    function _unsafeReadBytesOffset(bytes memory buffer, uint256 offset) private pure returns (bytes32 value) {\n        // This is not memory safe in the general case, but all calls to this private function are within bounds.\n        assembly (\"memory-safe\") {\n            value := mload(add(buffer, add(0x20, offset)))\n        }\n    }\n}\n"},"contracts/AfterpartyEvent.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"./AttendanceToken.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title Simple event contract that issues attendance tokens\ncontract AfterpartyEvent is Ownable {\n    AttendanceToken public attendanceToken;\n\n    /// @notice Deploy a new event and accompanying attendance token\n    constructor() Ownable(msg.sender) {\n        attendanceToken = new AttendanceToken();\n    }\n\n    /// @notice Mint an attendance token for the caller\n    function claim() external {\n        attendanceToken.claim(msg.sender);\n    }\n}\n"},"contracts/AfterpartyEventToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title AfterpartyEventToken - ERC1155 tokens for event attendance\n/// @notice Each event gets its own token ID, attendees can mint editions\ncontract AfterpartyEventToken is ERC1155, Ownable {\n    uint256 private _eventIdCounter;\n    \n    struct Event {\n        uint256 tokenId;\n        address organizer;\n        string uri;\n        uint256 totalMinted;\n        bool exists;\n    }\n    \n    mapping(uint256 => Event) public events;\n    mapping(address => uint256[]) public organizerEvents;\n    mapping(uint256 => mapping(address => bool)) public hasClaimed;\n    \n    event EventCreated(uint256 indexed eventId, address indexed organizer, string uri);\n    event TokenMinted(uint256 indexed eventId, address indexed attendee, uint256 amount);\n    \n    constructor() ERC1155(\"\") Ownable(msg.sender) {}\n    \n    /// @notice Create a new event and mint the first token to the organizer\n    /// @param eventUri The metadata URI for this event's tokens\n    /// @return eventId The ID of the newly created event\n    function createEvent(string memory eventUri) external returns (uint256) {\n        _eventIdCounter++;\n        uint256 newEventId = _eventIdCounter;\n        \n        events[newEventId] = Event({\n            tokenId: newEventId,\n            organizer: msg.sender,\n            uri: eventUri,\n            totalMinted: 1,\n            exists: true\n        });\n        \n        organizerEvents[msg.sender].push(newEventId);\n        \n        _mint(msg.sender, newEventId, 1, \"\");\n        hasClaimed[newEventId][msg.sender] = true;\n        \n        emit EventCreated(newEventId, msg.sender, eventUri);\n        emit TokenMinted(newEventId, msg.sender, 1);\n        \n        return newEventId;\n    }\n    \n    /// @notice Get event details by ID\n    /// @param eventId The ID of the event\n    /// @return Event struct with all event details\n    function getEvent(uint256 eventId) external view returns (Event memory) {\n        require(events[eventId].exists, \"Event does not exist\");\n        return events[eventId];\n    }\n    \n    /// @notice Mint a token for an event attendee\n    /// @param eventId The ID of the event to mint for\n    function mintAttendanceToken(uint256 eventId) external {\n        require(events[eventId].exists, \"Event does not exist\");\n        require(!hasClaimed[eventId][msg.sender], \"Already claimed token for this event\");\n        \n        _mint(msg.sender, eventId, 1, \"\");\n        hasClaimed[eventId][msg.sender] = true;\n        events[eventId].totalMinted++;\n        \n        emit TokenMinted(eventId, msg.sender, 1);\n    }\n    \n    /// @notice Get all events created by an organizer\n    /// @param organizer The address of the organizer\n    /// @return Array of event IDs\n    function getOrganizerEvents(address organizer) external view returns (uint256[] memory) {\n        return organizerEvents[organizer];\n    }\n    \n    /// @notice Override URI function to return event-specific URIs\n    /// @param tokenId The token ID (event ID)\n    /// @return The metadata URI for the token\n    function uri(uint256 tokenId) public view override returns (string memory) {\n        require(events[tokenId].exists, \"Event does not exist\");\n        return events[tokenId].uri;\n    }\n}"},"contracts/AttendanceToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/// @title Attendance token for event participation\ncontract AttendanceToken is ERC721, Ownable {\n    uint256 public nextTokenId = 1;\n    mapping(address => bool) public hasClaimed;\n\n    constructor() ERC721(\"Attendance Token\", \"ATTN\") Ownable(msg.sender) {}\n\n    function claim(address to) external onlyOwner {\n        require(!hasClaimed[to], \"Already claimed\");\n        _mint(to, nextTokenId);\n        nextTokenId++;\n        hasClaimed[to] = true;\n    }\n}\n"},"contracts/Example.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\n/// @title Example contract for Afterparty\ncontract Example {\n    string public greet = \"Hello Afterparty\";\n}\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[3673],"Ownable":[147]},"id":148,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":148,"sourceUnit":3674,"src":"128:45:0","symbolAliases":[{"foreign":{"id":2,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"136:7:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5,"name":"Context","nameLocations":["692:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"692:7:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"692:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"175:487:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":147,"linearizedBaseContracts":[147,3673],"name":"Ownable","nameLocation":"681:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8,"mutability":"mutable","name":"_owner","nameLocation":"722:6:0","nodeType":"VariableDeclaration","scope":147,"src":"706:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"documentation":{"id":9,"nodeType":"StructuredDocumentation","src":"735:85:0","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":13,"name":"OwnableUnauthorizedAccount","nameLocation":"831:26:0","nodeType":"ErrorDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":11,"mutability":"mutable","name":"account","nameLocation":"866:7:0","nodeType":"VariableDeclaration","scope":13,"src":"858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"857:17:0"},"src":"825:50:0"},{"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"881:82:0","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":18,"name":"OwnableInvalidOwner","nameLocation":"974:19:0","nodeType":"ErrorDefinition","parameters":{"id":17,"nodeType":"ParameterList","parameters":[{"constant":false,"id":16,"mutability":"mutable","name":"owner","nameLocation":"1002:5:0","nodeType":"VariableDeclaration","scope":18,"src":"994:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":15,"name":"address","nodeType":"ElementaryTypeName","src":"994:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"993:15:0"},"src":"968:41:0"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":24,"name":"OwnershipTransferred","nameLocation":"1021:20:0","nodeType":"EventDefinition","parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":20,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1058:13:0","nodeType":"VariableDeclaration","scope":24,"src":"1042:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":19,"name":"address","nodeType":"ElementaryTypeName","src":"1042:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1089:8:0","nodeType":"VariableDeclaration","scope":24,"src":"1073:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1041:57:0"},"src":"1015:84:0"},{"body":{"id":49,"nodeType":"Block","src":"1259:153:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":30,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1273:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":33,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":32,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":31,"name":"address","nodeType":"ElementaryTypeName","src":"1289:7:0","typeDescriptions":{}}},"id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1289:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1273:26:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":44,"nodeType":"IfStatement","src":"1269:95:0","trueBody":{"id":43,"nodeType":"Block","src":"1301:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":39,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1350:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":38,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1342:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":37,"name":"address","nodeType":"ElementaryTypeName","src":"1342:7:0","typeDescriptions":{}}},"id":40,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1342:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":36,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1322:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1322:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":42,"nodeType":"RevertStatement","src":"1315:38:0"}]}},{"expression":{"arguments":[{"id":46,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1392:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":45,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"1373:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":47,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1373:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":48,"nodeType":"ExpressionStatement","src":"1373:32:0"}]},"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"1105:115:0","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":50,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"initialOwner","nameLocation":"1245:12:0","nodeType":"VariableDeclaration","scope":50,"src":"1237:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1237:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1236:22:0"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"1259:0:0"},"scope":147,"src":"1225:187:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":57,"nodeType":"Block","src":"1521:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":53,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":84,"src":"1531:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1531:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1531:13:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1554:1:0"}]},"documentation":{"id":51,"nodeType":"StructuredDocumentation","src":"1418:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nameLocation":"1509:9:0","nodeType":"ModifierDefinition","parameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"1518:2:0"},"src":"1500:62:0","virtual":false,"visibility":"internal"},{"body":{"id":66,"nodeType":"Block","src":"1693:30:0","statements":[{"expression":{"id":64,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"1710:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":63,"id":65,"nodeType":"Return","src":"1703:13:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1568:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":67,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1647:5:0","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1652:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":67,"src":"1684:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1684:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1683:9:0"},"scope":147,"src":"1638:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":83,"nodeType":"Block","src":"1841:117:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":75,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":67,"src":"1855:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1855:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":73,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1866:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":74,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1866:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1855:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":82,"nodeType":"IfStatement","src":"1851:101:0","trueBody":{"id":81,"nodeType":"Block","src":"1880:72:0","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":77,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"1928:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":78,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1928:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":76,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1901:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":79,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1901:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":80,"nodeType":"RevertStatement","src":"1894:47:0"}]}}]},"documentation":{"id":68,"nodeType":"StructuredDocumentation","src":"1729:62:0","text":" @dev Throws if the sender is not the owner."},"id":84,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1805:11:0","nodeType":"FunctionDefinition","parameters":{"id":69,"nodeType":"ParameterList","parameters":[],"src":"1816:2:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[],"src":"1841:0:0"},"scope":147,"src":"1796:162:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":97,"nodeType":"Block","src":"2347:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2384:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":92,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2376:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":91,"name":"address","nodeType":"ElementaryTypeName","src":"2376:7:0","typeDescriptions":{}}},"id":94,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2376:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":90,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2357:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":95,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2357:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":96,"nodeType":"ExpressionStatement","src":"2357:30:0"}]},"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"1964:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":98,"implemented":true,"kind":"function","modifiers":[{"id":88,"kind":"modifierInvocation","modifierName":{"id":87,"name":"onlyOwner","nameLocations":["2337:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2337:9:0"},"nodeType":"ModifierInvocation","src":"2337:9:0"}],"name":"renounceOwnership","nameLocation":"2302:17:0","nodeType":"FunctionDefinition","parameters":{"id":86,"nodeType":"ParameterList","parameters":[],"src":"2319:2:0"},"returnParameters":{"id":89,"nodeType":"ParameterList","parameters":[],"src":"2347:0:0"},"scope":147,"src":"2293:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":125,"nodeType":"Block","src":"2613:145:0","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":106,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2627:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2639:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":107,"name":"address","nodeType":"ElementaryTypeName","src":"2639:7:0","typeDescriptions":{}}},"id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2639:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2627:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":120,"nodeType":"IfStatement","src":"2623:91:0","trueBody":{"id":119,"nodeType":"Block","src":"2651:63:0","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2700:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2692:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"2692:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2692:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":112,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2672:19:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2672:31:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":118,"nodeType":"RevertStatement","src":"2665:38:0"}]}},{"expression":{"arguments":[{"id":122,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":101,"src":"2742:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":121,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"2723:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2723:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":124,"nodeType":"ExpressionStatement","src":"2723:28:0"}]},"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"2400:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":126,"implemented":true,"kind":"function","modifiers":[{"id":104,"kind":"modifierInvocation","modifierName":{"id":103,"name":"onlyOwner","nameLocations":["2603:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"2603:9:0"},"nodeType":"ModifierInvocation","src":"2603:9:0"}],"name":"transferOwnership","nameLocation":"2552:17:0","nodeType":"FunctionDefinition","parameters":{"id":102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"newOwner","nameLocation":"2578:8:0","nodeType":"VariableDeclaration","scope":126,"src":"2570:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"2570:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2569:18:0"},"returnParameters":{"id":105,"nodeType":"ParameterList","parameters":[],"src":"2613:0:0"},"scope":147,"src":"2543:215:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":145,"nodeType":"Block","src":"2975:124:0","statements":[{"assignments":[133],"declarations":[{"constant":false,"id":133,"mutability":"mutable","name":"oldOwner","nameLocation":"2993:8:0","nodeType":"VariableDeclaration","scope":145,"src":"2985:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"2985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":135,"initialValue":{"id":134,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2985:25:0"},{"expression":{"id":138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":136,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8,"src":"3020:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":137,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3029:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3020:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":139,"nodeType":"ExpressionStatement","src":"3020:17:0"},{"eventCall":{"arguments":[{"id":141,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":133,"src":"3073:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":142,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"3083:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":140,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3052:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3052:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":144,"nodeType":"EmitStatement","src":"3047:45:0"}]},"documentation":{"id":127,"nodeType":"StructuredDocumentation","src":"2764:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":146,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2921:18:0","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":129,"mutability":"mutable","name":"newOwner","nameLocation":"2948:8:0","nodeType":"VariableDeclaration","scope":146,"src":"2940:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":128,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2939:18:0"},"returnParameters":{"id":131,"nodeType":"ParameterList","parameters":[],"src":"2975:0:0"},"scope":147,"src":"2912:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":148,"src":"663:2438:0","usedErrors":[13,18],"usedEvents":[24]}],"src":"102:3000:0"},"id":0},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","exportedSymbols":{"IERC1155Errors":[284],"IERC20Errors":[189],"IERC721Errors":[237]},"id":285,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":149,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":150,"nodeType":"StructuredDocumentation","src":"138:141:1","text":" @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."},"fullyImplemented":true,"id":189,"linearizedBaseContracts":[189],"name":"IERC20Errors","nameLocation":"290:12:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"309:309:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"e450d38c","id":159,"name":"ERC20InsufficientBalance","nameLocation":"629:24:1","nodeType":"ErrorDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"sender","nameLocation":"662:6:1","nodeType":"VariableDeclaration","scope":159,"src":"654:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"654:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"balance","nameLocation":"678:7:1","nodeType":"VariableDeclaration","scope":159,"src":"670:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":154,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":157,"mutability":"mutable","name":"needed","nameLocation":"695:6:1","nodeType":"VariableDeclaration","scope":159,"src":"687:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"653:49:1"},"src":"623:80:1"},{"documentation":{"id":160,"nodeType":"StructuredDocumentation","src":"709:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"96c6fd1e","id":164,"name":"ERC20InvalidSender","nameLocation":"872:18:1","nodeType":"ErrorDefinition","parameters":{"id":163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":162,"mutability":"mutable","name":"sender","nameLocation":"899:6:1","nodeType":"VariableDeclaration","scope":164,"src":"891:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":161,"name":"address","nodeType":"ElementaryTypeName","src":"891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"890:16:1"},"src":"866:41:1"},{"documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"913:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"ec442f05","id":169,"name":"ERC20InvalidReceiver","nameLocation":"1083:20:1","nodeType":"ErrorDefinition","parameters":{"id":168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":167,"mutability":"mutable","name":"receiver","nameLocation":"1112:8:1","nodeType":"VariableDeclaration","scope":169,"src":"1104:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":166,"name":"address","nodeType":"ElementaryTypeName","src":"1104:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1103:18:1"},"src":"1077:45:1"},{"documentation":{"id":170,"nodeType":"StructuredDocumentation","src":"1128:345:1","text":" @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."},"errorSelector":"fb8f41b2","id":178,"name":"ERC20InsufficientAllowance","nameLocation":"1484:26:1","nodeType":"ErrorDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":172,"mutability":"mutable","name":"spender","nameLocation":"1519:7:1","nodeType":"VariableDeclaration","scope":178,"src":"1511:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":171,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":174,"mutability":"mutable","name":"allowance","nameLocation":"1536:9:1","nodeType":"VariableDeclaration","scope":178,"src":"1528:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"1528:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"mutability":"mutable","name":"needed","nameLocation":"1555:6:1","nodeType":"VariableDeclaration","scope":178,"src":"1547:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1510:52:1"},"src":"1478:85:1"},{"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1569:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"e602df05","id":183,"name":"ERC20InvalidApprover","nameLocation":"1754:20:1","nodeType":"ErrorDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"approver","nameLocation":"1783:8:1","nodeType":"VariableDeclaration","scope":183,"src":"1775:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1775:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1774:18:1"},"src":"1748:45:1"},{"documentation":{"id":184,"nodeType":"StructuredDocumentation","src":"1799:195:1","text":" @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"94280d62","id":188,"name":"ERC20InvalidSpender","nameLocation":"2005:19:1","nodeType":"ErrorDefinition","parameters":{"id":187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":186,"mutability":"mutable","name":"spender","nameLocation":"2033:7:1","nodeType":"VariableDeclaration","scope":188,"src":"2025:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":185,"name":"address","nodeType":"ElementaryTypeName","src":"2025:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2024:17:1"},"src":"1999:43:1"}],"scope":285,"src":"280:1764:1","usedErrors":[159,164,169,178,183,188],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"2046:143:1","text":" @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."},"fullyImplemented":true,"id":237,"linearizedBaseContracts":[237],"name":"IERC721Errors","nameLocation":"2200:13:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2220:219:1","text":" @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."},"errorSelector":"89c62b64","id":195,"name":"ERC721InvalidOwner","nameLocation":"2450:18:1","nodeType":"ErrorDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"owner","nameLocation":"2477:5:1","nodeType":"VariableDeclaration","scope":195,"src":"2469:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2469:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2468:15:1"},"src":"2444:40:1"},{"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"2490:132:1","text":" @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."},"errorSelector":"7e273289","id":200,"name":"ERC721NonexistentToken","nameLocation":"2633:22:1","nodeType":"ErrorDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"tokenId","nameLocation":"2664:7:1","nodeType":"VariableDeclaration","scope":200,"src":"2656:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2656:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2655:17:1"},"src":"2627:46:1"},{"documentation":{"id":201,"nodeType":"StructuredDocumentation","src":"2679:289:1","text":" @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."},"errorSelector":"64283d7b","id":209,"name":"ERC721IncorrectOwner","nameLocation":"2979:20:1","nodeType":"ErrorDefinition","parameters":{"id":208,"nodeType":"ParameterList","parameters":[{"constant":false,"id":203,"mutability":"mutable","name":"sender","nameLocation":"3008:6:1","nodeType":"VariableDeclaration","scope":209,"src":"3000:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":202,"name":"address","nodeType":"ElementaryTypeName","src":"3000:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":205,"mutability":"mutable","name":"tokenId","nameLocation":"3024:7:1","nodeType":"VariableDeclaration","scope":209,"src":"3016:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":204,"name":"uint256","nodeType":"ElementaryTypeName","src":"3016:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":207,"mutability":"mutable","name":"owner","nameLocation":"3041:5:1","nodeType":"VariableDeclaration","scope":209,"src":"3033:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":206,"name":"address","nodeType":"ElementaryTypeName","src":"3033:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2999:48:1"},"src":"2973:75:1"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"3054:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"73c6ac6e","id":214,"name":"ERC721InvalidSender","nameLocation":"3217:19:1","nodeType":"ErrorDefinition","parameters":{"id":213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"sender","nameLocation":"3245:6:1","nodeType":"VariableDeclaration","scope":214,"src":"3237:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"3237:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3236:16:1"},"src":"3211:42:1"},{"documentation":{"id":215,"nodeType":"StructuredDocumentation","src":"3259:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"64a0ae92","id":219,"name":"ERC721InvalidReceiver","nameLocation":"3429:21:1","nodeType":"ErrorDefinition","parameters":{"id":218,"nodeType":"ParameterList","parameters":[{"constant":false,"id":217,"mutability":"mutable","name":"receiver","nameLocation":"3459:8:1","nodeType":"VariableDeclaration","scope":219,"src":"3451:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":216,"name":"address","nodeType":"ElementaryTypeName","src":"3451:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3450:18:1"},"src":"3423:46:1"},{"documentation":{"id":220,"nodeType":"StructuredDocumentation","src":"3475:247:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."},"errorSelector":"177e802f","id":226,"name":"ERC721InsufficientApproval","nameLocation":"3733:26:1","nodeType":"ErrorDefinition","parameters":{"id":225,"nodeType":"ParameterList","parameters":[{"constant":false,"id":222,"mutability":"mutable","name":"operator","nameLocation":"3768:8:1","nodeType":"VariableDeclaration","scope":226,"src":"3760:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":221,"name":"address","nodeType":"ElementaryTypeName","src":"3760:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":224,"mutability":"mutable","name":"tokenId","nameLocation":"3786:7:1","nodeType":"VariableDeclaration","scope":226,"src":"3778:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":223,"name":"uint256","nodeType":"ElementaryTypeName","src":"3778:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3759:35:1"},"src":"3727:68:1"},{"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"3801:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"a9fbf51f","id":231,"name":"ERC721InvalidApprover","nameLocation":"3986:21:1","nodeType":"ErrorDefinition","parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":229,"mutability":"mutable","name":"approver","nameLocation":"4016:8:1","nodeType":"VariableDeclaration","scope":231,"src":"4008:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":228,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4007:18:1"},"src":"3980:46:1"},{"documentation":{"id":232,"nodeType":"StructuredDocumentation","src":"4032:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"5b08ba18","id":236,"name":"ERC721InvalidOperator","nameLocation":"4240:21:1","nodeType":"ErrorDefinition","parameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"operator","nameLocation":"4270:8:1","nodeType":"VariableDeclaration","scope":236,"src":"4262:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":233,"name":"address","nodeType":"ElementaryTypeName","src":"4262:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4261:18:1"},"src":"4234:46:1"}],"scope":285,"src":"2190:2092:1","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1155Errors","contractDependencies":[],"contractKind":"interface","documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4284:145:1","text":" @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."},"fullyImplemented":true,"id":284,"linearizedBaseContracts":[284],"name":"IERC1155Errors","nameLocation":"4440:14:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":239,"nodeType":"StructuredDocumentation","src":"4461:361:1","text":" @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."},"errorSelector":"03dee4c5","id":249,"name":"ERC1155InsufficientBalance","nameLocation":"4833:26:1","nodeType":"ErrorDefinition","parameters":{"id":248,"nodeType":"ParameterList","parameters":[{"constant":false,"id":241,"mutability":"mutable","name":"sender","nameLocation":"4868:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4860:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":240,"name":"address","nodeType":"ElementaryTypeName","src":"4860:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":243,"mutability":"mutable","name":"balance","nameLocation":"4884:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4876:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":242,"name":"uint256","nodeType":"ElementaryTypeName","src":"4876:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":245,"mutability":"mutable","name":"needed","nameLocation":"4901:6:1","nodeType":"VariableDeclaration","scope":249,"src":"4893:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":244,"name":"uint256","nodeType":"ElementaryTypeName","src":"4893:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":247,"mutability":"mutable","name":"tokenId","nameLocation":"4917:7:1","nodeType":"VariableDeclaration","scope":249,"src":"4909:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":246,"name":"uint256","nodeType":"ElementaryTypeName","src":"4909:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4859:66:1"},"src":"4827:99:1"},{"documentation":{"id":250,"nodeType":"StructuredDocumentation","src":"4932:152:1","text":" @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."},"errorSelector":"01a83514","id":254,"name":"ERC1155InvalidSender","nameLocation":"5095:20:1","nodeType":"ErrorDefinition","parameters":{"id":253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":252,"mutability":"mutable","name":"sender","nameLocation":"5124:6:1","nodeType":"VariableDeclaration","scope":254,"src":"5116:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":251,"name":"address","nodeType":"ElementaryTypeName","src":"5116:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5115:16:1"},"src":"5089:43:1"},{"documentation":{"id":255,"nodeType":"StructuredDocumentation","src":"5138:159:1","text":" @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."},"errorSelector":"57f447ce","id":259,"name":"ERC1155InvalidReceiver","nameLocation":"5308:22:1","nodeType":"ErrorDefinition","parameters":{"id":258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":257,"mutability":"mutable","name":"receiver","nameLocation":"5339:8:1","nodeType":"VariableDeclaration","scope":259,"src":"5331:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"5331:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5330:18:1"},"src":"5302:47:1"},{"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"5355:256:1","text":" @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."},"errorSelector":"e237d922","id":266,"name":"ERC1155MissingApprovalForAll","nameLocation":"5622:28:1","nodeType":"ErrorDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":262,"mutability":"mutable","name":"operator","nameLocation":"5659:8:1","nodeType":"VariableDeclaration","scope":266,"src":"5651:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":261,"name":"address","nodeType":"ElementaryTypeName","src":"5651:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"owner","nameLocation":"5677:5:1","nodeType":"VariableDeclaration","scope":266,"src":"5669:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"5669:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5650:33:1"},"src":"5616:68:1"},{"documentation":{"id":267,"nodeType":"StructuredDocumentation","src":"5690:174:1","text":" @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."},"errorSelector":"3e31884e","id":271,"name":"ERC1155InvalidApprover","nameLocation":"5875:22:1","nodeType":"ErrorDefinition","parameters":{"id":270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":269,"mutability":"mutable","name":"approver","nameLocation":"5906:8:1","nodeType":"VariableDeclaration","scope":271,"src":"5898:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":268,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5897:18:1"},"src":"5869:47:1"},{"documentation":{"id":272,"nodeType":"StructuredDocumentation","src":"5922:197:1","text":" @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."},"errorSelector":"ced3e100","id":276,"name":"ERC1155InvalidOperator","nameLocation":"6130:22:1","nodeType":"ErrorDefinition","parameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"operator","nameLocation":"6161:8:1","nodeType":"VariableDeclaration","scope":276,"src":"6153:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"6153:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6152:18:1"},"src":"6124:47:1"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"6177:280:1","text":" @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"},"errorSelector":"5b059991","id":283,"name":"ERC1155InvalidArrayLength","nameLocation":"6468:25:1","nodeType":"ErrorDefinition","parameters":{"id":282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"idsLength","nameLocation":"6502:9:1","nodeType":"VariableDeclaration","scope":283,"src":"6494:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"6494:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":281,"mutability":"mutable","name":"valuesLength","nameLocation":"6521:12:1","nodeType":"VariableDeclaration","scope":283,"src":"6513:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":280,"name":"uint256","nodeType":"ElementaryTypeName","src":"6513:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6493:41:1"},"src":"6462:73:1"}],"scope":285,"src":"4430:2107:1","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[]}],"src":"112:6426:1"},"id":1},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","exportedSymbols":{"Arrays":[3611],"Context":[3673],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[5405],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[5417]},"id":1202,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":286,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:2"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"./IERC1155.sol","id":288,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1325,"src":"135:40:2","symbolAliases":[{"foreign":{"id":287,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"143:8:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","file":"./extensions/IERC1155MetadataURI.sol","id":290,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1383,"src":"176:73:2","symbolAliases":[{"foreign":{"id":289,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"184:19:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","file":"./utils/ERC1155Utils.sol","id":292,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":1537,"src":"250:54:2","symbolAliases":[{"foreign":{"id":291,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"258:12:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":294,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":3674,"src":"305:48:2","symbolAliases":[{"foreign":{"id":293,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"313:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":297,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":5406,"src":"354:69:2","symbolAliases":[{"foreign":{"id":295,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"362:7:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":296,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"371:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","file":"../../utils/Arrays.sol","id":299,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":3612,"src":"424:46:2","symbolAliases":[{"foreign":{"id":298,"name":"Arrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3611,"src":"432:6:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":301,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1202,"sourceUnit":285,"src":"471:67:2","symbolAliases":[{"foreign":{"id":300,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"479:14:2","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":303,"name":"Context","nameLocations":["754:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"754:7:2"},"id":304,"nodeType":"InheritanceSpecifier","src":"754:7:2"},{"baseName":{"id":305,"name":"ERC165","nameLocations":["763:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5405,"src":"763:6:2"},"id":306,"nodeType":"InheritanceSpecifier","src":"763:6:2"},{"baseName":{"id":307,"name":"IERC1155","nameLocations":["771:8:2"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"771:8:2"},"id":308,"nodeType":"InheritanceSpecifier","src":"771:8:2"},{"baseName":{"id":309,"name":"IERC1155MetadataURI","nameLocations":["781:19:2"],"nodeType":"IdentifierPath","referencedDeclaration":1382,"src":"781:19:2"},"id":310,"nodeType":"InheritanceSpecifier","src":"781:19:2"},{"baseName":{"id":311,"name":"IERC1155Errors","nameLocations":["802:14:2"],"nodeType":"IdentifierPath","referencedDeclaration":284,"src":"802:14:2"},"id":312,"nodeType":"InheritanceSpecifier","src":"802:14:2"}],"canonicalName":"ERC1155","contractDependencies":[],"contractKind":"contract","documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"540:184:2","text":" @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"},"fullyImplemented":true,"id":1201,"linearizedBaseContracts":[1201,284,1382,1324,5405,5417,3673],"name":"ERC1155","nameLocation":"743:7:2","nodeType":"ContractDefinition","nodes":[{"global":false,"id":316,"libraryName":{"id":313,"name":"Arrays","nameLocations":["829:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3611,"src":"829:6:2"},"nodeType":"UsingForDirective","src":"823:27:2","typeName":{"baseType":{"id":314,"name":"uint256","nodeType":"ElementaryTypeName","src":"840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":315,"nodeType":"ArrayTypeName","src":"840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},{"global":false,"id":320,"libraryName":{"id":317,"name":"Arrays","nameLocations":["861:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":3611,"src":"861:6:2"},"nodeType":"UsingForDirective","src":"855:27:2","typeName":{"baseType":{"id":318,"name":"address","nodeType":"ElementaryTypeName","src":"872:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":319,"nodeType":"ArrayTypeName","src":"872:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},{"constant":false,"id":326,"mutability":"mutable","name":"_balances","nameLocation":"955:9:2","nodeType":"VariableDeclaration","scope":1201,"src":"888:76:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"typeName":{"id":325,"keyName":"id","keyNameLocation":"904:2:2","keyType":{"id":321,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"888:58:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":324,"keyName":"account","keyNameLocation":"926:7:2","keyType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"918:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"910:35:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":323,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1041:18:2","nodeType":"VariableDeclaration","scope":1201,"src":"971:88:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":331,"keyName":"account","keyNameLocation":"987:7:2","keyType":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"979:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"971:61:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"keyName":"operator","keyNameLocation":"1014:8:2","keyType":{"id":328,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"998:33:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"1026:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":334,"mutability":"mutable","name":"_uri","nameLocation":"1195:4:2","nodeType":"VariableDeclaration","scope":1201,"src":"1180:19:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":333,"name":"string","nodeType":"ElementaryTypeName","src":"1180:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":344,"nodeType":"Block","src":"1281:30:2","statements":[{"expression":{"arguments":[{"id":341,"name":"uri_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":337,"src":"1299:4:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":340,"name":"_setURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1291:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":343,"nodeType":"ExpressionStatement","src":"1291:13:2"}]},"documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"1206:38:2","text":" @dev See {_setURI}."},"id":345,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":337,"mutability":"mutable","name":"uri_","nameLocation":"1275:4:2","nodeType":"VariableDeclaration","scope":345,"src":"1261:18:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":336,"name":"string","nodeType":"ElementaryTypeName","src":"1261:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1260:20:2"},"returnParameters":{"id":339,"nodeType":"ParameterList","parameters":[],"src":"1281:0:2"},"scope":1201,"src":"1249:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5404,5416],"body":{"id":375,"nodeType":"Block","src":"1486:197:2","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":356,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1515:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":358,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"1535:8:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155_$1324_$","typeString":"type(contract IERC1155)"}],"id":357,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1530:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1530:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155_$1324","typeString":"type(contract IERC1155)"}},"id":360,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1545:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1530:26:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1515:41:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":362,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1572:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":364,"name":"IERC1155MetadataURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1382,"src":"1592:19:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC1155MetadataURI_$1382_$","typeString":"type(contract IERC1155MetadataURI)"}],"id":363,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1587:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1587:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1382","typeString":"type(contract IERC1155MetadataURI)"}},"id":366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1613:11:2","memberName":"interfaceId","nodeType":"MemberAccess","src":"1587:37:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1572:52:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:109:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":371,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"1664:11:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":369,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1640:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC1155_$1201_$","typeString":"type(contract super ERC1155)"}},"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1646:17:2","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"1640:23:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1640:36:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1515:161:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":355,"id":374,"nodeType":"Return","src":"1496:180:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1317:56:2","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":376,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1387:17:2","nodeType":"FunctionDefinition","overrides":{"id":352,"nodeType":"OverrideSpecifier","overrides":[{"id":350,"name":"ERC165","nameLocations":["1454:6:2"],"nodeType":"IdentifierPath","referencedDeclaration":5405,"src":"1454:6:2"},{"id":351,"name":"IERC165","nameLocations":["1462:7:2"],"nodeType":"IdentifierPath","referencedDeclaration":5417,"src":"1462:7:2"}],"src":"1445:25:2"},"parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"interfaceId","nameLocation":"1412:11:2","nodeType":"VariableDeclaration","scope":376,"src":"1405:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":347,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1405:6:2","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1404:20:2"},"returnParameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"1480:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":353,"name":"bool","nodeType":"ElementaryTypeName","src":"1480:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1479:6:2"},"scope":1201,"src":"1378:305:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1381],"body":{"id":386,"nodeType":"Block","src":"2157:28:2","statements":[{"expression":{"id":384,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"2174:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":383,"id":385,"nodeType":"Return","src":"2167:11:2"}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"1689:388:2","text":" @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."},"functionSelector":"0e89341c","id":387,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"2091:3:2","nodeType":"FunctionDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2095:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2095:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2094:18:2"},"returnParameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":387,"src":"2142:13:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":381,"name":"string","nodeType":"ElementaryTypeName","src":"2142:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2141:15:2"},"scope":1201,"src":"2082:103:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1262],"body":{"id":403,"nodeType":"Block","src":"2331:46:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":397,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"2348:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":399,"indexExpression":{"id":398,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"2358:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":401,"indexExpression":{"id":400,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"2362:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2348:22:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":396,"id":402,"nodeType":"Return","src":"2341:29:2"}]},"documentation":{"id":388,"nodeType":"StructuredDocumentation","src":"2191:49:2","text":" @dev See {IERC1155-balanceOf}."},"functionSelector":"00fdd58e","id":404,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"2254:9:2","nodeType":"FunctionDefinition","parameters":{"id":393,"nodeType":"ParameterList","parameters":[{"constant":false,"id":390,"mutability":"mutable","name":"account","nameLocation":"2272:7:2","nodeType":"VariableDeclaration","scope":404,"src":"2264:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"2264:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"id","nameLocation":"2289:2:2","nodeType":"VariableDeclaration","scope":404,"src":"2281:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2263:29:2"},"returnParameters":{"id":396,"nodeType":"ParameterList","parameters":[{"constant":false,"id":395,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":404,"src":"2322:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":394,"name":"uint256","nodeType":"ElementaryTypeName","src":"2322:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2321:9:2"},"scope":1201,"src":"2245:132:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1275],"body":{"id":473,"nodeType":"Block","src":"2676:410:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":417,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2690:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2699:6:2","memberName":"length","nodeType":"MemberAccess","src":"2690:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":419,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2709:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2713:6:2","memberName":"length","nodeType":"MemberAccess","src":"2709:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2690:29:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":430,"nodeType":"IfStatement","src":"2686:121:2","trueBody":{"id":429,"nodeType":"Block","src":"2721:86:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":423,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"2768:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2772:6:2","memberName":"length","nodeType":"MemberAccess","src":"2768:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":425,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2780:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2789:6:2","memberName":"length","nodeType":"MemberAccess","src":"2780:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":422,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2742:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":427,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2742:54:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":428,"nodeType":"RevertStatement","src":"2735:61:2"}]}},{"assignments":[435],"declarations":[{"constant":false,"id":435,"mutability":"mutable","name":"batchBalances","nameLocation":"2834:13:2","nodeType":"VariableDeclaration","scope":473,"src":"2817:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":433,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":434,"nodeType":"ArrayTypeName","src":"2817:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":442,"initialValue":{"arguments":[{"expression":{"id":439,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2864:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2873:6:2","memberName":"length","nodeType":"MemberAccess","src":"2864:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2850:13:2","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"2854:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":437,"nodeType":"ArrayTypeName","src":"2854:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":441,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2850:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"2817:63:2"},{"body":{"id":469,"nodeType":"Block","src":"2937:112:2","statements":[{"expression":{"id":467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":454,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"2951:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":456,"indexExpression":{"id":455,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2965:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2951:16:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":460,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3008:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":458,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2980:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2989:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3551,"src":"2980:27:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (address[] memory,uint256) pure returns (address)"}},"id":461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2980:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":464,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"3035:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":462,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":411,"src":"3012:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3016:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"3012:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3012:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":457,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":404,"src":"2970:9:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$","typeString":"function (address,uint256) view returns (uint256)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2970:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2951:87:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":468,"nodeType":"ExpressionStatement","src":"2951:87:2"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2911:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":448,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"2915:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2924:6:2","memberName":"length","nodeType":"MemberAccess","src":"2915:15:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2911:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":470,"initializationExpression":{"assignments":[444],"declarations":[{"constant":false,"id":444,"mutability":"mutable","name":"i","nameLocation":"2904:1:2","nodeType":"VariableDeclaration","scope":470,"src":"2896:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":443,"name":"uint256","nodeType":"ElementaryTypeName","src":"2896:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":446,"initialValue":{"hexValue":"30","id":445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2908:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2896:13:2"},"loopExpression":{"expression":{"id":452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"2932:3:2","subExpression":{"id":451,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":444,"src":"2934:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":453,"nodeType":"ExpressionStatement","src":"2932:3:2"},"nodeType":"ForStatement","src":"2891:158:2"},{"expression":{"id":471,"name":"batchBalances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":435,"src":"3066:13:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":416,"id":472,"nodeType":"Return","src":"3059:20:2"}]},"documentation":{"id":405,"nodeType":"StructuredDocumentation","src":"2383:146:2","text":" @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":474,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"2543:14:2","nodeType":"FunctionDefinition","parameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"accounts","nameLocation":"2584:8:2","nodeType":"VariableDeclaration","scope":474,"src":"2567:25:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":406,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":407,"nodeType":"ArrayTypeName","src":"2567:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"ids","nameLocation":"2619:3:2","nodeType":"VariableDeclaration","scope":474,"src":"2602:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":409,"name":"uint256","nodeType":"ElementaryTypeName","src":"2602:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":410,"nodeType":"ArrayTypeName","src":"2602:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2557:71:2"},"returnParameters":{"id":416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":415,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":474,"src":"2658:16:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2658:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":414,"nodeType":"ArrayTypeName","src":"2658:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2657:18:2"},"scope":1201,"src":"2534:552:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1283],"body":{"id":489,"nodeType":"Block","src":"3229:69:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":483,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3258:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3258:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":485,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":477,"src":"3272:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":486,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":479,"src":"3282:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":482,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1184,"src":"3239:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3239:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"3239:52:2"}]},"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"3092:57:2","text":" @dev See {IERC1155-setApprovalForAll}."},"functionSelector":"a22cb465","id":490,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3163:17:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"operator","nameLocation":"3189:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3181:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":476,"name":"address","nodeType":"ElementaryTypeName","src":"3181:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"approved","nameLocation":"3204:8:2","nodeType":"VariableDeclaration","scope":490,"src":"3199:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":478,"name":"bool","nodeType":"ElementaryTypeName","src":"3199:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3180:33:2"},"returnParameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"3229:0:2"},"scope":1201,"src":"3154:144:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1293],"body":{"id":506,"nodeType":"Block","src":"3461:61:2","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":500,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"3478:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":502,"indexExpression":{"id":501,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":493,"src":"3497:7:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:27:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":504,"indexExpression":{"id":503,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":495,"src":"3506:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3478:37:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":499,"id":505,"nodeType":"Return","src":"3471:44:2"}]},"documentation":{"id":491,"nodeType":"StructuredDocumentation","src":"3304:56:2","text":" @dev See {IERC1155-isApprovedForAll}."},"functionSelector":"e985e9c5","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3374:16:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":493,"mutability":"mutable","name":"account","nameLocation":"3399:7:2","nodeType":"VariableDeclaration","scope":507,"src":"3391:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"3391:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"operator","nameLocation":"3416:8:2","nodeType":"VariableDeclaration","scope":507,"src":"3408:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":494,"name":"address","nodeType":"ElementaryTypeName","src":"3408:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3390:35:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":507,"src":"3455:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":497,"name":"bool","nodeType":"ElementaryTypeName","src":"3455:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3454:6:2"},"scope":1201,"src":"3365:157:2","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1307],"body":{"id":550,"nodeType":"Block","src":"3702:238:2","statements":[{"assignments":[522],"declarations":[{"constant":false,"id":522,"mutability":"mutable","name":"sender","nameLocation":"3720:6:2","nodeType":"VariableDeclaration","scope":550,"src":"3712:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":521,"name":"address","nodeType":"ElementaryTypeName","src":"3712:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":525,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":523,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3729:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3729:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3712:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":526,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3755:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":527,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3763:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3755:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3773:31:2","subExpression":{"arguments":[{"id":530,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3791:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":531,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3797:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":529,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"3774:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3774:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3755:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":541,"nodeType":"IfStatement","src":"3751:129:2","trueBody":{"id":540,"nodeType":"Block","src":"3806:74:2","statements":[{"errorCall":{"arguments":[{"id":536,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":522,"src":"3856:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":537,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3864:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":535,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"3827:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3827:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":539,"nodeType":"RevertStatement","src":"3820:49:2"}]}},{"expression":{"arguments":[{"id":543,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3907:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":544,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":512,"src":"3913:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":545,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"3917:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3921:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":547,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":518,"src":"3928:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":542,"name":"_safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":896,"src":"3889:17:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,uint256,bytes memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3889:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3889:44:2"}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"3528:56:2","text":" @dev See {IERC1155-safeTransferFrom}."},"functionSelector":"f242432a","id":551,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3598:16:2","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"from","nameLocation":"3623:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3615:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":509,"name":"address","nodeType":"ElementaryTypeName","src":"3615:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":512,"mutability":"mutable","name":"to","nameLocation":"3637:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3629:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":511,"name":"address","nodeType":"ElementaryTypeName","src":"3629:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":514,"mutability":"mutable","name":"id","nameLocation":"3649:2:2","nodeType":"VariableDeclaration","scope":551,"src":"3641:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":513,"name":"uint256","nodeType":"ElementaryTypeName","src":"3641:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"value","nameLocation":"3661:5:2","nodeType":"VariableDeclaration","scope":551,"src":"3653:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"3653:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"data","nameLocation":"3681:4:2","nodeType":"VariableDeclaration","scope":551,"src":"3668:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3668:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3614:72:2"},"returnParameters":{"id":520,"nodeType":"ParameterList","parameters":[],"src":"3702:0:2"},"scope":1201,"src":"3589:351:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1323],"body":{"id":596,"nodeType":"Block","src":"4196:245:2","statements":[{"assignments":[568],"declarations":[{"constant":false,"id":568,"mutability":"mutable","name":"sender","nameLocation":"4214:6:2","nodeType":"VariableDeclaration","scope":596,"src":"4206:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"4206:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":571,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4223:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4206:29:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4249:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":573,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4257:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4249:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":579,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4267:31:2","subExpression":{"arguments":[{"id":576,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4285:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":577,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4291:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":575,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"4268:16:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4268:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4249:49:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":587,"nodeType":"IfStatement","src":"4245:129:2","trueBody":{"id":586,"nodeType":"Block","src":"4300:74:2","statements":[{"errorCall":{"arguments":[{"id":582,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"4350:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4358:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":581,"name":"ERC1155MissingApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":266,"src":"4321:28:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_address_$returns$__$","typeString":"function (address,address) pure"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4321:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":585,"nodeType":"RevertStatement","src":"4314:49:2"}]}},{"expression":{"arguments":[{"id":589,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"4406:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":590,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"4412:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":591,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":559,"src":"4416:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":592,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"4421:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":593,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":564,"src":"4429:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":588,"name":"_safeBatchTransferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":951,"src":"4383:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4383:51:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"4383:51:2"}]},"documentation":{"id":552,"nodeType":"StructuredDocumentation","src":"3946:61:2","text":" @dev See {IERC1155-safeBatchTransferFrom}."},"functionSelector":"2eb2c2d6","id":597,"implemented":true,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4021:21:2","nodeType":"FunctionDefinition","parameters":{"id":565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":554,"mutability":"mutable","name":"from","nameLocation":"4060:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4052:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"4052:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":556,"mutability":"mutable","name":"to","nameLocation":"4082:2:2","nodeType":"VariableDeclaration","scope":597,"src":"4074:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":555,"name":"address","nodeType":"ElementaryTypeName","src":"4074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":559,"mutability":"mutable","name":"ids","nameLocation":"4111:3:2","nodeType":"VariableDeclaration","scope":597,"src":"4094:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":557,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":558,"nodeType":"ArrayTypeName","src":"4094:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":562,"mutability":"mutable","name":"values","nameLocation":"4141:6:2","nodeType":"VariableDeclaration","scope":597,"src":"4124:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":560,"name":"uint256","nodeType":"ElementaryTypeName","src":"4124:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":561,"nodeType":"ArrayTypeName","src":"4124:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":564,"mutability":"mutable","name":"data","nameLocation":"4170:4:2","nodeType":"VariableDeclaration","scope":597,"src":"4157:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":563,"name":"bytes","nodeType":"ElementaryTypeName","src":"4157:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4042:138:2"},"returnParameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"4196:0:2"},"scope":1201,"src":"4012:429:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":749,"nodeType":"Block","src":"5249:1174:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":611,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5263:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5267:6:2","memberName":"length","nodeType":"MemberAccess","src":"5263:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":613,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5277:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5284:6:2","memberName":"length","nodeType":"MemberAccess","src":"5277:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:27:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":624,"nodeType":"IfStatement","src":"5259:117:2","trueBody":{"id":623,"nodeType":"Block","src":"5292:84:2","statements":[{"errorCall":{"arguments":[{"expression":{"id":617,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5339:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5343:6:2","memberName":"length","nodeType":"MemberAccess","src":"5339:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":619,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5351:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5358:6:2","memberName":"length","nodeType":"MemberAccess","src":"5351:13:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"ERC1155InvalidArrayLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5313:25:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5313:52:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"RevertStatement","src":"5306:59:2"}]}},{"assignments":[626],"declarations":[{"constant":false,"id":626,"mutability":"mutable","name":"operator","nameLocation":"5394:8:2","nodeType":"VariableDeclaration","scope":749,"src":"5386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":625,"name":"address","nodeType":"ElementaryTypeName","src":"5386:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":629,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":627,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5405:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5405:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5386:31:2"},{"body":{"id":710,"nodeType":"Block","src":"5469:650:2","statements":[{"assignments":[642],"declarations":[{"constant":false,"id":642,"mutability":"mutable","name":"id","nameLocation":"5491:2:2","nodeType":"VariableDeclaration","scope":710,"src":"5483:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5483:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":647,"initialValue":{"arguments":[{"id":645,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5519:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":643,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5496:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5500:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"5496:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5496:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5483:38:2"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"value","nameLocation":"5543:5:2","nodeType":"VariableDeclaration","scope":710,"src":"5535:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint256","nodeType":"ElementaryTypeName","src":"5535:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5577:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":650,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"5551:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5558:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"5551:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5551:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5535:44:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":655,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5598:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5614:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5606:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"5606:7:2","typeDescriptions":{}}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5606:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5598:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":693,"nodeType":"IfStatement","src":"5594:420:2","trueBody":{"id":692,"nodeType":"Block","src":"5618:396:2","statements":[{"assignments":[662],"declarations":[{"constant":false,"id":662,"mutability":"mutable","name":"fromBalance","nameLocation":"5644:11:2","nodeType":"VariableDeclaration","scope":692,"src":"5636:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"5636:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":668,"initialValue":{"baseExpression":{"baseExpression":{"id":663,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5658:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":665,"indexExpression":{"id":664,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5668:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":667,"indexExpression":{"id":666,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5672:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5658:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5636:41:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5699:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5713:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5699:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":680,"nodeType":"IfStatement","src":"5695:129:2","trueBody":{"id":679,"nodeType":"Block","src":"5720:104:2","statements":[{"errorCall":{"arguments":[{"id":673,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5776:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":674,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5782:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5795:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":676,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5802:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":672,"name":"ERC1155InsufficientBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"5749:26:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256,uint256) pure"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":678,"nodeType":"RevertStatement","src":"5742:63:2"}]}},{"id":691,"nodeType":"UncheckedBlock","src":"5841:159:2","statements":[{"expression":{"id":689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":681,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"5940:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":684,"indexExpression":{"id":682,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"5950:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5940:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":685,"indexExpression":{"id":683,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"5954:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5940:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":686,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"5962:11:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5976:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5962:19:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5940:41:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":690,"nodeType":"ExpressionStatement","src":"5940:41:2"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6032:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6046:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"6038:7:2","typeDescriptions":{}}},"id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6032:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":709,"nodeType":"IfStatement","src":"6028:81:2","trueBody":{"id":708,"nodeType":"Block","src":"6050:59:2","statements":[{"expression":{"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":700,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":326,"src":"6068:9:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(uint256 => mapping(address => uint256))"}},"id":703,"indexExpression":{"id":701,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":642,"src":"6078:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6068:13:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":704,"indexExpression":{"id":702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6082:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6068:17:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"6089:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6068:26:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":707,"nodeType":"ExpressionStatement","src":"6068:26:2"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":634,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5448:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":635,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5452:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5456:6:2","memberName":"length","nodeType":"MemberAccess","src":"5452:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5448:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":711,"initializationExpression":{"assignments":[631],"declarations":[{"constant":false,"id":631,"mutability":"mutable","name":"i","nameLocation":"5441:1:2","nodeType":"VariableDeclaration","scope":711,"src":"5433:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":630,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":633,"initialValue":{"hexValue":"30","id":632,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5445:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5433:13:2"},"loopExpression":{"expression":{"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"5464:3:2","subExpression":{"id":638,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":631,"src":"5466:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":640,"nodeType":"ExpressionStatement","src":"5464:3:2"},"nodeType":"ForStatement","src":"5428:691:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":712,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6133:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6137:6:2","memberName":"length","nodeType":"MemberAccess","src":"6133:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6147:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6133:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":747,"nodeType":"Block","src":"6341:76:2","statements":[{"eventCall":{"arguments":[{"id":740,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6374:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":741,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6384:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":742,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6390:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":743,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6394:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":744,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6399:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":739,"name":"TransferBatch","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6360:13:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory)"}},"id":745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6360:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":746,"nodeType":"EmitStatement","src":"6355:51:2"}]},"id":748,"nodeType":"IfStatement","src":"6129:288:2","trueBody":{"id":738,"nodeType":"Block","src":"6150:185:2","statements":[{"assignments":[717],"declarations":[{"constant":false,"id":717,"mutability":"mutable","name":"id","nameLocation":"6172:2:2","nodeType":"VariableDeclaration","scope":738,"src":"6164:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":716,"name":"uint256","nodeType":"ElementaryTypeName","src":"6164:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":722,"initialValue":{"arguments":[{"hexValue":"30","id":720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6200:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":718,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"6177:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6181:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"6177:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6177:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6164:38:2"},{"assignments":[724],"declarations":[{"constant":false,"id":724,"mutability":"mutable","name":"value","nameLocation":"6224:5:2","nodeType":"VariableDeclaration","scope":738,"src":"6216:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":723,"name":"uint256","nodeType":"ElementaryTypeName","src":"6216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":729,"initialValue":{"arguments":[{"hexValue":"30","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6258:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":725,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":608,"src":"6232:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6239:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"6232:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6232:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6216:44:2"},{"eventCall":{"arguments":[{"id":731,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":626,"src":"6294:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":732,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":600,"src":"6304:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":733,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6310:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":734,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6314:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":735,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6318:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":730,"name":"TransferSingle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1221,"src":"6279:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,address,uint256,uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6279:45:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"EmitStatement","src":"6274:50:2"}]}}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"4447:690:2","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."},"id":750,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"5151:7:2","nodeType":"FunctionDefinition","parameters":{"id":609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":600,"mutability":"mutable","name":"from","nameLocation":"5167:4:2","nodeType":"VariableDeclaration","scope":750,"src":"5159:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":599,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"to","nameLocation":"5181:2:2","nodeType":"VariableDeclaration","scope":750,"src":"5173:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"5173:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"ids","nameLocation":"5202:3:2","nodeType":"VariableDeclaration","scope":750,"src":"5185:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":603,"name":"uint256","nodeType":"ElementaryTypeName","src":"5185:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":604,"nodeType":"ArrayTypeName","src":"5185:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":608,"mutability":"mutable","name":"values","nameLocation":"5224:6:2","nodeType":"VariableDeclaration","scope":750,"src":"5207:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":606,"name":"uint256","nodeType":"ElementaryTypeName","src":"5207:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ArrayTypeName","src":"5207:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5158:73:2"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[],"src":"5249:0:2"},"scope":1201,"src":"5142:1281:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":829,"nodeType":"Block","src":"7193:509:2","statements":[{"expression":{"arguments":[{"id":767,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7211:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":768,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7217:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":769,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7221:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":770,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7226:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":766,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":750,"src":"7203:7:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory)"}},"id":771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":772,"nodeType":"ExpressionStatement","src":"7203:30:2"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":773,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7247:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7261:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7253:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":774,"name":"address","nodeType":"ElementaryTypeName","src":"7253:7:2","typeDescriptions":{}}},"id":777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7253:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7247:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":828,"nodeType":"IfStatement","src":"7243:453:2","trueBody":{"id":827,"nodeType":"Block","src":"7265:431:2","statements":[{"assignments":[780],"declarations":[{"constant":false,"id":780,"mutability":"mutable","name":"operator","nameLocation":"7287:8:2","nodeType":"VariableDeclaration","scope":827,"src":"7279:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"7279:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":783,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":781,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"7298:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7298:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7279:31:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":784,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7328:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7332:6:2","memberName":"length","nodeType":"MemberAccess","src":"7328:10:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7342:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7328:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":825,"nodeType":"Block","src":"7574:112:2","statements":[{"expression":{"arguments":[{"id":817,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7633:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":818,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7643:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":819,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7649:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":820,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7653:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":821,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7658:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":822,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7666:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":814,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7592:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7605:27:2","memberName":"checkOnERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1535,"src":"7592:40:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":823,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7592:79:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":824,"nodeType":"ExpressionStatement","src":"7592:79:2"}]},"id":826,"nodeType":"IfStatement","src":"7324:362:2","trueBody":{"id":813,"nodeType":"Block","src":"7345:223:2","statements":[{"assignments":[789],"declarations":[{"constant":false,"id":789,"mutability":"mutable","name":"id","nameLocation":"7371:2:2","nodeType":"VariableDeclaration","scope":813,"src":"7363:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"7363:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":794,"initialValue":{"arguments":[{"hexValue":"30","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7399:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":790,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":758,"src":"7376:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7380:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"7376:22:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7376:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7363:38:2"},{"assignments":[796],"declarations":[{"constant":false,"id":796,"mutability":"mutable","name":"value","nameLocation":"7427:5:2","nodeType":"VariableDeclaration","scope":813,"src":"7419:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":795,"name":"uint256","nodeType":"ElementaryTypeName","src":"7419:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":801,"initialValue":{"arguments":[{"hexValue":"30","id":799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7461:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"id":797,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":761,"src":"7435:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7442:18:2","memberName":"unsafeMemoryAccess","nodeType":"MemberAccess","referencedDeclaration":3577,"src":"7435:25:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7435:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7419:44:2"},{"expression":{"arguments":[{"id":805,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":780,"src":"7517:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":806,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":753,"src":"7527:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":807,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":755,"src":"7533:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":808,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":789,"src":"7537:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":796,"src":"7541:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":810,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":763,"src":"7548:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":802,"name":"ERC1155Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1536,"src":"7481:12:2","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1155Utils_$1536_$","typeString":"type(library ERC1155Utils)"}},"id":804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7494:22:2","memberName":"checkOnERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1461,"src":"7481:35:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,uint256,bytes memory)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7481:72:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":812,"nodeType":"ExpressionStatement","src":"7481:72:2"}]}}]}}]},"documentation":{"id":751,"nodeType":"StructuredDocumentation","src":"6429:568:2","text":" @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."},"id":830,"implemented":true,"kind":"function","modifiers":[],"name":"_updateWithAcceptanceCheck","nameLocation":"7011:26:2","nodeType":"FunctionDefinition","parameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"7055:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7047:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"7047:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"7077:2:2","nodeType":"VariableDeclaration","scope":830,"src":"7069:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"7069:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":758,"mutability":"mutable","name":"ids","nameLocation":"7106:3:2","nodeType":"VariableDeclaration","scope":830,"src":"7089:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"7089:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":757,"nodeType":"ArrayTypeName","src":"7089:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":761,"mutability":"mutable","name":"values","nameLocation":"7136:6:2","nodeType":"VariableDeclaration","scope":830,"src":"7119:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":759,"name":"uint256","nodeType":"ElementaryTypeName","src":"7119:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":760,"nodeType":"ArrayTypeName","src":"7119:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":763,"mutability":"mutable","name":"data","nameLocation":"7165:4:2","nodeType":"VariableDeclaration","scope":830,"src":"7152:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":762,"name":"bytes","nodeType":"ElementaryTypeName","src":"7152:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7037:138:2"},"returnParameters":{"id":765,"nodeType":"ParameterList","parameters":[],"src":"7193:0:2"},"scope":1201,"src":"7002:700:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":895,"nodeType":"Block","src":"8267:355:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":844,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8281:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8295:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8287:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"8287:7:2","typeDescriptions":{}}},"id":848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8287:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8281:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":858,"nodeType":"IfStatement","src":"8277:88:2","trueBody":{"id":857,"nodeType":"Block","src":"8299:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8351:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":852,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":851,"name":"address","nodeType":"ElementaryTypeName","src":"8343:7:2","typeDescriptions":{}}},"id":854,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":850,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"8320:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8320:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":856,"nodeType":"RevertStatement","src":"8313:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":859,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8378:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8394:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8386:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":860,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:2","typeDescriptions":{}}},"id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8386:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8378:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":873,"nodeType":"IfStatement","src":"8374:88:2","trueBody":{"id":872,"nodeType":"Block","src":"8398:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8448:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":867,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8440:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":866,"name":"address","nodeType":"ElementaryTypeName","src":"8440:7:2","typeDescriptions":{}}},"id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8440:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":865,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"8419:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8419:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":871,"nodeType":"RevertStatement","src":"8412:39:2"}]}},{"assignments":[878,881],"declarations":[{"constant":false,"id":878,"mutability":"mutable","name":"ids","nameLocation":"8489:3:2","nodeType":"VariableDeclaration","scope":895,"src":"8472:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"8472:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":877,"nodeType":"ArrayTypeName","src":"8472:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":881,"mutability":"mutable","name":"values","nameLocation":"8511:6:2","nodeType":"VariableDeclaration","scope":895,"src":"8494:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"8494:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":880,"nodeType":"ArrayTypeName","src":"8494:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":886,"initialValue":{"arguments":[{"id":883,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":837,"src":"8540:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":839,"src":"8544:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":882,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"8521:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8521:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"8471:79:2"},{"expression":{"arguments":[{"id":888,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":833,"src":"8587:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":889,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"8593:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":890,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"8597:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":891,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"8602:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":892,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":841,"src":"8610:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":887,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"8560:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"ExpressionStatement","src":"8560:55:2"}]},"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"7708:446:2","text":" @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":896,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransferFrom","nameLocation":"8168:17:2","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"from","nameLocation":"8194:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8186:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8186:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":835,"mutability":"mutable","name":"to","nameLocation":"8208:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8200:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":834,"name":"address","nodeType":"ElementaryTypeName","src":"8200:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":837,"mutability":"mutable","name":"id","nameLocation":"8220:2:2","nodeType":"VariableDeclaration","scope":896,"src":"8212:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":836,"name":"uint256","nodeType":"ElementaryTypeName","src":"8212:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":839,"mutability":"mutable","name":"value","nameLocation":"8232:5:2","nodeType":"VariableDeclaration","scope":896,"src":"8224:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":838,"name":"uint256","nodeType":"ElementaryTypeName","src":"8224:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"data","nameLocation":"8252:4:2","nodeType":"VariableDeclaration","scope":896,"src":"8239:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":840,"name":"bytes","nodeType":"ElementaryTypeName","src":"8239:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8185:72:2"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"8267:0:2"},"scope":1201,"src":"8159:463:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":950,"nodeType":"Block","src":"9202:266:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":912,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9216:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":915,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9230:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":914,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":913,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:2","typeDescriptions":{}}},"id":916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9222:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9216:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":926,"nodeType":"IfStatement","src":"9212:88:2","trueBody":{"id":925,"nodeType":"Block","src":"9234:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9286:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9278:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":919,"name":"address","nodeType":"ElementaryTypeName","src":"9278:7:2","typeDescriptions":{}}},"id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9278:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":918,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"9255:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9255:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"RevertStatement","src":"9248:41:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":927,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9313:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9329:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9321:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":928,"name":"address","nodeType":"ElementaryTypeName","src":"9321:7:2","typeDescriptions":{}}},"id":931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9321:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9313:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":941,"nodeType":"IfStatement","src":"9309:88:2","trueBody":{"id":940,"nodeType":"Block","src":"9333:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":936,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9383:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9375:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":934,"name":"address","nodeType":"ElementaryTypeName","src":"9375:7:2","typeDescriptions":{}}},"id":937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9375:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":933,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"9354:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9354:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":939,"nodeType":"RevertStatement","src":"9347:39:2"}]}},{"expression":{"arguments":[{"id":943,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"9433:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":944,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":901,"src":"9439:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":945,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":904,"src":"9443:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":946,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":907,"src":"9448:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":947,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":909,"src":"9456:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":942,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"9406:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9406:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":949,"nodeType":"ExpressionStatement","src":"9406:55:2"}]},"documentation":{"id":897,"nodeType":"StructuredDocumentation","src":"8628:390:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."},"id":951,"implemented":true,"kind":"function","modifiers":[],"name":"_safeBatchTransferFrom","nameLocation":"9032:22:2","nodeType":"FunctionDefinition","parameters":{"id":910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":899,"mutability":"mutable","name":"from","nameLocation":"9072:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9064:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":898,"name":"address","nodeType":"ElementaryTypeName","src":"9064:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"to","nameLocation":"9094:2:2","nodeType":"VariableDeclaration","scope":951,"src":"9086:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":900,"name":"address","nodeType":"ElementaryTypeName","src":"9086:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":904,"mutability":"mutable","name":"ids","nameLocation":"9123:3:2","nodeType":"VariableDeclaration","scope":951,"src":"9106:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"9106:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":903,"nodeType":"ArrayTypeName","src":"9106:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"values","nameLocation":"9153:6:2","nodeType":"VariableDeclaration","scope":951,"src":"9136:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"9136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":906,"nodeType":"ArrayTypeName","src":"9136:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"data","nameLocation":"9182:4:2","nodeType":"VariableDeclaration","scope":951,"src":"9169:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":908,"name":"bytes","nodeType":"ElementaryTypeName","src":"9169:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"9054:138:2"},"returnParameters":{"id":911,"nodeType":"ParameterList","parameters":[],"src":"9202:0:2"},"scope":1201,"src":"9023:445:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":961,"nodeType":"Block","src":"10346:30:2","statements":[{"expression":{"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":957,"name":"_uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":334,"src":"10356:4:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":958,"name":"newuri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":954,"src":"10363:6:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"10356:13:2","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":960,"nodeType":"ExpressionStatement","src":"10356:13:2"}]},"documentation":{"id":952,"nodeType":"StructuredDocumentation","src":"9474:811:2","text":" @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."},"id":962,"implemented":true,"kind":"function","modifiers":[],"name":"_setURI","nameLocation":"10299:7:2","nodeType":"FunctionDefinition","parameters":{"id":955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":954,"mutability":"mutable","name":"newuri","nameLocation":"10321:6:2","nodeType":"VariableDeclaration","scope":962,"src":"10307:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":953,"name":"string","nodeType":"ElementaryTypeName","src":"10307:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10306:22:2"},"returnParameters":{"id":956,"nodeType":"ParameterList","parameters":[],"src":"10346:0:2"},"scope":1201,"src":"10290:86:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1013,"nodeType":"Block","src":"10836:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":974,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"10850:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10864:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10856:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":975,"name":"address","nodeType":"ElementaryTypeName","src":"10856:7:2","typeDescriptions":{}}},"id":978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10856:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10850:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":988,"nodeType":"IfStatement","src":"10846:88:2","trueBody":{"id":987,"nodeType":"Block","src":"10868:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10920:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10912:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10912:7:2","typeDescriptions":{}}},"id":984,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10912:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":980,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"10889:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10889:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":986,"nodeType":"RevertStatement","src":"10882:41:2"}]}},{"assignments":[993,996],"declarations":[{"constant":false,"id":993,"mutability":"mutable","name":"ids","nameLocation":"10961:3:2","nodeType":"VariableDeclaration","scope":1013,"src":"10944:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":991,"name":"uint256","nodeType":"ElementaryTypeName","src":"10944:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":992,"nodeType":"ArrayTypeName","src":"10944:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"values","nameLocation":"10983:6:2","nodeType":"VariableDeclaration","scope":1013,"src":"10966:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":994,"name":"uint256","nodeType":"ElementaryTypeName","src":"10966:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":995,"nodeType":"ArrayTypeName","src":"10966:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1001,"initialValue":{"arguments":[{"id":998,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"11012:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":999,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":969,"src":"11016:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":997,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"10993:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10993:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"10943:79:2"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1005,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11067:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11059:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1003,"name":"address","nodeType":"ElementaryTypeName","src":"11059:7:2","typeDescriptions":{}}},"id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11059:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":965,"src":"11071:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1008,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"11075:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1009,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":996,"src":"11080:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1010,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":971,"src":"11088:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1002,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11032:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11032:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1012,"nodeType":"ExpressionStatement","src":"11032:61:2"}]},"documentation":{"id":963,"nodeType":"StructuredDocumentation","src":"10382:367:2","text":" @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"id":1014,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"10763:5:2","nodeType":"FunctionDefinition","parameters":{"id":972,"nodeType":"ParameterList","parameters":[{"constant":false,"id":965,"mutability":"mutable","name":"to","nameLocation":"10777:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10769:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"10769:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"id","nameLocation":"10789:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"10781:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":966,"name":"uint256","nodeType":"ElementaryTypeName","src":"10781:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"value","nameLocation":"10801:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"10793:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"10793:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"data","nameLocation":"10821:4:2","nodeType":"VariableDeclaration","scope":1014,"src":"10808:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":970,"name":"bytes","nodeType":"ElementaryTypeName","src":"10808:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10768:58:2"},"returnParameters":{"id":973,"nodeType":"ParameterList","parameters":[],"src":"10836:0:2"},"scope":1201,"src":"10754:346:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1054,"nodeType":"Block","src":"11638:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1028,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11652:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11666:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11658:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1029,"name":"address","nodeType":"ElementaryTypeName","src":"11658:7:2","typeDescriptions":{}}},"id":1032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11658:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11652:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1042,"nodeType":"IfStatement","src":"11648:88:2","trueBody":{"id":1041,"nodeType":"Block","src":"11670:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11722:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11714:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1035,"name":"address","nodeType":"ElementaryTypeName","src":"11714:7:2","typeDescriptions":{}}},"id":1038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11714:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"ERC1155InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"11691:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11691:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1040,"nodeType":"RevertStatement","src":"11684:41:2"}]}},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11780:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11772:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1044,"name":"address","nodeType":"ElementaryTypeName","src":"11772:7:2","typeDescriptions":{}}},"id":1047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11772:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1048,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"11784:2:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1049,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"11788:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1050,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"11793:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1051,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11801:4:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1043,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"11745:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11745:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1053,"nodeType":"ExpressionStatement","src":"11745:61:2"}]},"documentation":{"id":1015,"nodeType":"StructuredDocumentation","src":"11106:420:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"id":1055,"implemented":true,"kind":"function","modifiers":[],"name":"_mintBatch","nameLocation":"11540:10:2","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1017,"mutability":"mutable","name":"to","nameLocation":"11559:2:2","nodeType":"VariableDeclaration","scope":1055,"src":"11551:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1016,"name":"address","nodeType":"ElementaryTypeName","src":"11551:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"ids","nameLocation":"11580:3:2","nodeType":"VariableDeclaration","scope":1055,"src":"11563:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"11563:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1019,"nodeType":"ArrayTypeName","src":"11563:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1023,"mutability":"mutable","name":"values","nameLocation":"11602:6:2","nodeType":"VariableDeclaration","scope":1055,"src":"11585:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1021,"name":"uint256","nodeType":"ElementaryTypeName","src":"11585:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1022,"nodeType":"ArrayTypeName","src":"11585:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"data","nameLocation":"11623:4:2","nodeType":"VariableDeclaration","scope":1055,"src":"11610:17:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1024,"name":"bytes","nodeType":"ElementaryTypeName","src":"11610:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"11550:78:2"},"returnParameters":{"id":1027,"nodeType":"ParameterList","parameters":[],"src":"11638:0:2"},"scope":1201,"src":"11531:282:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1104,"nodeType":"Block","src":"12172:264:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1065,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12186:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12202:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1067,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12194:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"12194:7:2","typeDescriptions":{}}},"id":1069,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12194:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12186:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1079,"nodeType":"IfStatement","src":"12182:88:2","trueBody":{"id":1078,"nodeType":"Block","src":"12206:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12256:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12248:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1072,"name":"address","nodeType":"ElementaryTypeName","src":"12248:7:2","typeDescriptions":{}}},"id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12248:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1071,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12227:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12227:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"RevertStatement","src":"12220:39:2"}]}},{"assignments":[1084,1087],"declarations":[{"constant":false,"id":1084,"mutability":"mutable","name":"ids","nameLocation":"12297:3:2","nodeType":"VariableDeclaration","scope":1104,"src":"12280:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1083,"nodeType":"ArrayTypeName","src":"12280:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"values","nameLocation":"12319:6:2","nodeType":"VariableDeclaration","scope":1104,"src":"12302:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"12302:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1086,"nodeType":"ArrayTypeName","src":"12302:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1092,"initialValue":{"arguments":[{"id":1089,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"12348:2:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"12352:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1088,"name":"_asSingletonArrays","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12329:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12329:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(uint256[] memory,uint256[] memory)"}},"nodeType":"VariableDeclarationStatement","src":"12279:79:2"},{"expression":{"arguments":[{"id":1094,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1058,"src":"12395:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12409:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12401:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"12401:7:2","typeDescriptions":{}}},"id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12401:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1099,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1084,"src":"12413:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1100,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"12418:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12426:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1093,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12368:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12368:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1103,"nodeType":"ExpressionStatement","src":"12368:61:2"}]},"documentation":{"id":1056,"nodeType":"StructuredDocumentation","src":"11819:283:2","text":" @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."},"id":1105,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"12116:5:2","nodeType":"FunctionDefinition","parameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1058,"mutability":"mutable","name":"from","nameLocation":"12130:4:2","nodeType":"VariableDeclaration","scope":1105,"src":"12122:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1057,"name":"address","nodeType":"ElementaryTypeName","src":"12122:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1060,"mutability":"mutable","name":"id","nameLocation":"12144:2:2","nodeType":"VariableDeclaration","scope":1105,"src":"12136:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1059,"name":"uint256","nodeType":"ElementaryTypeName","src":"12136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1062,"mutability":"mutable","name":"value","nameLocation":"12156:5:2","nodeType":"VariableDeclaration","scope":1105,"src":"12148:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1061,"name":"uint256","nodeType":"ElementaryTypeName","src":"12148:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12121:41:2"},"returnParameters":{"id":1064,"nodeType":"ParameterList","parameters":[],"src":"12172:0:2"},"scope":1201,"src":"12107:329:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1143,"nodeType":"Block","src":"12882:175:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1117,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"12896:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12904:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1118,"name":"address","nodeType":"ElementaryTypeName","src":"12904:7:2","typeDescriptions":{}}},"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12904:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12896:18:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1131,"nodeType":"IfStatement","src":"12892:88:2","trueBody":{"id":1130,"nodeType":"Block","src":"12916:64:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12966:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12958:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1124,"name":"address","nodeType":"ElementaryTypeName","src":"12958:7:2","typeDescriptions":{}}},"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12958:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1123,"name":"ERC1155InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"12937:20:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12937:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1129,"nodeType":"RevertStatement","src":"12930:39:2"}]}},{"expression":{"arguments":[{"id":1133,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"13016:4:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13030:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13022:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1134,"name":"address","nodeType":"ElementaryTypeName","src":"13022:7:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13022:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1138,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1111,"src":"13034:3:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1139,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1114,"src":"13039:6:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"hexValue":"","id":1140,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13047:2:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1132,"name":"_updateWithAcceptanceCheck","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":830,"src":"12989:26:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory)"}},"id":1141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:61:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1142,"nodeType":"ExpressionStatement","src":"12989:61:2"}]},"documentation":{"id":1106,"nodeType":"StructuredDocumentation","src":"12442:345:2","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."},"id":1144,"implemented":true,"kind":"function","modifiers":[],"name":"_burnBatch","nameLocation":"12801:10:2","nodeType":"FunctionDefinition","parameters":{"id":1115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"from","nameLocation":"12820:4:2","nodeType":"VariableDeclaration","scope":1144,"src":"12812:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1107,"name":"address","nodeType":"ElementaryTypeName","src":"12812:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"ids","nameLocation":"12843:3:2","nodeType":"VariableDeclaration","scope":1144,"src":"12826:20:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1109,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1110,"nodeType":"ArrayTypeName","src":"12826:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1114,"mutability":"mutable","name":"values","nameLocation":"12865:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"12848:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"12848:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1113,"nodeType":"ArrayTypeName","src":"12848:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12811:61:2"},"returnParameters":{"id":1116,"nodeType":"ParameterList","parameters":[],"src":"12882:0:2"},"scope":1201,"src":"12792:265:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1183,"nodeType":"Block","src":"13369:222:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1154,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13383:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13403:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13395:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"13395:7:2","typeDescriptions":{}}},"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13395:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13383:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1168,"nodeType":"IfStatement","src":"13379:94:2","trueBody":{"id":1167,"nodeType":"Block","src":"13407:66:2","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13459:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13451:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1161,"name":"address","nodeType":"ElementaryTypeName","src":"13451:7:2","typeDescriptions":{}}},"id":1164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13451:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1160,"name":"ERC1155InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"13428:22:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13428:34:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1166,"nodeType":"RevertStatement","src":"13421:41:2"}]}},{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1169,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13482:18:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1172,"indexExpression":{"id":1170,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13501:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13482:25:2","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1173,"indexExpression":{"id":1171,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13508:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13482:35:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1174,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13520:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13482:46:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1176,"nodeType":"ExpressionStatement","src":"13482:46:2"},{"eventCall":{"arguments":[{"id":1178,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1147,"src":"13558:5:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1179,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1149,"src":"13565:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1180,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"13575:8:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1177,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1245,"src":"13543:14:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13543:41:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1182,"nodeType":"EmitStatement","src":"13538:46:2"}]},"documentation":{"id":1145,"nodeType":"StructuredDocumentation","src":"13063:208:2","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"id":1184,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"13285:18:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1147,"mutability":"mutable","name":"owner","nameLocation":"13312:5:2","nodeType":"VariableDeclaration","scope":1184,"src":"13304:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1146,"name":"address","nodeType":"ElementaryTypeName","src":"13304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"operator","nameLocation":"13327:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13319:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"13319:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"approved","nameLocation":"13342:8:2","nodeType":"VariableDeclaration","scope":1184,"src":"13337:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"13337:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13303:48:2"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[],"src":"13369:0:2"},"scope":1201,"src":"13276:315:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1199,"nodeType":"Block","src":"13865:664:2","statements":[{"AST":{"nodeType":"YulBlock","src":"13900:623:2","statements":[{"nodeType":"YulAssignment","src":"13958:21:2","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13974:4:2","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13968:5:2"},"nodeType":"YulFunctionCall","src":"13968:11:2"},"variableNames":[{"name":"array1","nodeType":"YulIdentifier","src":"13958:6:2"}]},{"expression":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14036:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14044:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14029:6:2"},"nodeType":"YulFunctionCall","src":"14029:17:2"},"nodeType":"YulExpressionStatement","src":"14029:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14167:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14175:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14163:3:2"},"nodeType":"YulFunctionCall","src":"14163:17:2"},{"name":"element1","nodeType":"YulIdentifier","src":"14182:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14156:6:2"},"nodeType":"YulFunctionCall","src":"14156:35:2"},"nodeType":"YulExpressionStatement","src":"14156:35:2"},{"nodeType":"YulAssignment","src":"14282:27:2","value":{"arguments":[{"name":"array1","nodeType":"YulIdentifier","src":"14296:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14304:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14292:3:2"},"nodeType":"YulFunctionCall","src":"14292:17:2"},"variableNames":[{"name":"array2","nodeType":"YulIdentifier","src":"14282:6:2"}]},{"expression":{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14329:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14337:1:2","type":"","value":"1"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14322:6:2"},"nodeType":"YulFunctionCall","src":"14322:17:2"},"nodeType":"YulExpressionStatement","src":"14322:17:2"},{"expression":{"arguments":[{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14363:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14371:4:2","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14359:3:2"},"nodeType":"YulFunctionCall","src":"14359:17:2"},{"name":"element2","nodeType":"YulIdentifier","src":"14378:8:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14352:6:2"},"nodeType":"YulFunctionCall","src":"14352:35:2"},"nodeType":"YulExpressionStatement","src":"14352:35:2"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14489:4:2","type":"","value":"0x40"},{"arguments":[{"name":"array2","nodeType":"YulIdentifier","src":"14499:6:2"},{"kind":"number","nodeType":"YulLiteral","src":"14507:4:2","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14495:3:2"},"nodeType":"YulFunctionCall","src":"14495:17:2"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14482:6:2"},"nodeType":"YulFunctionCall","src":"14482:31:2"},"nodeType":"YulExpressionStatement","src":"14482:31:2"}]},"evmVersion":"paris","externalReferences":[{"declaration":1193,"isOffset":false,"isSlot":false,"src":"13958:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14036:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14167:6:2","valueSize":1},{"declaration":1193,"isOffset":false,"isSlot":false,"src":"14296:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14282:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14329:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14363:6:2","valueSize":1},{"declaration":1196,"isOffset":false,"isSlot":false,"src":"14499:6:2","valueSize":1},{"declaration":1187,"isOffset":false,"isSlot":false,"src":"14182:8:2","valueSize":1},{"declaration":1189,"isOffset":false,"isSlot":false,"src":"14378:8:2","valueSize":1}],"flags":["memory-safe"],"id":1198,"nodeType":"InlineAssembly","src":"13875:648:2"}]},"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"13597:105:2","text":" @dev Creates an array in memory with only one value for each of the elements provided."},"id":1200,"implemented":true,"kind":"function","modifiers":[],"name":"_asSingletonArrays","nameLocation":"13716:18:2","nodeType":"FunctionDefinition","parameters":{"id":1190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"element1","nameLocation":"13752:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13744:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1186,"name":"uint256","nodeType":"ElementaryTypeName","src":"13744:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"element2","nameLocation":"13778:8:2","nodeType":"VariableDeclaration","scope":1200,"src":"13770:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"13770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13734:58:2"},"returnParameters":{"id":1197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1193,"mutability":"mutable","name":"array1","nameLocation":"13832:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13815:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"13815:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1192,"nodeType":"ArrayTypeName","src":"13815:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1196,"mutability":"mutable","name":"array2","nameLocation":"13857:6:2","nodeType":"VariableDeclaration","scope":1200,"src":"13840:23:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1194,"name":"uint256","nodeType":"ElementaryTypeName","src":"13840:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1195,"nodeType":"ArrayTypeName","src":"13840:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"13814:50:2"},"scope":1201,"src":"13707:822:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1202,"src":"725:13806:2","usedErrors":[249,254,259,266,271,276,283],"usedEvents":[1221,1236,1245,1252]}],"src":"109:14423:2"},"id":2},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","exportedSymbols":{"IERC1155":[1324],"IERC165":[5417]},"id":1325,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1203,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"110:24:3"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1205,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1325,"sourceUnit":5418,"src":"136:62:3","symbolAliases":[{"foreign":{"id":1204,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"144:7:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1207,"name":"IERC165","nameLocations":["359:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":5417,"src":"359:7:3"},"id":1208,"nodeType":"InheritanceSpecifier","src":"359:7:3"}],"canonicalName":"IERC1155","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"200:136:3","text":" @dev Required interface of an ERC-1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[ERC]."},"fullyImplemented":false,"id":1324,"linearizedBaseContracts":[1324,5417],"name":"IERC1155","nameLocation":"347:8:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1209,"nodeType":"StructuredDocumentation","src":"373:125:3","text":" @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."},"eventSelector":"c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62","id":1221,"name":"TransferSingle","nameLocation":"509:14:3","nodeType":"EventDefinition","parameters":{"id":1220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1211,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"540:8:3","nodeType":"VariableDeclaration","scope":1221,"src":"524:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1210,"name":"address","nodeType":"ElementaryTypeName","src":"524:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1213,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"566:4:3","nodeType":"VariableDeclaration","scope":1221,"src":"550:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1212,"name":"address","nodeType":"ElementaryTypeName","src":"550:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1215,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"588:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"572:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1214,"name":"address","nodeType":"ElementaryTypeName","src":"572:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1217,"indexed":false,"mutability":"mutable","name":"id","nameLocation":"600:2:3","nodeType":"VariableDeclaration","scope":1221,"src":"592:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1219,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"612:5:3","nodeType":"VariableDeclaration","scope":1221,"src":"604:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1218,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"523:95:3"},"src":"503:116:3"},{"anonymous":false,"documentation":{"id":1222,"nodeType":"StructuredDocumentation","src":"625:144:3","text":" @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."},"eventSelector":"4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb","id":1236,"name":"TransferBatch","nameLocation":"780:13:3","nodeType":"EventDefinition","parameters":{"id":1235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1224,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"819:8:3","nodeType":"VariableDeclaration","scope":1236,"src":"803:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1226,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"853:4:3","nodeType":"VariableDeclaration","scope":1236,"src":"837:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1225,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1228,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"883:2:3","nodeType":"VariableDeclaration","scope":1236,"src":"867:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1227,"name":"address","nodeType":"ElementaryTypeName","src":"867:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1231,"indexed":false,"mutability":"mutable","name":"ids","nameLocation":"905:3:3","nodeType":"VariableDeclaration","scope":1236,"src":"895:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1229,"name":"uint256","nodeType":"ElementaryTypeName","src":"895:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1230,"nodeType":"ArrayTypeName","src":"895:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1234,"indexed":false,"mutability":"mutable","name":"values","nameLocation":"928:6:3","nodeType":"VariableDeclaration","scope":1236,"src":"918:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1232,"name":"uint256","nodeType":"ElementaryTypeName","src":"918:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1233,"nodeType":"ArrayTypeName","src":"918:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"793:147:3"},"src":"774:167:3"},{"anonymous":false,"documentation":{"id":1237,"nodeType":"StructuredDocumentation","src":"947:147:3","text":" @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":1245,"name":"ApprovalForAll","nameLocation":"1105:14:3","nodeType":"EventDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1239,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1136:7:3","nodeType":"VariableDeclaration","scope":1245,"src":"1120:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1238,"name":"address","nodeType":"ElementaryTypeName","src":"1120:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1241,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"1161:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1145:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1243,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"1176:8:3","nodeType":"VariableDeclaration","scope":1245,"src":"1171:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1242,"name":"bool","nodeType":"ElementaryTypeName","src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1119:66:3"},"src":"1099:87:3"},{"anonymous":false,"documentation":{"id":1246,"nodeType":"StructuredDocumentation","src":"1192:343:3","text":" @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."},"eventSelector":"6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b","id":1252,"name":"URI","nameLocation":"1546:3:3","nodeType":"EventDefinition","parameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1248,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1557:5:3","nodeType":"VariableDeclaration","scope":1252,"src":"1550:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1247,"name":"string","nodeType":"ElementaryTypeName","src":"1550:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1250,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1580:2:3","nodeType":"VariableDeclaration","scope":1252,"src":"1564:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1249,"name":"uint256","nodeType":"ElementaryTypeName","src":"1564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1549:34:3"},"src":"1540:44:3"},{"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"1590:90:3","text":" @dev Returns the value of tokens of token type `id` owned by `account`."},"functionSelector":"00fdd58e","id":1262,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1694:9:3","nodeType":"FunctionDefinition","parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"account","nameLocation":"1712:7:3","nodeType":"VariableDeclaration","scope":1262,"src":"1704:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1254,"name":"address","nodeType":"ElementaryTypeName","src":"1704:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"id","nameLocation":"1729:2:3","nodeType":"VariableDeclaration","scope":1262,"src":"1721:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"1721:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1703:29:3"},"returnParameters":{"id":1261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1260,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1262,"src":"1756:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1259,"name":"uint256","nodeType":"ElementaryTypeName","src":"1756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1755:9:3"},"scope":1324,"src":"1685:80:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"1771:188:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."},"functionSelector":"4e1273f4","id":1275,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOfBatch","nameLocation":"1973:14:3","nodeType":"FunctionDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"accounts","nameLocation":"2016:8:3","nodeType":"VariableDeclaration","scope":1275,"src":"1997:27:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1265,"nodeType":"ArrayTypeName","src":"1997:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1269,"mutability":"mutable","name":"ids","nameLocation":"2053:3:3","nodeType":"VariableDeclaration","scope":1275,"src":"2034:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1268,"nodeType":"ArrayTypeName","src":"2034:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1987:75:3"},"returnParameters":{"id":1274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1273,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1275,"src":"2086:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1271,"name":"uint256","nodeType":"ElementaryTypeName","src":"2086:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1272,"nodeType":"ArrayTypeName","src":"2086:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2085:18:3"},"scope":1324,"src":"1964:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1276,"nodeType":"StructuredDocumentation","src":"2110:254:3","text":" @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."},"functionSelector":"a22cb465","id":1283,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"2378:17:3","nodeType":"FunctionDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1278,"mutability":"mutable","name":"operator","nameLocation":"2404:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2396:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1277,"name":"address","nodeType":"ElementaryTypeName","src":"2396:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1280,"mutability":"mutable","name":"approved","nameLocation":"2419:8:3","nodeType":"VariableDeclaration","scope":1283,"src":"2414:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1279,"name":"bool","nodeType":"ElementaryTypeName","src":"2414:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2395:33:3"},"returnParameters":{"id":1282,"nodeType":"ParameterList","parameters":[],"src":"2437:0:3"},"scope":1324,"src":"2369:69:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1284,"nodeType":"StructuredDocumentation","src":"2444:135:3","text":" @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."},"functionSelector":"e985e9c5","id":1293,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"2593:16:3","nodeType":"FunctionDefinition","parameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1286,"mutability":"mutable","name":"account","nameLocation":"2618:7:3","nodeType":"VariableDeclaration","scope":1293,"src":"2610:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1285,"name":"address","nodeType":"ElementaryTypeName","src":"2610:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1288,"mutability":"mutable","name":"operator","nameLocation":"2635:8:3","nodeType":"VariableDeclaration","scope":1293,"src":"2627:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"2627:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2609:35:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1293,"src":"2668:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1290,"name":"bool","nodeType":"ElementaryTypeName","src":"2668:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2667:6:3"},"scope":1324,"src":"2584:90:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1294,"nodeType":"StructuredDocumentation","src":"2680:927:3","text":" @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."},"functionSelector":"f242432a","id":1307,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"3621:16:3","nodeType":"FunctionDefinition","parameters":{"id":1305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1296,"mutability":"mutable","name":"from","nameLocation":"3646:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3638:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1295,"name":"address","nodeType":"ElementaryTypeName","src":"3638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1298,"mutability":"mutable","name":"to","nameLocation":"3660:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3652:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1297,"name":"address","nodeType":"ElementaryTypeName","src":"3652:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1300,"mutability":"mutable","name":"id","nameLocation":"3672:2:3","nodeType":"VariableDeclaration","scope":1307,"src":"3664:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1299,"name":"uint256","nodeType":"ElementaryTypeName","src":"3664:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1302,"mutability":"mutable","name":"value","nameLocation":"3684:5:3","nodeType":"VariableDeclaration","scope":1307,"src":"3676:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1304,"mutability":"mutable","name":"data","nameLocation":"3706:4:3","nodeType":"VariableDeclaration","scope":1307,"src":"3691:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"3691:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3637:74:3"},"returnParameters":{"id":1306,"nodeType":"ParameterList","parameters":[],"src":"3720:0:3"},"scope":1324,"src":"3612:109:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1308,"nodeType":"StructuredDocumentation","src":"3727:831:3","text":" @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."},"functionSelector":"2eb2c2d6","id":1323,"implemented":false,"kind":"function","modifiers":[],"name":"safeBatchTransferFrom","nameLocation":"4572:21:3","nodeType":"FunctionDefinition","parameters":{"id":1321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1310,"mutability":"mutable","name":"from","nameLocation":"4611:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4603:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1309,"name":"address","nodeType":"ElementaryTypeName","src":"4603:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1312,"mutability":"mutable","name":"to","nameLocation":"4633:2:3","nodeType":"VariableDeclaration","scope":1323,"src":"4625:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1311,"name":"address","nodeType":"ElementaryTypeName","src":"4625:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"mutability":"mutable","name":"ids","nameLocation":"4664:3:3","nodeType":"VariableDeclaration","scope":1323,"src":"4645:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1313,"name":"uint256","nodeType":"ElementaryTypeName","src":"4645:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1314,"nodeType":"ArrayTypeName","src":"4645:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1318,"mutability":"mutable","name":"values","nameLocation":"4696:6:3","nodeType":"VariableDeclaration","scope":1323,"src":"4677:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1316,"name":"uint256","nodeType":"ElementaryTypeName","src":"4677:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1317,"nodeType":"ArrayTypeName","src":"4677:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1320,"mutability":"mutable","name":"data","nameLocation":"4727:4:3","nodeType":"VariableDeclaration","scope":1323,"src":"4712:19:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1319,"name":"bytes","nodeType":"ElementaryTypeName","src":"4712:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4593:144:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[],"src":"4746:0:3"},"scope":1324,"src":"4563:184:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1325,"src":"337:4412:3","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"110:4640:3"},"id":3},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","exportedSymbols":{"IERC1155Receiver":[1366],"IERC165":[5417]},"id":1367,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1326,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:4"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":1328,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1367,"sourceUnit":5418,"src":"144:62:4","symbolAliases":[{"foreign":{"id":1327,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"152:7:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1330,"name":"IERC165","nameLocations":["357:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":5417,"src":"357:7:4"},"id":1331,"nodeType":"InheritanceSpecifier","src":"357:7:4"}],"canonicalName":"IERC1155Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":1329,"nodeType":"StructuredDocumentation","src":"208:118:4","text":" @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."},"fullyImplemented":false,"id":1366,"linearizedBaseContracts":[1366,5417],"name":"IERC1155Receiver","nameLocation":"337:16:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1332,"nodeType":"StructuredDocumentation","src":"371:827:4","text":" @dev Handles the receipt of a single ERC-1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"},"functionSelector":"f23a6e61","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155Received","nameLocation":"1212:17:4","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"operator","nameLocation":"1247:8:4","nodeType":"VariableDeclaration","scope":1347,"src":"1239:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1239:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1336,"mutability":"mutable","name":"from","nameLocation":"1273:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1265:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1335,"name":"address","nodeType":"ElementaryTypeName","src":"1265:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1338,"mutability":"mutable","name":"id","nameLocation":"1295:2:4","nodeType":"VariableDeclaration","scope":1347,"src":"1287:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1287:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1340,"mutability":"mutable","name":"value","nameLocation":"1315:5:4","nodeType":"VariableDeclaration","scope":1347,"src":"1307:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1307:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1342,"mutability":"mutable","name":"data","nameLocation":"1345:4:4","nodeType":"VariableDeclaration","scope":1347,"src":"1330:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1341,"name":"bytes","nodeType":"ElementaryTypeName","src":"1330:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1229:126:4"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"1374:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1344,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1374:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1373:8:4"},"scope":1366,"src":"1203:179:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"1388:995:4","text":" @dev Handles the receipt of a multiple ERC-1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"},"functionSelector":"bc197c81","id":1365,"implemented":false,"kind":"function","modifiers":[],"name":"onERC1155BatchReceived","nameLocation":"2397:22:4","nodeType":"FunctionDefinition","parameters":{"id":1361,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"operator","nameLocation":"2437:8:4","nodeType":"VariableDeclaration","scope":1365,"src":"2429:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"from","nameLocation":"2463:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2455:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1351,"name":"address","nodeType":"ElementaryTypeName","src":"2455:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1355,"mutability":"mutable","name":"ids","nameLocation":"2496:3:4","nodeType":"VariableDeclaration","scope":1365,"src":"2477:22:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2477:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1354,"nodeType":"ArrayTypeName","src":"2477:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1358,"mutability":"mutable","name":"values","nameLocation":"2528:6:4","nodeType":"VariableDeclaration","scope":1365,"src":"2509:25:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1356,"name":"uint256","nodeType":"ElementaryTypeName","src":"2509:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1357,"nodeType":"ArrayTypeName","src":"2509:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1360,"mutability":"mutable","name":"data","nameLocation":"2559:4:4","nodeType":"VariableDeclaration","scope":1365,"src":"2544:19:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1359,"name":"bytes","nodeType":"ElementaryTypeName","src":"2544:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2419:150:4"},"returnParameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1363,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1365,"src":"2588:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1362,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2588:6:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2587:8:4"},"scope":1366,"src":"2388:208:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1367,"src":"327:2271:4","usedErrors":[],"usedEvents":[]}],"src":"118:2481:4"},"id":4},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol","exportedSymbols":{"IERC1155":[1324],"IERC1155MetadataURI":[1382]},"id":1383,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1368,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"132:24:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155.sol","file":"../IERC1155.sol","id":1370,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1383,"sourceUnit":1325,"src":"158:41:5","symbolAliases":[{"foreign":{"id":1369,"name":"IERC1155","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"166:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1372,"name":"IERC1155","nameLocations":["399:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1324,"src":"399:8:5"},"id":1373,"nodeType":"InheritanceSpecifier","src":"399:8:5"}],"canonicalName":"IERC1155MetadataURI","contractDependencies":[],"contractKind":"interface","documentation":{"id":1371,"nodeType":"StructuredDocumentation","src":"201:164:5","text":" @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC]."},"fullyImplemented":false,"id":1382,"linearizedBaseContracts":[1382,1324,5417],"name":"IERC1155MetadataURI","nameLocation":"376:19:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1374,"nodeType":"StructuredDocumentation","src":"414:192:5","text":" @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."},"functionSelector":"0e89341c","id":1381,"implemented":false,"kind":"function","modifiers":[],"name":"uri","nameLocation":"620:3:5","nodeType":"FunctionDefinition","parameters":{"id":1377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1376,"mutability":"mutable","name":"id","nameLocation":"632:2:5","nodeType":"VariableDeclaration","scope":1381,"src":"624:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1375,"name":"uint256","nodeType":"ElementaryTypeName","src":"624:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"623:12:5"},"returnParameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1381,"src":"659:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1378,"name":"string","nodeType":"ElementaryTypeName","src":"659:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"658:15:5"},"scope":1382,"src":"611:63:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1383,"src":"366:310:5","usedErrors":[],"usedEvents":[1221,1236,1245,1252]}],"src":"132:545:5"},"id":5},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol","exportedSymbols":{"ERC1155Utils":[1536],"IERC1155Errors":[284],"IERC1155Receiver":[1366]},"id":1537,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1384,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"120:24:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol","file":"../IERC1155Receiver.sol","id":1386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":1367,"src":"146:57:6","symbolAliases":[{"foreign":{"id":1385,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"154:16:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":1388,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1537,"sourceUnit":285,"src":"204:70:6","symbolAliases":[{"foreign":{"id":1387,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"212:14:6","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1155Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1389,"nodeType":"StructuredDocumentation","src":"276:162:6","text":" @dev Library that provide common ERC-1155 utility functions.\n See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155].\n _Available since v5.1._"},"fullyImplemented":true,"id":1536,"linearizedBaseContracts":[1536],"name":"ERC1155Utils","nameLocation":"447:12:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1460,"nodeType":"Block","src":"1191:774:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1405,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1205:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1208:4:6","memberName":"code","nodeType":"MemberAccess","src":"1205:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1213:6:6","memberName":"length","nodeType":"MemberAccess","src":"1205:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1222:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1205:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1459,"nodeType":"IfStatement","src":"1201:758:6","trueBody":{"id":1458,"nodeType":"Block","src":"1225:734:6","statements":[{"clauses":[{"block":{"id":1436,"nodeType":"Block","src":"1341:221:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1423,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1421,"src":"1363:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1424,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1375:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1392:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1375:34:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"}},"id":1426,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1410:8:6","memberName":"selector","nodeType":"MemberAccess","src":"1375:43:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1363:55:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1435,"nodeType":"IfStatement","src":"1359:189:6","trueBody":{"id":1434,"nodeType":"Block","src":"1420:128:6","statements":[{"errorCall":{"arguments":[{"id":1431,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1526:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1428,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1488:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1503:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1488:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1433,"nodeType":"RevertStatement","src":"1481:48:6"}]}}]},"errorName":"","id":1437,"nodeType":"TryCatchClause","parameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"response","nameLocation":"1331:8:6","nodeType":"VariableDeclaration","scope":1437,"src":"1324:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1420,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1324:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1323:17:6"},"src":"1315:247:6"},{"block":{"id":1455,"nodeType":"Block","src":"1591:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1441,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"1613:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1620:6:6","memberName":"length","nodeType":"MemberAccess","src":"1613:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1630:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1613:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1453,"nodeType":"Block","src":"1784:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"1831:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1868:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1872:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1864:3:6"},"nodeType":"YulFunctionCall","src":"1864:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1887:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1881:5:6"},"nodeType":"YulFunctionCall","src":"1881:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1857:6:6"},"nodeType":"YulFunctionCall","src":"1857:38:6"},"nodeType":"YulExpressionStatement","src":"1857:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1872:6:6","valueSize":1},{"declaration":1439,"isOffset":false,"isSlot":false,"src":"1887:6:6","valueSize":1}],"flags":["memory-safe"],"id":1452,"nodeType":"InlineAssembly","src":"1806:111:6"}]},"id":1454,"nodeType":"IfStatement","src":"1609:326:6","trueBody":{"id":1451,"nodeType":"Block","src":"1633:145:6","statements":[{"errorCall":{"arguments":[{"id":1448,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1756:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1445,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1718:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1733:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"1718:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1450,"nodeType":"RevertStatement","src":"1711:48:6"}]}}]},"errorName":"","id":1456,"nodeType":"TryCatchClause","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"reason","nameLocation":"1583:6:6","nodeType":"VariableDeclaration","scope":1456,"src":"1570:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1438,"name":"bytes","nodeType":"ElementaryTypeName","src":"1570:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1569:21:6"},"src":"1563:386:6"}],"externalCall":{"arguments":[{"id":1414,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1392,"src":"1282:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1415,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1394,"src":"1292:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1416,"name":"id","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1398,"src":"1298:2:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1417,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1400,"src":"1302:5:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1418,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"1309:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1396,"src":"1260:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1410,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"1243:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1264:17:6","memberName":"onERC1155Received","nodeType":"MemberAccess","referencedDeclaration":1347,"src":"1243:38:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"}},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1243:71:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1457,"nodeType":"TryStatement","src":"1239:710:6"}]}}]},"documentation":{"id":1390,"nodeType":"StructuredDocumentation","src":"466:535:6","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1461,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155Received","nameLocation":"1015:22:6","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1392,"mutability":"mutable","name":"operator","nameLocation":"1055:8:6","nodeType":"VariableDeclaration","scope":1461,"src":"1047:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1391,"name":"address","nodeType":"ElementaryTypeName","src":"1047:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1394,"mutability":"mutable","name":"from","nameLocation":"1081:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1073:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1393,"name":"address","nodeType":"ElementaryTypeName","src":"1073:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1396,"mutability":"mutable","name":"to","nameLocation":"1103:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1095:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1395,"name":"address","nodeType":"ElementaryTypeName","src":"1095:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1398,"mutability":"mutable","name":"id","nameLocation":"1123:2:6","nodeType":"VariableDeclaration","scope":1461,"src":"1115:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1397,"name":"uint256","nodeType":"ElementaryTypeName","src":"1115:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1400,"mutability":"mutable","name":"value","nameLocation":"1143:5:6","nodeType":"VariableDeclaration","scope":1461,"src":"1135:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1399,"name":"uint256","nodeType":"ElementaryTypeName","src":"1135:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1402,"mutability":"mutable","name":"data","nameLocation":"1171:4:6","nodeType":"VariableDeclaration","scope":1461,"src":"1158:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1401,"name":"bytes","nodeType":"ElementaryTypeName","src":"1158:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1037:144:6"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"1191:0:6"},"scope":1536,"src":"1006:959:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1534,"nodeType":"Block","src":"2731:816:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1479,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2745:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2748:4:6","memberName":"code","nodeType":"MemberAccess","src":"2745:7:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2753:6:6","memberName":"length","nodeType":"MemberAccess","src":"2745:14:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1482,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2762:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2745:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1533,"nodeType":"IfStatement","src":"2741:800:6","trueBody":{"id":1532,"nodeType":"Block","src":"2765:776:6","statements":[{"clauses":[{"block":{"id":1510,"nodeType":"Block","src":"2918:226:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1497,"name":"response","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"2940:8:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":1498,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2952:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1499,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2969:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2952:39:6","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2992:8:6","memberName":"selector","nodeType":"MemberAccess","src":"2952:48:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2940:60:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1509,"nodeType":"IfStatement","src":"2936:194:6","trueBody":{"id":1508,"nodeType":"Block","src":"3002:128:6","statements":[{"errorCall":{"arguments":[{"id":1505,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3108:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3070:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3085:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3070:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3070:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"RevertStatement","src":"3063:48:6"}]}}]},"errorName":"","id":1511,"nodeType":"TryCatchClause","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"response","nameLocation":"2895:8:6","nodeType":"VariableDeclaration","scope":1511,"src":"2888:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1494,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2888:6:6","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2870:47:6"},"src":"2862:282:6"},{"block":{"id":1529,"nodeType":"Block","src":"3173:358:6","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1515,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1513,"src":"3195:6:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3202:6:6","memberName":"length","nodeType":"MemberAccess","src":"3195:13:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3212:1:6","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3195:18:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"3366:151:6","statements":[{"AST":{"nodeType":"YulBlock","src":"3413:86:6","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3450:2:6","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"3454:6:6"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:6"},"nodeType":"YulFunctionCall","src":"3446:15:6"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"3469:6:6"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3463:5:6"},"nodeType":"YulFunctionCall","src":"3463:13:6"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3439:6:6"},"nodeType":"YulFunctionCall","src":"3439:38:6"},"nodeType":"YulExpressionStatement","src":"3439:38:6"}]},"evmVersion":"paris","externalReferences":[{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3454:6:6","valueSize":1},{"declaration":1513,"isOffset":false,"isSlot":false,"src":"3469:6:6","valueSize":1}],"flags":["memory-safe"],"id":1526,"nodeType":"InlineAssembly","src":"3388:111:6"}]},"id":1528,"nodeType":"IfStatement","src":"3191:326:6","trueBody":{"id":1525,"nodeType":"Block","src":"3215:145:6","statements":[{"errorCall":{"arguments":[{"id":1522,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"3338:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1519,"name":"IERC1155Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"3300:14:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Errors_$284_$","typeString":"type(contract IERC1155Errors)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3315:22:6","memberName":"ERC1155InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":259,"src":"3300:37:6","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3300:41:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1524,"nodeType":"RevertStatement","src":"3293:48:6"}]}}]},"errorName":"","id":1530,"nodeType":"TryCatchClause","parameters":{"id":1514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"reason","nameLocation":"3165:6:6","nodeType":"VariableDeclaration","scope":1530,"src":"3152:19:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1512,"name":"bytes","nodeType":"ElementaryTypeName","src":"3152:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3151:21:6"},"src":"3145:386:6"}],"externalCall":{"arguments":[{"id":1488,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"2827:8:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1489,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"2837:4:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1490,"name":"ids","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"2843:3:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1491,"name":"values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"2848:6:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":1492,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"2856:4:6","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":1485,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1468,"src":"2800:2:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1484,"name":"IERC1155Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1366,"src":"2783:16:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1155Receiver_$1366_$","typeString":"type(contract IERC1155Receiver)"}},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:20:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1155Receiver_$1366","typeString":"contract IERC1155Receiver"}},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2804:22:6","memberName":"onERC1155BatchReceived","nodeType":"MemberAccess","referencedDeclaration":1365,"src":"2783:43:6","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"}},"id":1493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2783:78:6","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":1531,"nodeType":"TryStatement","src":"2779:752:6"}]}}]},"documentation":{"id":1462,"nodeType":"StructuredDocumentation","src":"1971:545:6","text":" @dev Performs a batch acceptance check for the provided `operator` by calling {IERC1155Receiver-onERC1155BatchReceived}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value to accept\n the transfer."},"id":1535,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC1155BatchReceived","nameLocation":"2530:27:6","nodeType":"FunctionDefinition","parameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"operator","nameLocation":"2575:8:6","nodeType":"VariableDeclaration","scope":1535,"src":"2567:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1463,"name":"address","nodeType":"ElementaryTypeName","src":"2567:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"from","nameLocation":"2601:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2593:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1465,"name":"address","nodeType":"ElementaryTypeName","src":"2593:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1468,"mutability":"mutable","name":"to","nameLocation":"2623:2:6","nodeType":"VariableDeclaration","scope":1535,"src":"2615:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1467,"name":"address","nodeType":"ElementaryTypeName","src":"2615:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"ids","nameLocation":"2652:3:6","nodeType":"VariableDeclaration","scope":1535,"src":"2635:20:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"2635:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1470,"nodeType":"ArrayTypeName","src":"2635:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"values","nameLocation":"2682:6:6","nodeType":"VariableDeclaration","scope":1535,"src":"2665:23:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1472,"name":"uint256","nodeType":"ElementaryTypeName","src":"2665:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1473,"nodeType":"ArrayTypeName","src":"2665:9:6","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"data","nameLocation":"2711:4:6","nodeType":"VariableDeclaration","scope":1535,"src":"2698:17:6","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1475,"name":"bytes","nodeType":"ElementaryTypeName","src":"2698:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2557:164:6"},"returnParameters":{"id":1478,"nodeType":"ParameterList","parameters":[],"src":"2731:0:6"},"scope":1536,"src":"2521:1026:6","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1537,"src":"439:3110:6","usedErrors":[],"usedEvents":[]}],"src":"120:3430:6"},"id":6},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","exportedSymbols":{"Context":[3673],"ERC165":[5405],"ERC721":[2493],"ERC721Utils":[2733],"IERC165":[5417],"IERC721":[2610],"IERC721Errors":[237],"IERC721Metadata":[2656],"Strings":[5381]},"id":2494,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1538,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":1540,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":2611,"src":"133:38:7","symbolAliases":[{"foreign":{"id":1539,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"141:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","file":"./extensions/IERC721Metadata.sol","id":1542,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":2657,"src":"172:65:7","symbolAliases":[{"foreign":{"id":1541,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"180:15:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","file":"./utils/ERC721Utils.sol","id":1544,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":2734,"src":"238:52:7","symbolAliases":[{"foreign":{"id":1543,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"246:11:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":1546,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":3674,"src":"291:48:7","symbolAliases":[{"foreign":{"id":1545,"name":"Context","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"299:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../../utils/Strings.sol","id":1548,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":5382,"src":"340:48:7","symbolAliases":[{"foreign":{"id":1547,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5381,"src":"348:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../../utils/introspection/ERC165.sol","id":1551,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":5406,"src":"389:69:7","symbolAliases":[{"foreign":{"id":1549,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"397:7:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":1550,"name":"ERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5405,"src":"406:6:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../interfaces/draft-IERC6093.sol","id":1553,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2494,"sourceUnit":285,"src":"459:66:7","symbolAliases":[{"foreign":{"id":1552,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"467:13:7","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1555,"name":"Context","nameLocations":["803:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":3673,"src":"803:7:7"},"id":1556,"nodeType":"InheritanceSpecifier","src":"803:7:7"},{"baseName":{"id":1557,"name":"ERC165","nameLocations":["812:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":5405,"src":"812:6:7"},"id":1558,"nodeType":"InheritanceSpecifier","src":"812:6:7"},{"baseName":{"id":1559,"name":"IERC721","nameLocations":["820:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":2610,"src":"820:7:7"},"id":1560,"nodeType":"InheritanceSpecifier","src":"820:7:7"},{"baseName":{"id":1561,"name":"IERC721Metadata","nameLocations":["829:15:7"],"nodeType":"IdentifierPath","referencedDeclaration":2656,"src":"829:15:7"},"id":1562,"nodeType":"InheritanceSpecifier","src":"829:15:7"},{"baseName":{"id":1563,"name":"IERC721Errors","nameLocations":["846:13:7"],"nodeType":"IdentifierPath","referencedDeclaration":237,"src":"846:13:7"},"id":1564,"nodeType":"InheritanceSpecifier","src":"846:13:7"}],"canonicalName":"ERC721","contractDependencies":[],"contractKind":"contract","documentation":{"id":1554,"nodeType":"StructuredDocumentation","src":"527:247:7","text":" @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."},"fullyImplemented":true,"id":2493,"linearizedBaseContracts":[2493,237,2656,2610,5405,5417,3673],"name":"ERC721","nameLocation":"793:6:7","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1567,"libraryName":{"id":1565,"name":"Strings","nameLocations":["872:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5381,"src":"872:7:7"},"nodeType":"UsingForDirective","src":"866:26:7","typeName":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"id":1569,"mutability":"mutable","name":"_name","nameLocation":"931:5:7","nodeType":"VariableDeclaration","scope":2493,"src":"916:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1568,"name":"string","nodeType":"ElementaryTypeName","src":"916:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1571,"mutability":"mutable","name":"_symbol","nameLocation":"978:7:7","nodeType":"VariableDeclaration","scope":2493,"src":"963:22:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":1570,"name":"string","nodeType":"ElementaryTypeName","src":"963:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":1575,"mutability":"mutable","name":"_owners","nameLocation":"1036:7:7","nodeType":"VariableDeclaration","scope":2493,"src":"992:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1574,"keyName":"tokenId","keyNameLocation":"1008:7:7","keyType":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"1000:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"992:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1573,"name":"address","nodeType":"ElementaryTypeName","src":"1019:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1579,"mutability":"mutable","name":"_balances","nameLocation":"1092:9:7","nodeType":"VariableDeclaration","scope":2493,"src":"1050:51:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":1578,"keyName":"owner","keyNameLocation":"1066:5:7","keyType":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"1058:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1050:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1577,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":1583,"mutability":"mutable","name":"_tokenApprovals","nameLocation":"1152:15:7","nodeType":"VariableDeclaration","scope":2493,"src":"1108:59:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"typeName":{"id":1582,"keyName":"tokenId","keyNameLocation":"1124:7:7","keyType":{"id":1580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1116:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1108:35:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1581,"name":"address","nodeType":"ElementaryTypeName","src":"1135:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":1589,"mutability":"mutable","name":"_operatorApprovals","nameLocation":"1242:18:7","nodeType":"VariableDeclaration","scope":2493,"src":"1174:86:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1588,"keyName":"owner","keyNameLocation":"1190:5:7","keyType":{"id":1584,"name":"address","nodeType":"ElementaryTypeName","src":"1182:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1174:59:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1587,"keyName":"operator","keyNameLocation":"1215:8:7","keyType":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"1207:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1199:33:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1586,"name":"bool","nodeType":"ElementaryTypeName","src":"1227:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"body":{"id":1605,"nodeType":"Block","src":"1436:57:7","statements":[{"expression":{"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1597,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"1446:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1598,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1592,"src":"1454:5:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1446:13:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1600,"nodeType":"ExpressionStatement","src":"1446:13:7"},{"expression":{"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1601,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"1469:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1602,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"1479:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1469:17:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":1604,"nodeType":"ExpressionStatement","src":"1469:17:7"}]},"documentation":{"id":1590,"nodeType":"StructuredDocumentation","src":"1267:108:7","text":" @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."},"id":1606,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1592,"mutability":"mutable","name":"name_","nameLocation":"1406:5:7","nodeType":"VariableDeclaration","scope":1606,"src":"1392:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1591,"name":"string","nodeType":"ElementaryTypeName","src":"1392:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1594,"mutability":"mutable","name":"symbol_","nameLocation":"1427:7:7","nodeType":"VariableDeclaration","scope":1606,"src":"1413:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1593,"name":"string","nodeType":"ElementaryTypeName","src":"1413:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1391:44:7"},"returnParameters":{"id":1596,"nodeType":"ParameterList","parameters":[],"src":"1436:0:7"},"scope":2493,"src":"1380:113:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[5404,5416],"body":{"id":1636,"nodeType":"Block","src":"1668:192:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1617,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1697:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1619,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"1717:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721_$2610_$","typeString":"type(contract IERC721)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721_$2610_$","typeString":"type(contract IERC721)"}],"id":1618,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1712:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1712:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721_$2610","typeString":"type(contract IERC721)"}},"id":1621,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1726:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1712:25:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1697:40:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1623,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1753:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1625,"name":"IERC721Metadata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"1773:15:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2656_$","typeString":"type(contract IERC721Metadata)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC721Metadata_$2656_$","typeString":"type(contract IERC721Metadata)"}],"id":1624,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1768:4:7","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1768:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC721Metadata_$2656","typeString":"type(contract IERC721Metadata)"}},"id":1627,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1790:11:7","memberName":"interfaceId","nodeType":"MemberAccess","src":"1768:33:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1753:48:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:104:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1632,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1609,"src":"1841:11:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1630,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1817:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC721_$2493_$","typeString":"type(contract super ERC721)"}},"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1823:17:7","memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":5404,"src":"1817:23:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1817:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1697:156:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1616,"id":1635,"nodeType":"Return","src":"1678:175:7"}]},"documentation":{"id":1607,"nodeType":"StructuredDocumentation","src":"1499:56:7","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"1569:17:7","nodeType":"FunctionDefinition","overrides":{"id":1613,"nodeType":"OverrideSpecifier","overrides":[{"id":1611,"name":"ERC165","nameLocations":["1636:6:7"],"nodeType":"IdentifierPath","referencedDeclaration":5405,"src":"1636:6:7"},{"id":1612,"name":"IERC165","nameLocations":["1644:7:7"],"nodeType":"IdentifierPath","referencedDeclaration":5417,"src":"1644:7:7"}],"src":"1627:25:7"},"parameters":{"id":1610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1609,"mutability":"mutable","name":"interfaceId","nameLocation":"1594:11:7","nodeType":"VariableDeclaration","scope":1637,"src":"1587:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1608,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1587:6:7","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1586:20:7"},"returnParameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1615,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1637,"src":"1662:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1614,"name":"bool","nodeType":"ElementaryTypeName","src":"1662:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1661:6:7"},"scope":2493,"src":"1560:300:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2535],"body":{"id":1664,"nodeType":"Block","src":"1991:136:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1645,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2005:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1648,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2022:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2014:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:7","typeDescriptions":{}}},"id":1649,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2014:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2005:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1659,"nodeType":"IfStatement","src":"2001:87:7","trueBody":{"id":1658,"nodeType":"Block","src":"2026:62:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2066:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1652,"name":"address","nodeType":"ElementaryTypeName","src":"2066:7:7","typeDescriptions":{}}},"id":1655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2066:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1651,"name":"ERC721InvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"2047:18:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2047:30:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1657,"nodeType":"RevertStatement","src":"2040:37:7"}]}},{"expression":{"baseExpression":{"id":1660,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"2104:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1662,"indexExpression":{"id":1661,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"2114:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:16:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1644,"id":1663,"nodeType":"Return","src":"2097:23:7"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"1866:48:7","text":" @dev See {IERC721-balanceOf}."},"functionSelector":"70a08231","id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"1928:9:7","nodeType":"FunctionDefinition","parameters":{"id":1641,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"owner","nameLocation":"1946:5:7","nodeType":"VariableDeclaration","scope":1665,"src":"1938:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1639,"name":"address","nodeType":"ElementaryTypeName","src":"1938:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1937:15:7"},"returnParameters":{"id":1644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1643,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"1982:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"1982:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1981:9:7"},"scope":2493,"src":"1919:208:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2543],"body":{"id":1677,"nodeType":"Block","src":"2256:46:7","statements":[{"expression":{"arguments":[{"id":1674,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"2287:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1673,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2273:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2273:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1672,"id":1676,"nodeType":"Return","src":"2266:29:7"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"2133:46:7","text":" @dev See {IERC721-ownerOf}."},"functionSelector":"6352211e","id":1678,"implemented":true,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"2193:7:7","nodeType":"FunctionDefinition","parameters":{"id":1669,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"tokenId","nameLocation":"2209:7:7","nodeType":"VariableDeclaration","scope":1678,"src":"2201:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1667,"name":"uint256","nodeType":"ElementaryTypeName","src":"2201:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2200:17:7"},"returnParameters":{"id":1672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1671,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1678,"src":"2247:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1670,"name":"address","nodeType":"ElementaryTypeName","src":"2247:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2246:9:7"},"scope":2493,"src":"2184:118:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2641],"body":{"id":1686,"nodeType":"Block","src":"2424:29:7","statements":[{"expression":{"id":1684,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2441:5:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1683,"id":1685,"nodeType":"Return","src":"2434:12:7"}]},"documentation":{"id":1679,"nodeType":"StructuredDocumentation","src":"2308:51:7","text":" @dev See {IERC721Metadata-name}."},"functionSelector":"06fdde03","id":1687,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2373:4:7","nodeType":"FunctionDefinition","parameters":{"id":1680,"nodeType":"ParameterList","parameters":[],"src":"2377:2:7"},"returnParameters":{"id":1683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1687,"src":"2409:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1681,"name":"string","nodeType":"ElementaryTypeName","src":"2409:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2408:15:7"},"scope":2493,"src":"2364:89:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2647],"body":{"id":1695,"nodeType":"Block","src":"2579:31:7","statements":[{"expression":{"id":1693,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2596:7:7","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1692,"id":1694,"nodeType":"Return","src":"2589:14:7"}]},"documentation":{"id":1688,"nodeType":"StructuredDocumentation","src":"2459:53:7","text":" @dev See {IERC721Metadata-symbol}."},"functionSelector":"95d89b41","id":1696,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2526:6:7","nodeType":"FunctionDefinition","parameters":{"id":1689,"nodeType":"ParameterList","parameters":[],"src":"2532:2:7"},"returnParameters":{"id":1692,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1691,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1696,"src":"2564:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1690,"name":"string","nodeType":"ElementaryTypeName","src":"2564:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2563:15:7"},"scope":2493,"src":"2517:93:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2655],"body":{"id":1731,"nodeType":"Block","src":"2755:176:7","statements":[{"expression":{"arguments":[{"id":1705,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2779:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1704,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"2765:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2765:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1707,"nodeType":"ExpressionStatement","src":"2765:22:7"},{"assignments":[1709],"declarations":[{"constant":false,"id":1709,"mutability":"mutable","name":"baseURI","nameLocation":"2812:7:7","nodeType":"VariableDeclaration","scope":1731,"src":"2798:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1708,"name":"string","nodeType":"ElementaryTypeName","src":"2798:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1712,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1710,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1741,"src":"2822:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2822:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2798:34:7"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1715,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2855:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1714,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2849:5:7","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1713,"name":"bytes","nodeType":"ElementaryTypeName","src":"2849:5:7","typeDescriptions":{}}},"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2849:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:7","memberName":"length","nodeType":"MemberAccess","src":"2849:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2873:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2849:25:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":1728,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2922:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":1729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2849:75:7","trueExpression":{"arguments":[{"id":1723,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"2891:7:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1724,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1699,"src":"2900:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2908:8:7","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":4093,"src":"2900:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$","typeString":"function (uint256) pure returns (string memory)"}},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2900:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2877:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1720,"name":"string","nodeType":"ElementaryTypeName","src":"2877:6:7","typeDescriptions":{}}},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2884:6:7","memberName":"concat","nodeType":"MemberAccess","src":"2877:13:7","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2877:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1703,"id":1730,"nodeType":"Return","src":"2842:82:7"}]},"documentation":{"id":1697,"nodeType":"StructuredDocumentation","src":"2616:55:7","text":" @dev See {IERC721Metadata-tokenURI}."},"functionSelector":"c87b56dd","id":1732,"implemented":true,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"2685:8:7","nodeType":"FunctionDefinition","parameters":{"id":1700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1699,"mutability":"mutable","name":"tokenId","nameLocation":"2702:7:7","nodeType":"VariableDeclaration","scope":1732,"src":"2694:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1698,"name":"uint256","nodeType":"ElementaryTypeName","src":"2694:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2693:17:7"},"returnParameters":{"id":1703,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1732,"src":"2740:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1701,"name":"string","nodeType":"ElementaryTypeName","src":"2740:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2739:15:7"},"scope":2493,"src":"2676:255:7","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1740,"nodeType":"Block","src":"3239:26:7","statements":[{"expression":{"hexValue":"","id":1738,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3256:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"functionReturnParameters":1737,"id":1739,"nodeType":"Return","src":"3249:9:7"}]},"documentation":{"id":1733,"nodeType":"StructuredDocumentation","src":"2937:231:7","text":" @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"3182:8:7","nodeType":"FunctionDefinition","parameters":{"id":1734,"nodeType":"ParameterList","parameters":[],"src":"3190:2:7"},"returnParameters":{"id":1737,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1736,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"3224:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1735,"name":"string","nodeType":"ElementaryTypeName","src":"3224:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3223:15:7"},"scope":2493,"src":"3173:92:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[2583],"body":{"id":1756,"nodeType":"Block","src":"3383:52:7","statements":[{"expression":{"arguments":[{"id":1750,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3402:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1751,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"3406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1752,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3415:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3415:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1749,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2360,2426],"referencedDeclaration":2360,"src":"3393:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address)"}},"id":1754,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3393:35:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1755,"nodeType":"ExpressionStatement","src":"3393:35:7"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"3271:46:7","text":" @dev See {IERC721-approve}."},"functionSelector":"095ea7b3","id":1757,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"3331:7:7","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"to","nameLocation":"3347:2:7","nodeType":"VariableDeclaration","scope":1757,"src":"3339:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"3339:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"tokenId","nameLocation":"3359:7:7","nodeType":"VariableDeclaration","scope":1757,"src":"3351:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1745,"name":"uint256","nodeType":"ElementaryTypeName","src":"3351:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3338:29:7"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[],"src":"3383:0:7"},"scope":2493,"src":"3322:113:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2599],"body":{"id":1773,"nodeType":"Block","src":"3572:78:7","statements":[{"expression":{"arguments":[{"id":1766,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"3596:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1765,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"3582:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3582:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1768,"nodeType":"ExpressionStatement","src":"3582:22:7"},{"expression":{"arguments":[{"id":1770,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1760,"src":"3635:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1769,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"3622:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3622:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1764,"id":1772,"nodeType":"Return","src":"3615:28:7"}]},"documentation":{"id":1758,"nodeType":"StructuredDocumentation","src":"3441:50:7","text":" @dev See {IERC721-getApproved}."},"functionSelector":"081812fc","id":1774,"implemented":true,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"3505:11:7","nodeType":"FunctionDefinition","parameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"tokenId","nameLocation":"3525:7:7","nodeType":"VariableDeclaration","scope":1774,"src":"3517:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"3517:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3516:17:7"},"returnParameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1774,"src":"3563:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1762,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3562:9:7"},"scope":2493,"src":"3496:154:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2591],"body":{"id":1789,"nodeType":"Block","src":"3792:69:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1783,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"3821:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1784,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3821:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1785,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1777,"src":"3835:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1786,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1779,"src":"3845:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1782,"name":"_setApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"3802:18:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3802:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1788,"nodeType":"ExpressionStatement","src":"3802:52:7"}]},"documentation":{"id":1775,"nodeType":"StructuredDocumentation","src":"3656:56:7","text":" @dev See {IERC721-setApprovalForAll}."},"functionSelector":"a22cb465","id":1790,"implemented":true,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"3726:17:7","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"operator","nameLocation":"3752:8:7","nodeType":"VariableDeclaration","scope":1790,"src":"3744:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"3744:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"approved","nameLocation":"3767:8:7","nodeType":"VariableDeclaration","scope":1790,"src":"3762:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1778,"name":"bool","nodeType":"ElementaryTypeName","src":"3762:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3743:33:7"},"returnParameters":{"id":1781,"nodeType":"ParameterList","parameters":[],"src":"3792:0:7"},"scope":2493,"src":"3717:144:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2609],"body":{"id":1806,"nodeType":"Block","src":"4021:59:7","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":1800,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"4038:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1802,"indexExpression":{"id":1801,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"4057:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1804,"indexExpression":{"id":1803,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1795,"src":"4064:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4038:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1799,"id":1805,"nodeType":"Return","src":"4031:42:7"}]},"documentation":{"id":1791,"nodeType":"StructuredDocumentation","src":"3867:55:7","text":" @dev See {IERC721-isApprovedForAll}."},"functionSelector":"e985e9c5","id":1807,"implemented":true,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"3936:16:7","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1793,"mutability":"mutable","name":"owner","nameLocation":"3961:5:7","nodeType":"VariableDeclaration","scope":1807,"src":"3953:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1792,"name":"address","nodeType":"ElementaryTypeName","src":"3953:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1795,"mutability":"mutable","name":"operator","nameLocation":"3976:8:7","nodeType":"VariableDeclaration","scope":1807,"src":"3968:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1794,"name":"address","nodeType":"ElementaryTypeName","src":"3968:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3952:33:7"},"returnParameters":{"id":1799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1807,"src":"4015:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1797,"name":"bool","nodeType":"ElementaryTypeName","src":"4015:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4014:6:7"},"scope":2493,"src":"3927:153:7","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[2575],"body":{"id":1852,"nodeType":"Block","src":"4222:498:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1817,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"4236:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4250:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4242:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1818,"name":"address","nodeType":"ElementaryTypeName","src":"4242:7:7","typeDescriptions":{}}},"id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4242:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4236:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1831,"nodeType":"IfStatement","src":"4232:87:7","trueBody":{"id":1830,"nodeType":"Block","src":"4254:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4305:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1825,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4297:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1824,"name":"address","nodeType":"ElementaryTypeName","src":"4297:7:7","typeDescriptions":{}}},"id":1827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4297:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1823,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"4275:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":1828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4275:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1829,"nodeType":"RevertStatement","src":"4268:40:7"}]}},{"assignments":[1833],"declarations":[{"constant":false,"id":1833,"mutability":"mutable","name":"previousOwner","nameLocation":"4545:13:7","nodeType":"VariableDeclaration","scope":1852,"src":"4537:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1832,"name":"address","nodeType":"ElementaryTypeName","src":"4537:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1840,"initialValue":{"arguments":[{"id":1835,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"4569:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1836,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"4573:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1837,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"4582:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4582:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1834,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"4561:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":1839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:34:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4537:58:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"4609:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4626:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4609:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"4605:109:7","trueBody":{"id":1850,"nodeType":"Block","src":"4632:82:7","statements":[{"errorCall":{"arguments":[{"id":1845,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"4674:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1846,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1814,"src":"4680:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1847,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1833,"src":"4689:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1844,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"4653:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4653:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1849,"nodeType":"RevertStatement","src":"4646:57:7"}]}}]},"documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"4086:51:7","text":" @dev See {IERC721-transferFrom}."},"functionSelector":"23b872dd","id":1853,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4151:12:7","nodeType":"FunctionDefinition","parameters":{"id":1815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"from","nameLocation":"4172:4:7","nodeType":"VariableDeclaration","scope":1853,"src":"4164:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1809,"name":"address","nodeType":"ElementaryTypeName","src":"4164:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"to","nameLocation":"4186:2:7","nodeType":"VariableDeclaration","scope":1853,"src":"4178:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1811,"name":"address","nodeType":"ElementaryTypeName","src":"4178:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1814,"mutability":"mutable","name":"tokenId","nameLocation":"4198:7:7","nodeType":"VariableDeclaration","scope":1853,"src":"4190:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1813,"name":"uint256","nodeType":"ElementaryTypeName","src":"4190:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4163:43:7"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[],"src":"4222:0:7"},"scope":2493,"src":"4142:578:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[2565],"body":{"id":1870,"nodeType":"Block","src":"4862:56:7","statements":[{"expression":{"arguments":[{"id":1864,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1856,"src":"4889:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1865,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4895:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1866,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"4899:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":1867,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1863,"name":"safeTransferFrom","nodeType":"Identifier","overloadedDeclarations":[1871,1901],"referencedDeclaration":1901,"src":"4872:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":1868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:39:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1869,"nodeType":"ExpressionStatement","src":"4872:39:7"}]},"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"4726:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"42842e0e","id":1871,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4795:16:7","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"from","nameLocation":"4820:4:7","nodeType":"VariableDeclaration","scope":1871,"src":"4812:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1855,"name":"address","nodeType":"ElementaryTypeName","src":"4812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"to","nameLocation":"4834:2:7","nodeType":"VariableDeclaration","scope":1871,"src":"4826:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"4826:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"tokenId","nameLocation":"4846:7:7","nodeType":"VariableDeclaration","scope":1871,"src":"4838:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1859,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4811:43:7"},"returnParameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"4862:0:7"},"scope":2493,"src":"4786:132:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[2555],"body":{"id":1900,"nodeType":"Block","src":"5087:130:7","statements":[{"expression":{"arguments":[{"id":1884,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5110:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1885,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5116:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5120:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1883,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"5097:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5097:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1888,"nodeType":"ExpressionStatement","src":"5097:31:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1892,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"5172:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5172:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1894,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"5186:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1895,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1876,"src":"5192:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1896,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1878,"src":"5196:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1897,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"5205:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1889,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"5138:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2733_$","typeString":"type(library ERC721Utils)"}},"id":1891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5150:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"5138:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5138:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1899,"nodeType":"ExpressionStatement","src":"5138:72:7"}]},"documentation":{"id":1872,"nodeType":"StructuredDocumentation","src":"4924:55:7","text":" @dev See {IERC721-safeTransferFrom}."},"functionSelector":"b88d4fde","id":1901,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"4993:16:7","nodeType":"FunctionDefinition","parameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1874,"mutability":"mutable","name":"from","nameLocation":"5018:4:7","nodeType":"VariableDeclaration","scope":1901,"src":"5010:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1873,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1876,"mutability":"mutable","name":"to","nameLocation":"5032:2:7","nodeType":"VariableDeclaration","scope":1901,"src":"5024:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1875,"name":"address","nodeType":"ElementaryTypeName","src":"5024:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1878,"mutability":"mutable","name":"tokenId","nameLocation":"5044:7:7","nodeType":"VariableDeclaration","scope":1901,"src":"5036:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"5036:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1880,"mutability":"mutable","name":"data","nameLocation":"5066:4:7","nodeType":"VariableDeclaration","scope":1901,"src":"5053:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1879,"name":"bytes","nodeType":"ElementaryTypeName","src":"5053:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5009:62:7"},"returnParameters":{"id":1882,"nodeType":"ParameterList","parameters":[],"src":"5087:0:7"},"scope":2493,"src":"4984:233:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1913,"nodeType":"Block","src":"5807:40:7","statements":[{"expression":{"baseExpression":{"id":1909,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"5824:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1911,"indexExpression":{"id":1910,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1904,"src":"5832:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5824:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1908,"id":1912,"nodeType":"Return","src":"5817:23:7"}]},"documentation":{"id":1902,"nodeType":"StructuredDocumentation","src":"5223:504:7","text":" @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC-721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."},"id":1914,"implemented":true,"kind":"function","modifiers":[],"name":"_ownerOf","nameLocation":"5741:8:7","nodeType":"FunctionDefinition","parameters":{"id":1905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1904,"mutability":"mutable","name":"tokenId","nameLocation":"5758:7:7","nodeType":"VariableDeclaration","scope":1914,"src":"5750:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1903,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5749:17:7"},"returnParameters":{"id":1908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1907,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1914,"src":"5798:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1906,"name":"address","nodeType":"ElementaryTypeName","src":"5798:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5797:9:7"},"scope":2493,"src":"5732:115:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1926,"nodeType":"Block","src":"6042:48:7","statements":[{"expression":{"baseExpression":{"id":1922,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"6059:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":1924,"indexExpression":{"id":1923,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"6075:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6059:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1921,"id":1925,"nodeType":"Return","src":"6052:31:7"}]},"documentation":{"id":1915,"nodeType":"StructuredDocumentation","src":"5853:105:7","text":" @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."},"id":1927,"implemented":true,"kind":"function","modifiers":[],"name":"_getApproved","nameLocation":"5972:12:7","nodeType":"FunctionDefinition","parameters":{"id":1918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1917,"mutability":"mutable","name":"tokenId","nameLocation":"5993:7:7","nodeType":"VariableDeclaration","scope":1927,"src":"5985:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5985:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5984:17:7"},"returnParameters":{"id":1921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1927,"src":"6033:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1919,"name":"address","nodeType":"ElementaryTypeName","src":"6033:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6032:9:7"},"scope":2493,"src":"5963:127:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1962,"nodeType":"Block","src":"6510:163:7","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1960,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6539:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6558:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6550:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1940,"name":"address","nodeType":"ElementaryTypeName","src":"6550:7:7","typeDescriptions":{}}},"id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6550:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6539:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1945,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"6577:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1946,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6586:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6577:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1949,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"6614:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1950,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6621:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1948,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"6597:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6597:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:52:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1954,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"6646:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1953,"name":"_getApproved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1927,"src":"6633:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":1955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6633:21:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1956,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"6658:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6633:32:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6577:88:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":1959,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6576:90:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6539:127:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1938,"id":1961,"nodeType":"Return","src":"6520:146:7"}]},"documentation":{"id":1928,"nodeType":"StructuredDocumentation","src":"6096:300:7","text":" @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":1963,"implemented":true,"kind":"function","modifiers":[],"name":"_isAuthorized","nameLocation":"6410:13:7","nodeType":"FunctionDefinition","parameters":{"id":1935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1930,"mutability":"mutable","name":"owner","nameLocation":"6432:5:7","nodeType":"VariableDeclaration","scope":1963,"src":"6424:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1929,"name":"address","nodeType":"ElementaryTypeName","src":"6424:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1932,"mutability":"mutable","name":"spender","nameLocation":"6447:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"6439:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1931,"name":"address","nodeType":"ElementaryTypeName","src":"6439:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1934,"mutability":"mutable","name":"tokenId","nameLocation":"6464:7:7","nodeType":"VariableDeclaration","scope":1963,"src":"6456:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1933,"name":"uint256","nodeType":"ElementaryTypeName","src":"6456:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6423:49:7"},"returnParameters":{"id":1938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1937,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1963,"src":"6504:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1936,"name":"bool","nodeType":"ElementaryTypeName","src":"6504:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6503:6:7"},"scope":2493,"src":"6401:272:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1999,"nodeType":"Block","src":"7202:271:7","statements":[{"condition":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7216:39:7","subExpression":{"arguments":[{"id":1974,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"7231:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1975,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"7238:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1976,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"7247:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1973,"name":"_isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1963,"src":"7217:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) view returns (bool)"}},"id":1977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7217:38:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1998,"nodeType":"IfStatement","src":"7212:255:7","trueBody":{"id":1997,"nodeType":"Block","src":"7257:210:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1966,"src":"7275:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1982,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7292:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7284:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1980,"name":"address","nodeType":"ElementaryTypeName","src":"7284:7:7","typeDescriptions":{}}},"id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7284:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7275:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1995,"nodeType":"Block","src":"7373:84:7","statements":[{"errorCall":{"arguments":[{"id":1991,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"7425:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1992,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"7434:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1990,"name":"ERC721InsufficientApproval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7398:26:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) pure"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7398:44:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1994,"nodeType":"RevertStatement","src":"7391:51:7"}]},"id":1996,"nodeType":"IfStatement","src":"7271:186:7","trueBody":{"id":1989,"nodeType":"Block","src":"7296:71:7","statements":[{"errorCall":{"arguments":[{"id":1986,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1970,"src":"7344:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1985,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"7321:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1988,"nodeType":"RevertStatement","src":"7314:38:7"}]}}]}}]},"documentation":{"id":1964,"nodeType":"StructuredDocumentation","src":"6679:421:7","text":" @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if:\n - `spender` does not have approval from `owner` for `tokenId`.\n - `spender` does not have approval to manage all of `owner`'s assets.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."},"id":2000,"implemented":true,"kind":"function","modifiers":[],"name":"_checkAuthorized","nameLocation":"7114:16:7","nodeType":"FunctionDefinition","parameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1966,"mutability":"mutable","name":"owner","nameLocation":"7139:5:7","nodeType":"VariableDeclaration","scope":2000,"src":"7131:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1965,"name":"address","nodeType":"ElementaryTypeName","src":"7131:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1968,"mutability":"mutable","name":"spender","nameLocation":"7154:7:7","nodeType":"VariableDeclaration","scope":2000,"src":"7146:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1967,"name":"address","nodeType":"ElementaryTypeName","src":"7146:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1970,"mutability":"mutable","name":"tokenId","nameLocation":"7171:7:7","nodeType":"VariableDeclaration","scope":2000,"src":"7163:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"7163:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7130:49:7"},"returnParameters":{"id":1972,"nodeType":"ParameterList","parameters":[],"src":"7202:0:7"},"scope":2493,"src":"7105:368:7","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2015,"nodeType":"Block","src":"8190:78:7","statements":[{"id":2014,"nodeType":"UncheckedBlock","src":"8200:62:7","statements":[{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2008,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"8224:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2010,"indexExpression":{"id":2009,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"8234:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8224:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":2011,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2005,"src":"8246:5:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"8224:27:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2013,"nodeType":"ExpressionStatement","src":"8224:27:7"}]}]},"documentation":{"id":2001,"nodeType":"StructuredDocumentation","src":"7479:631:7","text":" @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."},"id":2016,"implemented":true,"kind":"function","modifiers":[],"name":"_increaseBalance","nameLocation":"8124:16:7","nodeType":"FunctionDefinition","parameters":{"id":2006,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"account","nameLocation":"8149:7:7","nodeType":"VariableDeclaration","scope":2016,"src":"8141:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"8141:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2005,"mutability":"mutable","name":"value","nameLocation":"8166:5:7","nodeType":"VariableDeclaration","scope":2016,"src":"8158:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2004,"name":"uint128","nodeType":"ElementaryTypeName","src":"8158:7:7","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"8140:32:7"},"returnParameters":{"id":2007,"nodeType":"ParameterList","parameters":[],"src":"8190:0:7"},"scope":2493,"src":"8115:153:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2105,"nodeType":"Block","src":"8956:700:7","statements":[{"assignments":[2029],"declarations":[{"constant":false,"id":2029,"mutability":"mutable","name":"from","nameLocation":"8974:4:7","nodeType":"VariableDeclaration","scope":2105,"src":"8966:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2028,"name":"address","nodeType":"ElementaryTypeName","src":"8966:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2033,"initialValue":{"arguments":[{"id":2031,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"8990:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2030,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"8981:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8981:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"8966:32:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2034,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9058:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9074:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9066:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"9066:7:7","typeDescriptions":{}}},"id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9066:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9058:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2047,"nodeType":"IfStatement","src":"9054:86:7","trueBody":{"id":2046,"nodeType":"Block","src":"9078:62:7","statements":[{"expression":{"arguments":[{"id":2041,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9109:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2042,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2023,"src":"9115:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2043,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"9121:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2040,"name":"_checkAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"9092:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256) view"}},"id":2044,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9092:37:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2045,"nodeType":"ExpressionStatement","src":"9092:37:7"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2048,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9184:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9200:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2050,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9192:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2049,"name":"address","nodeType":"ElementaryTypeName","src":"9192:7:7","typeDescriptions":{}}},"id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9192:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9184:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2075,"nodeType":"IfStatement","src":"9180:256:7","trueBody":{"id":2074,"nodeType":"Block","src":"9204:232:7","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":2057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9317:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2056,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9309:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2055,"name":"address","nodeType":"ElementaryTypeName","src":"9309:7:7","typeDescriptions":{}}},"id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9309:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2059,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"9321:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9338:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9330:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2060,"name":"address","nodeType":"ElementaryTypeName","src":"9330:7:7","typeDescriptions":{}}},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9330:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"66616c7365","id":2064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9342:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2054,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2360,2426],"referencedDeclaration":2426,"src":"9300:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9300:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2066,"nodeType":"ExpressionStatement","src":"9300:48:7"},{"id":2073,"nodeType":"UncheckedBlock","src":"9363:63:7","statements":[{"expression":{"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2067,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"9391:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2069,"indexExpression":{"id":2068,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9401:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9391:15:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9410:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9391:20:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2072,"nodeType":"ExpressionStatement","src":"9391:20:7"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9450:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9464:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9456:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2077,"name":"address","nodeType":"ElementaryTypeName","src":"9456:7:7","typeDescriptions":{}}},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9456:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9450:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2090,"nodeType":"IfStatement","src":"9446:107:7","trueBody":{"id":2089,"nodeType":"Block","src":"9468:85:7","statements":[{"id":2088,"nodeType":"UncheckedBlock","src":"9482:61:7","statements":[{"expression":{"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2082,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"9510:9:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":2084,"indexExpression":{"id":2083,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9520:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9510:13:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9527:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9510:18:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2087,"nodeType":"ExpressionStatement","src":"9510:18:7"}]}]}},{"expression":{"id":2095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2091,"name":"_owners","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"9563:7:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2093,"indexExpression":{"id":2092,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"9571:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9563:16:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2094,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9582:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9563:21:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2096,"nodeType":"ExpressionStatement","src":"9563:21:7"},{"eventCall":{"arguments":[{"id":2098,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9609:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2099,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"9615:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2100,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2021,"src":"9619:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2097,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2509,"src":"9600:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9600:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2102,"nodeType":"EmitStatement","src":"9595:32:7"},{"expression":{"id":2103,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2029,"src":"9645:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2027,"id":2104,"nodeType":"Return","src":"9638:11:7"}]},"documentation":{"id":2017,"nodeType":"StructuredDocumentation","src":"8274:582:7","text":" @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."},"id":2106,"implemented":true,"kind":"function","modifiers":[],"name":"_update","nameLocation":"8870:7:7","nodeType":"FunctionDefinition","parameters":{"id":2024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2019,"mutability":"mutable","name":"to","nameLocation":"8886:2:7","nodeType":"VariableDeclaration","scope":2106,"src":"8878:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2018,"name":"address","nodeType":"ElementaryTypeName","src":"8878:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2021,"mutability":"mutable","name":"tokenId","nameLocation":"8898:7:7","nodeType":"VariableDeclaration","scope":2106,"src":"8890:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2020,"name":"uint256","nodeType":"ElementaryTypeName","src":"8890:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2023,"mutability":"mutable","name":"auth","nameLocation":"8915:4:7","nodeType":"VariableDeclaration","scope":2106,"src":"8907:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2022,"name":"address","nodeType":"ElementaryTypeName","src":"8907:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8877:43:7"},"returnParameters":{"id":2027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2026,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2106,"src":"8947:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2025,"name":"address","nodeType":"ElementaryTypeName","src":"8947:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8946:9:7"},"scope":2493,"src":"8861:795:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2155,"nodeType":"Block","src":"10031:274:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2114,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"10045:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10059:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10051:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2115,"name":"address","nodeType":"ElementaryTypeName","src":"10051:7:7","typeDescriptions":{}}},"id":2118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10051:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10045:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2128,"nodeType":"IfStatement","src":"10041:87:7","trueBody":{"id":2127,"nodeType":"Block","src":"10063:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10114:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10106:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2121,"name":"address","nodeType":"ElementaryTypeName","src":"10106:7:7","typeDescriptions":{}}},"id":2124,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2120,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"10084:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10084:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2126,"nodeType":"RevertStatement","src":"10077:40:7"}]}},{"assignments":[2130],"declarations":[{"constant":false,"id":2130,"mutability":"mutable","name":"previousOwner","nameLocation":"10145:13:7","nodeType":"VariableDeclaration","scope":2155,"src":"10137:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2129,"name":"address","nodeType":"ElementaryTypeName","src":"10137:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2139,"initialValue":{"arguments":[{"id":2132,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2109,"src":"10169:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2133,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2111,"src":"10173:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10190:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10182:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2134,"name":"address","nodeType":"ElementaryTypeName","src":"10182:7:7","typeDescriptions":{}}},"id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10182:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2131,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"10161:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10161:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"10137:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2140,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2130,"src":"10207:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10232:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10224:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2141,"name":"address","nodeType":"ElementaryTypeName","src":"10224:7:7","typeDescriptions":{}}},"id":2144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10224:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10207:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2154,"nodeType":"IfStatement","src":"10203:96:7","trueBody":{"id":2153,"nodeType":"Block","src":"10236:63:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10277:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2147,"name":"address","nodeType":"ElementaryTypeName","src":"10277:7:7","typeDescriptions":{}}},"id":2150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10277:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2146,"name":"ERC721InvalidSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"10257:19:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10257:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2152,"nodeType":"RevertStatement","src":"10250:38:7"}]}}]},"documentation":{"id":2107,"nodeType":"StructuredDocumentation","src":"9662:311:7","text":" @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."},"id":2156,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9987:5:7","nodeType":"FunctionDefinition","parameters":{"id":2112,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2109,"mutability":"mutable","name":"to","nameLocation":"10001:2:7","nodeType":"VariableDeclaration","scope":2156,"src":"9993:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2108,"name":"address","nodeType":"ElementaryTypeName","src":"9993:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2111,"mutability":"mutable","name":"tokenId","nameLocation":"10013:7:7","nodeType":"VariableDeclaration","scope":2156,"src":"10005:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2110,"name":"uint256","nodeType":"ElementaryTypeName","src":"10005:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9992:29:7"},"returnParameters":{"id":2113,"nodeType":"ParameterList","parameters":[],"src":"10031:0:7"},"scope":2493,"src":"9978:327:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2170,"nodeType":"Block","src":"10713:43:7","statements":[{"expression":{"arguments":[{"id":2165,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2159,"src":"10733:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2166,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"10737:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10746:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2164,"name":"_safeMint","nodeType":"Identifier","overloadedDeclarations":[2171,2201],"referencedDeclaration":2201,"src":"10723:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":2168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10723:26:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2169,"nodeType":"ExpressionStatement","src":"10723:26:7"}]},"documentation":{"id":2157,"nodeType":"StructuredDocumentation","src":"10311:340:7","text":" @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2171,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10665:9:7","nodeType":"FunctionDefinition","parameters":{"id":2162,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2159,"mutability":"mutable","name":"to","nameLocation":"10683:2:7","nodeType":"VariableDeclaration","scope":2171,"src":"10675:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2158,"name":"address","nodeType":"ElementaryTypeName","src":"10675:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2161,"mutability":"mutable","name":"tokenId","nameLocation":"10695:7:7","nodeType":"VariableDeclaration","scope":2171,"src":"10687:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2160,"name":"uint256","nodeType":"ElementaryTypeName","src":"10687:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10674:29:7"},"returnParameters":{"id":2163,"nodeType":"ParameterList","parameters":[],"src":"10713:0:7"},"scope":2493,"src":"10656:100:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2200,"nodeType":"Block","src":"11061:123:7","statements":[{"expression":{"arguments":[{"id":2182,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"11077:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2183,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"11081:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2181,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"11071:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11071:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2185,"nodeType":"ExpressionStatement","src":"11071:18:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2189,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"11133:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11133:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":2193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11155:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2192,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11147:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2191,"name":"address","nodeType":"ElementaryTypeName","src":"11147:7:7","typeDescriptions":{}}},"id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11147:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2195,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2174,"src":"11159:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2196,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2176,"src":"11163:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2197,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"11172:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2186,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"11099:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2733_$","typeString":"type(library ERC721Utils)"}},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11111:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"11099:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11099:78:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2199,"nodeType":"ExpressionStatement","src":"11099:78:7"}]},"documentation":{"id":2172,"nodeType":"StructuredDocumentation","src":"10762:210:7","text":" @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2201,"implemented":true,"kind":"function","modifiers":[],"name":"_safeMint","nameLocation":"10986:9:7","nodeType":"FunctionDefinition","parameters":{"id":2179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2174,"mutability":"mutable","name":"to","nameLocation":"11004:2:7","nodeType":"VariableDeclaration","scope":2201,"src":"10996:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2173,"name":"address","nodeType":"ElementaryTypeName","src":"10996:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2176,"mutability":"mutable","name":"tokenId","nameLocation":"11016:7:7","nodeType":"VariableDeclaration","scope":2201,"src":"11008:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2175,"name":"uint256","nodeType":"ElementaryTypeName","src":"11008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"data","nameLocation":"11038:4:7","nodeType":"VariableDeclaration","scope":2201,"src":"11025:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2177,"name":"bytes","nodeType":"ElementaryTypeName","src":"11025:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"10995:48:7"},"returnParameters":{"id":2180,"nodeType":"ParameterList","parameters":[],"src":"11061:0:7"},"scope":2493,"src":"10977:207:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2233,"nodeType":"Block","src":"11551:186:7","statements":[{"assignments":[2208],"declarations":[{"constant":false,"id":2208,"mutability":"mutable","name":"previousOwner","nameLocation":"11569:13:7","nodeType":"VariableDeclaration","scope":2233,"src":"11561:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2207,"name":"address","nodeType":"ElementaryTypeName","src":"11561:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2220,"initialValue":{"arguments":[{"arguments":[{"hexValue":"30","id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11601:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11593:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2210,"name":"address","nodeType":"ElementaryTypeName","src":"11593:7:7","typeDescriptions":{}}},"id":2213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11593:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2214,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"11605:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11622:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11614:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2215,"name":"address","nodeType":"ElementaryTypeName","src":"11614:7:7","typeDescriptions":{}}},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11614:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2209,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"11585:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11585:40:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"11561:64:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2221,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"11639:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2224,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11664:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2223,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11656:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2222,"name":"address","nodeType":"ElementaryTypeName","src":"11656:7:7","typeDescriptions":{}}},"id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11656:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11639:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2232,"nodeType":"IfStatement","src":"11635:96:7","trueBody":{"id":2231,"nodeType":"Block","src":"11668:63:7","statements":[{"errorCall":{"arguments":[{"id":2228,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2204,"src":"11712:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2227,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"11689:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11689:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2230,"nodeType":"RevertStatement","src":"11682:38:7"}]}}]},"documentation":{"id":2202,"nodeType":"StructuredDocumentation","src":"11190:315:7","text":" @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."},"id":2234,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"11519:5:7","nodeType":"FunctionDefinition","parameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2204,"mutability":"mutable","name":"tokenId","nameLocation":"11533:7:7","nodeType":"VariableDeclaration","scope":2234,"src":"11525:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2203,"name":"uint256","nodeType":"ElementaryTypeName","src":"11525:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11524:17:7"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[],"src":"11551:0:7"},"scope":2493,"src":"11510:227:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2293,"nodeType":"Block","src":"12132:389:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2244,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"12146:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12160:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12152:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2245,"name":"address","nodeType":"ElementaryTypeName","src":"12152:7:7","typeDescriptions":{}}},"id":2248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12152:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12146:16:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2258,"nodeType":"IfStatement","src":"12142:87:7","trueBody":{"id":2257,"nodeType":"Block","src":"12164:65:7","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":2253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12215:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12207:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2251,"name":"address","nodeType":"ElementaryTypeName","src":"12207:7:7","typeDescriptions":{}}},"id":2254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12207:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2250,"name":"ERC721InvalidReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":219,"src":"12185:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2255,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12185:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2256,"nodeType":"RevertStatement","src":"12178:40:7"}]}},{"assignments":[2260],"declarations":[{"constant":false,"id":2260,"mutability":"mutable","name":"previousOwner","nameLocation":"12246:13:7","nodeType":"VariableDeclaration","scope":2293,"src":"12238:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2259,"name":"address","nodeType":"ElementaryTypeName","src":"12238:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2269,"initialValue":{"arguments":[{"id":2262,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2239,"src":"12270:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2263,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12274:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":2266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12291:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12283:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2264,"name":"address","nodeType":"ElementaryTypeName","src":"12283:7:7","typeDescriptions":{}}},"id":2267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2261,"name":"_update","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2106,"src":"12262:7:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$","typeString":"function (address,uint256,address) returns (address)"}},"id":2268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12262:32:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"12238:56:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2270,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"12308:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12333:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12325:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2271,"name":"address","nodeType":"ElementaryTypeName","src":"12325:7:7","typeDescriptions":{}}},"id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12325:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12308:27:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2281,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"12410:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2282,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"12427:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"12410:21:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2291,"nodeType":"IfStatement","src":"12406:109:7","trueBody":{"id":2290,"nodeType":"Block","src":"12433:82:7","statements":[{"errorCall":{"arguments":[{"id":2285,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2237,"src":"12475:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2286,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12481:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2287,"name":"previousOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2260,"src":"12490:13:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2284,"name":"ERC721IncorrectOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":209,"src":"12454:20:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$","typeString":"function (address,uint256,address) pure"}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12454:50:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2289,"nodeType":"RevertStatement","src":"12447:57:7"}]}},"id":2292,"nodeType":"IfStatement","src":"12304:211:7","trueBody":{"id":2280,"nodeType":"Block","src":"12337:63:7","statements":[{"errorCall":{"arguments":[{"id":2277,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"12381:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2276,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"12358:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12358:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"RevertStatement","src":"12351:38:7"}]}}]},"documentation":{"id":2235,"nodeType":"StructuredDocumentation","src":"11743:313:7","text":" @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."},"id":2294,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"12070:9:7","nodeType":"FunctionDefinition","parameters":{"id":2242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2237,"mutability":"mutable","name":"from","nameLocation":"12088:4:7","nodeType":"VariableDeclaration","scope":2294,"src":"12080:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2236,"name":"address","nodeType":"ElementaryTypeName","src":"12080:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2239,"mutability":"mutable","name":"to","nameLocation":"12102:2:7","nodeType":"VariableDeclaration","scope":2294,"src":"12094:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2238,"name":"address","nodeType":"ElementaryTypeName","src":"12094:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2241,"mutability":"mutable","name":"tokenId","nameLocation":"12114:7:7","nodeType":"VariableDeclaration","scope":2294,"src":"12106:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2240,"name":"uint256","nodeType":"ElementaryTypeName","src":"12106:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12079:43:7"},"returnParameters":{"id":2243,"nodeType":"ParameterList","parameters":[],"src":"12132:0:7"},"scope":2493,"src":"12061:460:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2311,"nodeType":"Block","src":"13530:53:7","statements":[{"expression":{"arguments":[{"id":2305,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2297,"src":"13554:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2306,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2299,"src":"13560:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2307,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2301,"src":"13564:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"","id":2308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13573:2:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":2304,"name":"_safeTransfer","nodeType":"Identifier","overloadedDeclarations":[2312,2342],"referencedDeclaration":2342,"src":"13540:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,uint256,bytes memory)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13540:36:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"ExpressionStatement","src":"13540:36:7"}]},"documentation":{"id":2295,"nodeType":"StructuredDocumentation","src":"12527:923:7","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC-721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"id":2312,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13464:13:7","nodeType":"FunctionDefinition","parameters":{"id":2302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2297,"mutability":"mutable","name":"from","nameLocation":"13486:4:7","nodeType":"VariableDeclaration","scope":2312,"src":"13478:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2296,"name":"address","nodeType":"ElementaryTypeName","src":"13478:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"to","nameLocation":"13500:2:7","nodeType":"VariableDeclaration","scope":2312,"src":"13492:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2298,"name":"address","nodeType":"ElementaryTypeName","src":"13492:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2301,"mutability":"mutable","name":"tokenId","nameLocation":"13512:7:7","nodeType":"VariableDeclaration","scope":2312,"src":"13504:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2300,"name":"uint256","nodeType":"ElementaryTypeName","src":"13504:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13477:43:7"},"returnParameters":{"id":2303,"nodeType":"ParameterList","parameters":[],"src":"13530:0:7"},"scope":2493,"src":"13455:128:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2341,"nodeType":"Block","src":"13922:127:7","statements":[{"expression":{"arguments":[{"id":2325,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"13942:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2326,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"13948:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2327,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"13952:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2324,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"13932:9:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13932:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2329,"nodeType":"ExpressionStatement","src":"13932:28:7"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2333,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3655,"src":"14004:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":2334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14004:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2335,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"14018:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2336,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2317,"src":"14024:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2337,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"14028:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2338,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2321,"src":"14037:4:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2330,"name":"ERC721Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2733,"src":"13970:11:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC721Utils_$2733_$","typeString":"type(library ERC721Utils)"}},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13982:21:7","memberName":"checkOnERC721Received","nodeType":"MemberAccess","referencedDeclaration":2732,"src":"13970:33:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,address,address,uint256,bytes memory)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13970:72:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"13970:72:7"}]},"documentation":{"id":2313,"nodeType":"StructuredDocumentation","src":"13589:226:7","text":" @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."},"id":2342,"implemented":true,"kind":"function","modifiers":[],"name":"_safeTransfer","nameLocation":"13829:13:7","nodeType":"FunctionDefinition","parameters":{"id":2322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2315,"mutability":"mutable","name":"from","nameLocation":"13851:4:7","nodeType":"VariableDeclaration","scope":2342,"src":"13843:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2314,"name":"address","nodeType":"ElementaryTypeName","src":"13843:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2317,"mutability":"mutable","name":"to","nameLocation":"13865:2:7","nodeType":"VariableDeclaration","scope":2342,"src":"13857:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2316,"name":"address","nodeType":"ElementaryTypeName","src":"13857:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2319,"mutability":"mutable","name":"tokenId","nameLocation":"13877:7:7","nodeType":"VariableDeclaration","scope":2342,"src":"13869:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2318,"name":"uint256","nodeType":"ElementaryTypeName","src":"13869:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2321,"mutability":"mutable","name":"data","nameLocation":"13899:4:7","nodeType":"VariableDeclaration","scope":2342,"src":"13886:17:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2320,"name":"bytes","nodeType":"ElementaryTypeName","src":"13886:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"13842:62:7"},"returnParameters":{"id":2323,"nodeType":"ParameterList","parameters":[],"src":"13922:0:7"},"scope":2493,"src":"13820:229:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2359,"nodeType":"Block","src":"14562:50:7","statements":[{"expression":{"arguments":[{"id":2353,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2345,"src":"14581:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2354,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"14585:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2355,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2349,"src":"14594:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":2356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14600:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2352,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[2360,2426],"referencedDeclaration":2426,"src":"14572:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,uint256,address,bool)"}},"id":2357,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14572:33:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2358,"nodeType":"ExpressionStatement","src":"14572:33:7"}]},"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"14055:432:7","text":" @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."},"id":2360,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14501:8:7","nodeType":"FunctionDefinition","parameters":{"id":2350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2345,"mutability":"mutable","name":"to","nameLocation":"14518:2:7","nodeType":"VariableDeclaration","scope":2360,"src":"14510:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2344,"name":"address","nodeType":"ElementaryTypeName","src":"14510:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2347,"mutability":"mutable","name":"tokenId","nameLocation":"14530:7:7","nodeType":"VariableDeclaration","scope":2360,"src":"14522:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2346,"name":"uint256","nodeType":"ElementaryTypeName","src":"14522:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2349,"mutability":"mutable","name":"auth","nameLocation":"14547:4:7","nodeType":"VariableDeclaration","scope":2360,"src":"14539:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2348,"name":"address","nodeType":"ElementaryTypeName","src":"14539:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14509:43:7"},"returnParameters":{"id":2351,"nodeType":"ParameterList","parameters":[],"src":"14562:0:7"},"scope":2493,"src":"14492:120:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2425,"nodeType":"Block","src":"14888:568:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2372,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"14954:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2373,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"14967:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14983:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2375,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14975:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"14975:7:7","typeDescriptions":{}}},"id":2377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14975:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14967:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"14954:31:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2418,"nodeType":"IfStatement","src":"14950:460:7","trueBody":{"id":2417,"nodeType":"Block","src":"14987:423:7","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"owner","nameLocation":"15009:5:7","nodeType":"VariableDeclaration","scope":2417,"src":"15001:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2380,"name":"address","nodeType":"ElementaryTypeName","src":"15001:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2385,"initialValue":{"arguments":[{"id":2383,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"15031:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2382,"name":"_requireOwned","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2492,"src":"15017:13:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15017:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"15001:38:7"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2386,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"15167:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15183:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15175:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2387,"name":"address","nodeType":"ElementaryTypeName","src":"15175:7:7","typeDescriptions":{}}},"id":2390,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15175:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15167:18:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2392,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15189:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2393,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"15198:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15189:13:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":2400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"15206:30:7","subExpression":{"arguments":[{"id":2397,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15224:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2398,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"15231:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2396,"name":"isApprovedForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"15207:16:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) view returns (bool)"}},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15207:29:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15167:69:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2407,"nodeType":"IfStatement","src":"15163:142:7","trueBody":{"id":2406,"nodeType":"Block","src":"15238:67:7","statements":[{"errorCall":{"arguments":[{"id":2403,"name":"auth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"15285:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2402,"name":"ERC721InvalidApprover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"15263:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15263:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2405,"nodeType":"RevertStatement","src":"15256:34:7"}]}},{"condition":{"id":2408,"name":"emitEvent","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2369,"src":"15323:9:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2416,"nodeType":"IfStatement","src":"15319:81:7","trueBody":{"id":2415,"nodeType":"Block","src":"15334:66:7","statements":[{"eventCall":{"arguments":[{"id":2410,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"15366:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2411,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"15373:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2412,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"15377:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2409,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"15357:8:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":2413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15357:28:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2414,"nodeType":"EmitStatement","src":"15352:33:7"}]}}]}},{"expression":{"id":2423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2419,"name":"_tokenApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1583,"src":"15420:15:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_address_$","typeString":"mapping(uint256 => address)"}},"id":2421,"indexExpression":{"id":2420,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"15436:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15420:24:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2422,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2363,"src":"15447:2:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15420:29:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2424,"nodeType":"ExpressionStatement","src":"15420:29:7"}]},"documentation":{"id":2361,"nodeType":"StructuredDocumentation","src":"14618:171:7","text":" @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"14803:8:7","nodeType":"FunctionDefinition","parameters":{"id":2370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2363,"mutability":"mutable","name":"to","nameLocation":"14820:2:7","nodeType":"VariableDeclaration","scope":2426,"src":"14812:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2362,"name":"address","nodeType":"ElementaryTypeName","src":"14812:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2365,"mutability":"mutable","name":"tokenId","nameLocation":"14832:7:7","nodeType":"VariableDeclaration","scope":2426,"src":"14824:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"14824:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"auth","nameLocation":"14849:4:7","nodeType":"VariableDeclaration","scope":2426,"src":"14841:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2366,"name":"address","nodeType":"ElementaryTypeName","src":"14841:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2369,"mutability":"mutable","name":"emitEvent","nameLocation":"14860:9:7","nodeType":"VariableDeclaration","scope":2426,"src":"14855:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2368,"name":"bool","nodeType":"ElementaryTypeName","src":"14855:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14811:59:7"},"returnParameters":{"id":2371,"nodeType":"ParameterList","parameters":[],"src":"14888:0:7"},"scope":2493,"src":"14794:662:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2462,"nodeType":"Block","src":"15758:219:7","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2436,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15772:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15792:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15784:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2437,"name":"address","nodeType":"ElementaryTypeName","src":"15784:7:7","typeDescriptions":{}}},"id":2440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15784:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15772:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2447,"nodeType":"IfStatement","src":"15768:91:7","trueBody":{"id":2446,"nodeType":"Block","src":"15796:63:7","statements":[{"errorCall":{"arguments":[{"id":2443,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15839:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2442,"name":"ERC721InvalidOperator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"15817:21:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15817:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2445,"nodeType":"RevertStatement","src":"15810:38:7"}]}},{"expression":{"id":2454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2448,"name":"_operatorApprovals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1589,"src":"15868:18:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2451,"indexExpression":{"id":2449,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"15887:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15868:25:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2452,"indexExpression":{"id":2450,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15894:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"15868:35:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2453,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"15906:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15868:46:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"ExpressionStatement","src":"15868:46:7"},{"eventCall":{"arguments":[{"id":2457,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2429,"src":"15944:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2458,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2431,"src":"15951:8:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2459,"name":"approved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2433,"src":"15961:8:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2456,"name":"ApprovalForAll","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2527,"src":"15929:14:7","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$","typeString":"function (address,address,bool)"}},"id":2460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15929:41:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2461,"nodeType":"EmitStatement","src":"15924:46:7"}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"15462:198:7","text":" @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."},"id":2463,"implemented":true,"kind":"function","modifiers":[],"name":"_setApprovalForAll","nameLocation":"15674:18:7","nodeType":"FunctionDefinition","parameters":{"id":2434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"owner","nameLocation":"15701:5:7","nodeType":"VariableDeclaration","scope":2463,"src":"15693:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2428,"name":"address","nodeType":"ElementaryTypeName","src":"15693:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2431,"mutability":"mutable","name":"operator","nameLocation":"15716:8:7","nodeType":"VariableDeclaration","scope":2463,"src":"15708:16:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2430,"name":"address","nodeType":"ElementaryTypeName","src":"15708:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2433,"mutability":"mutable","name":"approved","nameLocation":"15731:8:7","nodeType":"VariableDeclaration","scope":2463,"src":"15726:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2432,"name":"bool","nodeType":"ElementaryTypeName","src":"15726:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15692:48:7"},"returnParameters":{"id":2435,"nodeType":"ParameterList","parameters":[],"src":"15758:0:7"},"scope":2493,"src":"15665:312:7","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":2491,"nodeType":"Block","src":"16284:169:7","statements":[{"assignments":[2472],"declarations":[{"constant":false,"id":2472,"mutability":"mutable","name":"owner","nameLocation":"16302:5:7","nodeType":"VariableDeclaration","scope":2491,"src":"16294:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2471,"name":"address","nodeType":"ElementaryTypeName","src":"16294:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2476,"initialValue":{"arguments":[{"id":2474,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"16319:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2473,"name":"_ownerOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1914,"src":"16310:8:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view returns (address)"}},"id":2475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16310:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"16294:33:7"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2477,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"16341:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16358:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16350:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2478,"name":"address","nodeType":"ElementaryTypeName","src":"16350:7:7","typeDescriptions":{}}},"id":2481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16350:10:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16341:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2488,"nodeType":"IfStatement","src":"16337:88:7","trueBody":{"id":2487,"nodeType":"Block","src":"16362:63:7","statements":[{"errorCall":{"arguments":[{"id":2484,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2466,"src":"16406:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2483,"name":"ERC721NonexistentToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":200,"src":"16383:22:7","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":2485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16383:31:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2486,"nodeType":"RevertStatement","src":"16376:38:7"}]}},{"expression":{"id":2489,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2472,"src":"16441:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2470,"id":2490,"nodeType":"Return","src":"16434:12:7"}]},"documentation":{"id":2464,"nodeType":"StructuredDocumentation","src":"15983:224:7","text":" @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."},"id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"_requireOwned","nameLocation":"16221:13:7","nodeType":"FunctionDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2466,"mutability":"mutable","name":"tokenId","nameLocation":"16243:7:7","nodeType":"VariableDeclaration","scope":2492,"src":"16235:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"16235:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16234:17:7"},"returnParameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2492,"src":"16275:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2468,"name":"address","nodeType":"ElementaryTypeName","src":"16275:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16274:9:7"},"scope":2493,"src":"16212:241:7","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2494,"src":"775:15680:7","usedErrors":[195,200,209,214,219,226,231,236],"usedEvents":[2509,2518,2527]}],"src":"107:16349:7"},"id":7},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[5417],"IERC721":[2610]},"id":2611,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2495,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"../../utils/introspection/IERC165.sol","id":2497,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2611,"sourceUnit":5418,"src":"134:62:8","symbolAliases":[{"foreign":{"id":2496,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"142:7:8","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2499,"name":"IERC165","nameLocations":["288:7:8"],"nodeType":"IdentifierPath","referencedDeclaration":5417,"src":"288:7:8"},"id":2500,"nodeType":"InheritanceSpecifier","src":"288:7:8"}],"canonicalName":"IERC721","contractDependencies":[],"contractKind":"interface","documentation":{"id":2498,"nodeType":"StructuredDocumentation","src":"198:68:8","text":" @dev Required interface of an ERC-721 compliant contract."},"fullyImplemented":false,"id":2610,"linearizedBaseContracts":[2610,5417],"name":"IERC721","nameLocation":"277:7:8","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2501,"nodeType":"StructuredDocumentation","src":"302:88:8","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":2509,"name":"Transfer","nameLocation":"401:8:8","nodeType":"EventDefinition","parameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"426:4:8","nodeType":"VariableDeclaration","scope":2509,"src":"410:20:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2502,"name":"address","nodeType":"ElementaryTypeName","src":"410:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2505,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"448:2:8","nodeType":"VariableDeclaration","scope":2509,"src":"432:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2504,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2507,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"468:7:8","nodeType":"VariableDeclaration","scope":2509,"src":"452:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2506,"name":"uint256","nodeType":"ElementaryTypeName","src":"452:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:67:8"},"src":"395:82:8"},{"anonymous":false,"documentation":{"id":2510,"nodeType":"StructuredDocumentation","src":"483:94:8","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":2518,"name":"Approval","nameLocation":"588:8:8","nodeType":"EventDefinition","parameters":{"id":2517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2512,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"613:5:8","nodeType":"VariableDeclaration","scope":2518,"src":"597:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2511,"name":"address","nodeType":"ElementaryTypeName","src":"597:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2514,"indexed":true,"mutability":"mutable","name":"approved","nameLocation":"636:8:8","nodeType":"VariableDeclaration","scope":2518,"src":"620:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2513,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2516,"indexed":true,"mutability":"mutable","name":"tokenId","nameLocation":"662:7:8","nodeType":"VariableDeclaration","scope":2518,"src":"646:23:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2515,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"596:74:8"},"src":"582:89:8"},{"anonymous":false,"documentation":{"id":2519,"nodeType":"StructuredDocumentation","src":"677:117:8","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"eventSelector":"17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31","id":2527,"name":"ApprovalForAll","nameLocation":"805:14:8","nodeType":"EventDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"836:5:8","nodeType":"VariableDeclaration","scope":2527,"src":"820:21:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2520,"name":"address","nodeType":"ElementaryTypeName","src":"820:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2523,"indexed":true,"mutability":"mutable","name":"operator","nameLocation":"859:8:8","nodeType":"VariableDeclaration","scope":2527,"src":"843:24:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2522,"name":"address","nodeType":"ElementaryTypeName","src":"843:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2525,"indexed":false,"mutability":"mutable","name":"approved","nameLocation":"874:8:8","nodeType":"VariableDeclaration","scope":2527,"src":"869:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2524,"name":"bool","nodeType":"ElementaryTypeName","src":"869:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"819:64:8"},"src":"799:85:8"},{"documentation":{"id":2528,"nodeType":"StructuredDocumentation","src":"890:76:8","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":2535,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"980:9:8","nodeType":"FunctionDefinition","parameters":{"id":2531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2530,"mutability":"mutable","name":"owner","nameLocation":"998:5:8","nodeType":"VariableDeclaration","scope":2535,"src":"990:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"990:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"989:15:8"},"returnParameters":{"id":2534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2533,"mutability":"mutable","name":"balance","nameLocation":"1036:7:8","nodeType":"VariableDeclaration","scope":2535,"src":"1028:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2532,"name":"uint256","nodeType":"ElementaryTypeName","src":"1028:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1027:17:8"},"scope":2610,"src":"971:74:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"1051:131:8","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":2543,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nameLocation":"1196:7:8","nodeType":"FunctionDefinition","parameters":{"id":2539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"tokenId","nameLocation":"1212:7:8","nodeType":"VariableDeclaration","scope":2543,"src":"1204:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1204:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1203:17:8"},"returnParameters":{"id":2542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2541,"mutability":"mutable","name":"owner","nameLocation":"1252:5:8","nodeType":"VariableDeclaration","scope":2543,"src":"1244:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2540,"name":"address","nodeType":"ElementaryTypeName","src":"1244:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1243:15:8"},"scope":2610,"src":"1187:72:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2544,"nodeType":"StructuredDocumentation","src":"1265:565:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":2555,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"1844:16:8","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2546,"mutability":"mutable","name":"from","nameLocation":"1869:4:8","nodeType":"VariableDeclaration","scope":2555,"src":"1861:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2545,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2548,"mutability":"mutable","name":"to","nameLocation":"1883:2:8","nodeType":"VariableDeclaration","scope":2555,"src":"1875:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2547,"name":"address","nodeType":"ElementaryTypeName","src":"1875:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"tokenId","nameLocation":"1895:7:8","nodeType":"VariableDeclaration","scope":2555,"src":"1887:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"1887:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"data","nameLocation":"1919:4:8","nodeType":"VariableDeclaration","scope":2555,"src":"1904:19:8","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2551,"name":"bytes","nodeType":"ElementaryTypeName","src":"1904:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1860:64:8"},"returnParameters":{"id":2554,"nodeType":"ParameterList","parameters":[],"src":"1933:0:8"},"scope":2610,"src":"1835:99:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2556,"nodeType":"StructuredDocumentation","src":"1940:706:8","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC-721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":2565,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nameLocation":"2660:16:8","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"from","nameLocation":"2685:4:8","nodeType":"VariableDeclaration","scope":2565,"src":"2677:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2557,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2560,"mutability":"mutable","name":"to","nameLocation":"2699:2:8","nodeType":"VariableDeclaration","scope":2565,"src":"2691:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2559,"name":"address","nodeType":"ElementaryTypeName","src":"2691:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2562,"mutability":"mutable","name":"tokenId","nameLocation":"2711:7:8","nodeType":"VariableDeclaration","scope":2565,"src":"2703:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2561,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2676:43:8"},"returnParameters":{"id":2564,"nodeType":"ParameterList","parameters":[],"src":"2728:0:8"},"scope":2610,"src":"2651:78:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"2735:733:8","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":2575,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"3482:12:8","nodeType":"FunctionDefinition","parameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"from","nameLocation":"3503:4:8","nodeType":"VariableDeclaration","scope":2575,"src":"3495:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2567,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"to","nameLocation":"3517:2:8","nodeType":"VariableDeclaration","scope":2575,"src":"3509:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2569,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2572,"mutability":"mutable","name":"tokenId","nameLocation":"3529:7:8","nodeType":"VariableDeclaration","scope":2575,"src":"3521:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2571,"name":"uint256","nodeType":"ElementaryTypeName","src":"3521:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3494:43:8"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[],"src":"3546:0:8"},"scope":2610,"src":"3473:74:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2576,"nodeType":"StructuredDocumentation","src":"3553:452:8","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":2583,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4019:7:8","nodeType":"FunctionDefinition","parameters":{"id":2581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2578,"mutability":"mutable","name":"to","nameLocation":"4035:2:8","nodeType":"VariableDeclaration","scope":2583,"src":"4027:10:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2577,"name":"address","nodeType":"ElementaryTypeName","src":"4027:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2580,"mutability":"mutable","name":"tokenId","nameLocation":"4047:7:8","nodeType":"VariableDeclaration","scope":2583,"src":"4039:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2579,"name":"uint256","nodeType":"ElementaryTypeName","src":"4039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4026:29:8"},"returnParameters":{"id":2582,"nodeType":"ParameterList","parameters":[],"src":"4064:0:8"},"scope":2610,"src":"4010:55:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2584,"nodeType":"StructuredDocumentation","src":"4071:315:8","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":2591,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nameLocation":"4400:17:8","nodeType":"FunctionDefinition","parameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2586,"mutability":"mutable","name":"operator","nameLocation":"4426:8:8","nodeType":"VariableDeclaration","scope":2591,"src":"4418:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2585,"name":"address","nodeType":"ElementaryTypeName","src":"4418:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2588,"mutability":"mutable","name":"approved","nameLocation":"4441:8:8","nodeType":"VariableDeclaration","scope":2591,"src":"4436:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2587,"name":"bool","nodeType":"ElementaryTypeName","src":"4436:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4417:33:8"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[],"src":"4459:0:8"},"scope":2610,"src":"4391:69:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":2592,"nodeType":"StructuredDocumentation","src":"4466:139:8","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":2599,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nameLocation":"4619:11:8","nodeType":"FunctionDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2594,"mutability":"mutable","name":"tokenId","nameLocation":"4639:7:8","nodeType":"VariableDeclaration","scope":2599,"src":"4631:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"4631:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4630:17:8"},"returnParameters":{"id":2598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2597,"mutability":"mutable","name":"operator","nameLocation":"4679:8:8","nodeType":"VariableDeclaration","scope":2599,"src":"4671:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2596,"name":"address","nodeType":"ElementaryTypeName","src":"4671:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4670:18:8"},"scope":2610,"src":"4610:79:8","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"4695:138:8","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":2609,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nameLocation":"4847:16:8","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2602,"mutability":"mutable","name":"owner","nameLocation":"4872:5:8","nodeType":"VariableDeclaration","scope":2609,"src":"4864:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2601,"name":"address","nodeType":"ElementaryTypeName","src":"4864:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2604,"mutability":"mutable","name":"operator","nameLocation":"4887:8:8","nodeType":"VariableDeclaration","scope":2609,"src":"4879:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2603,"name":"address","nodeType":"ElementaryTypeName","src":"4879:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4863:33:8"},"returnParameters":{"id":2608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2609,"src":"4920:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2606,"name":"bool","nodeType":"ElementaryTypeName","src":"4920:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4919:6:8"},"scope":2610,"src":"4838:88:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2611,"src":"267:4661:8","usedErrors":[],"usedEvents":[2509,2518,2527]}],"src":"108:4821:8"},"id":8},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","exportedSymbols":{"IERC721Receiver":[2628]},"id":2629,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2612,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"116:24:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC721Receiver","contractDependencies":[],"contractKind":"interface","documentation":{"id":2613,"nodeType":"StructuredDocumentation","src":"142:154:9","text":" @title ERC-721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC-721 asset contracts."},"fullyImplemented":false,"id":2628,"linearizedBaseContracts":[2628],"name":"IERC721Receiver","nameLocation":"307:15:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2614,"nodeType":"StructuredDocumentation","src":"329:500:9","text":" @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."},"functionSelector":"150b7a02","id":2627,"implemented":false,"kind":"function","modifiers":[],"name":"onERC721Received","nameLocation":"843:16:9","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2616,"mutability":"mutable","name":"operator","nameLocation":"877:8:9","nodeType":"VariableDeclaration","scope":2627,"src":"869:16:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2615,"name":"address","nodeType":"ElementaryTypeName","src":"869:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2618,"mutability":"mutable","name":"from","nameLocation":"903:4:9","nodeType":"VariableDeclaration","scope":2627,"src":"895:12:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2617,"name":"address","nodeType":"ElementaryTypeName","src":"895:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2620,"mutability":"mutable","name":"tokenId","nameLocation":"925:7:9","nodeType":"VariableDeclaration","scope":2627,"src":"917:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2619,"name":"uint256","nodeType":"ElementaryTypeName","src":"917:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2622,"mutability":"mutable","name":"data","nameLocation":"957:4:9","nodeType":"VariableDeclaration","scope":2627,"src":"942:19:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2621,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"859:108:9"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2627,"src":"986:6:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2624,"name":"bytes4","nodeType":"ElementaryTypeName","src":"986:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"985:8:9"},"scope":2628,"src":"834:160:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2629,"src":"297:699:9","usedErrors":[],"usedEvents":[]}],"src":"116:881:9"},"id":9},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol","exportedSymbols":{"IERC721":[2610],"IERC721Metadata":[2656]},"id":2657,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2630,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"127:24:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"../IERC721.sol","id":2632,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2657,"sourceUnit":2611,"src":"153:39:10","symbolAliases":[{"foreign":{"id":2631,"name":"IERC721","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2610,"src":"161:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2634,"name":"IERC721","nameLocations":["357:7:10"],"nodeType":"IdentifierPath","referencedDeclaration":2610,"src":"357:7:10"},"id":2635,"nodeType":"InheritanceSpecifier","src":"357:7:10"}],"canonicalName":"IERC721Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":2633,"nodeType":"StructuredDocumentation","src":"194:133:10","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":2656,"linearizedBaseContracts":[2656,2610,5417],"name":"IERC721Metadata","nameLocation":"338:15:10","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"371:58:10","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":2641,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"443:4:10","nodeType":"FunctionDefinition","parameters":{"id":2637,"nodeType":"ParameterList","parameters":[],"src":"447:2:10"},"returnParameters":{"id":2640,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2639,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2641,"src":"473:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2638,"name":"string","nodeType":"ElementaryTypeName","src":"473:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"472:15:10"},"scope":2656,"src":"434:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2642,"nodeType":"StructuredDocumentation","src":"494:60:10","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":2647,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"568:6:10","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[],"src":"574:2:10"},"returnParameters":{"id":2646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2647,"src":"600:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2644,"name":"string","nodeType":"ElementaryTypeName","src":"600:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"599:15:10"},"scope":2656,"src":"559:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2648,"nodeType":"StructuredDocumentation","src":"621:90:10","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":2655,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nameLocation":"725:8:10","nodeType":"FunctionDefinition","parameters":{"id":2651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2650,"mutability":"mutable","name":"tokenId","nameLocation":"742:7:10","nodeType":"VariableDeclaration","scope":2655,"src":"734:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"734:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"733:17:10"},"returnParameters":{"id":2654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2653,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2655,"src":"774:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2652,"name":"string","nodeType":"ElementaryTypeName","src":"774:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"773:15:10"},"scope":2656,"src":"716:73:10","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2657,"src":"328:463:10","usedErrors":[],"usedEvents":[2509,2518,2527]}],"src":"127:665:10"},"id":10},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol","exportedSymbols":{"ERC721Utils":[2733],"IERC721Errors":[237],"IERC721Receiver":[2628]},"id":2734,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2658,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"118:24:11"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol","file":"../IERC721Receiver.sol","id":2660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":2629,"src":"144:55:11","symbolAliases":[{"foreign":{"id":2659,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"152:15:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC6093.sol","file":"../../../interfaces/draft-IERC6093.sol","id":2662,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2734,"sourceUnit":285,"src":"200:69:11","symbolAliases":[{"foreign":{"id":2661,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"208:13:11","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC721Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":2663,"nodeType":"StructuredDocumentation","src":"271:159:11","text":" @dev Library that provide common ERC-721 utility functions.\n See https://eips.ethereum.org/EIPS/eip-721[ERC-721].\n _Available since v5.1._"},"fullyImplemented":true,"id":2733,"linearizedBaseContracts":[2733],"name":"ERC721Utils","nameLocation":"439:11:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":2731,"nodeType":"Block","src":"1159:758:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2677,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1173:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1176:4:11","memberName":"code","nodeType":"MemberAccess","src":"1173:7:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1181:6:11","memberName":"length","nodeType":"MemberAccess","src":"1173:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1190:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1173:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2730,"nodeType":"IfStatement","src":"1169:742:11","trueBody":{"id":2729,"nodeType":"Block","src":"1193:718:11","statements":[{"clauses":[{"block":{"id":2707,"nodeType":"Block","src":"1303:214:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2694,"name":"retval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"1325:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"expression":{"id":2695,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"1335:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2628_$","typeString":"type(contract IERC721Receiver)"}},"id":2696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1351:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2627,"src":"1335:32:11","typeDescriptions":{"typeIdentifier":"t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$","typeString":"function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1368:8:11","memberName":"selector","nodeType":"MemberAccess","src":"1335:41:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"1325:51:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2706,"nodeType":"IfStatement","src":"1321:182:11","trueBody":{"id":2705,"nodeType":"Block","src":"1378:125:11","statements":[{"errorCall":{"arguments":[{"id":2702,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1481:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2699,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1445:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":2701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1459:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1445:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1445:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2704,"nodeType":"RevertStatement","src":"1438:46:11"}]}}]},"errorName":"","id":2708,"nodeType":"TryCatchClause","parameters":{"id":2693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"retval","nameLocation":"1295:6:11","nodeType":"VariableDeclaration","scope":2708,"src":"1288:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2691,"name":"bytes4","nodeType":"ElementaryTypeName","src":"1288:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"1287:15:11"},"src":"1279:238:11"},{"block":{"id":2726,"nodeType":"Block","src":"1546:355:11","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2712,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2710,"src":"1568:6:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1575:6:11","memberName":"length","nodeType":"MemberAccess","src":"1568:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1585:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1568:18:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2724,"nodeType":"Block","src":"1736:151:11","statements":[{"AST":{"nodeType":"YulBlock","src":"1783:86:11","statements":[{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1820:2:11","type":"","value":"32"},{"name":"reason","nodeType":"YulIdentifier","src":"1824:6:11"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1816:3:11"},"nodeType":"YulFunctionCall","src":"1816:15:11"},{"arguments":[{"name":"reason","nodeType":"YulIdentifier","src":"1839:6:11"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1833:5:11"},"nodeType":"YulFunctionCall","src":"1833:13:11"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1809:6:11"},"nodeType":"YulFunctionCall","src":"1809:38:11"},"nodeType":"YulExpressionStatement","src":"1809:38:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":2710,"isOffset":false,"isSlot":false,"src":"1824:6:11","valueSize":1},{"declaration":2710,"isOffset":false,"isSlot":false,"src":"1839:6:11","valueSize":1}],"flags":["memory-safe"],"id":2723,"nodeType":"InlineAssembly","src":"1758:111:11"}]},"id":2725,"nodeType":"IfStatement","src":"1564:323:11","trueBody":{"id":2722,"nodeType":"Block","src":"1588:142:11","statements":[{"errorCall":{"arguments":[{"id":2719,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1708:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2716,"name":"IERC721Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"1672:13:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Errors_$237_$","typeString":"type(contract IERC721Errors)"}},"id":2718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1686:21:11","memberName":"ERC721InvalidReceiver","nodeType":"MemberAccess","referencedDeclaration":219,"src":"1672:35:11","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$__$","typeString":"function (address) pure"}},"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1672:39:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2721,"nodeType":"RevertStatement","src":"1665:46:11"}]}}]},"errorName":"","id":2727,"nodeType":"TryCatchClause","parameters":{"id":2711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2710,"mutability":"mutable","name":"reason","nameLocation":"1538:6:11","nodeType":"VariableDeclaration","scope":2727,"src":"1525:19:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2709,"name":"bytes","nodeType":"ElementaryTypeName","src":"1525:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1524:21:11"},"src":"1518:383:11"}],"externalCall":{"arguments":[{"id":2686,"name":"operator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2666,"src":"1248:8:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2668,"src":"1258:4:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2688,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2672,"src":"1264:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2689,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2674,"src":"1273:4:11","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"arguments":[{"id":2683,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"1227:2:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2682,"name":"IERC721Receiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2628,"src":"1211:15:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC721Receiver_$2628_$","typeString":"type(contract IERC721Receiver)"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Receiver_$2628","typeString":"contract IERC721Receiver"}},"id":2685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1231:16:11","memberName":"onERC721Received","nodeType":"MemberAccess","referencedDeclaration":2627,"src":"1211:36:11","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$","typeString":"function (address,address,uint256,bytes memory) external returns (bytes4)"}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1211:67:11","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"id":2728,"nodeType":"TryStatement","src":"1207:694:11"}]}}]},"documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"457:531:11","text":" @dev Performs an acceptance check for the provided `operator` by calling {IERC721Receiver-onERC721Received}\n on the `to` address. The `operator` is generally the address that initiated the token transfer (i.e. `msg.sender`).\n The acceptance call is not executed and treated as a no-op if the target address doesn't contain code (i.e. an EOA).\n Otherwise, the recipient must implement {IERC721Receiver-onERC721Received} and return the acceptance magic value to accept\n the transfer."},"id":2732,"implemented":true,"kind":"function","modifiers":[],"name":"checkOnERC721Received","nameLocation":"1002:21:11","nodeType":"FunctionDefinition","parameters":{"id":2675,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2666,"mutability":"mutable","name":"operator","nameLocation":"1041:8:11","nodeType":"VariableDeclaration","scope":2732,"src":"1033:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2665,"name":"address","nodeType":"ElementaryTypeName","src":"1033:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2668,"mutability":"mutable","name":"from","nameLocation":"1067:4:11","nodeType":"VariableDeclaration","scope":2732,"src":"1059:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2667,"name":"address","nodeType":"ElementaryTypeName","src":"1059:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2670,"mutability":"mutable","name":"to","nameLocation":"1089:2:11","nodeType":"VariableDeclaration","scope":2732,"src":"1081:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"1081:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2672,"mutability":"mutable","name":"tokenId","nameLocation":"1109:7:11","nodeType":"VariableDeclaration","scope":2732,"src":"1101:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2671,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2674,"mutability":"mutable","name":"data","nameLocation":"1139:4:11","nodeType":"VariableDeclaration","scope":2732,"src":"1126:17:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2673,"name":"bytes","nodeType":"ElementaryTypeName","src":"1126:5:11","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1023:126:11"},"returnParameters":{"id":2676,"nodeType":"ParameterList","parameters":[],"src":"1159:0:11"},"scope":2733,"src":"993:924:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":2734,"src":"431:1488:11","usedErrors":[],"usedEvents":[]}],"src":"118:1802:11"},"id":11},"@openzeppelin/contracts/utils/Arrays.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Arrays.sol","exportedSymbols":{"Arrays":[3611],"Comparators":[3643],"Math":[7038],"SlotDerivation":[3855],"StorageSlot":[3979]},"id":3612,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2735,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"183:24:12"},{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","file":"./Comparators.sol","id":2737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3612,"sourceUnit":3644,"src":"209:46:12","symbolAliases":[{"foreign":{"id":2736,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"217:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","file":"./SlotDerivation.sol","id":2739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3612,"sourceUnit":3856,"src":"256:52:12","symbolAliases":[{"foreign":{"id":2738,"name":"SlotDerivation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3855,"src":"264:14:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":2741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3612,"sourceUnit":3980,"src":"309:46:12","symbolAliases":[{"foreign":{"id":2740,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"317:11:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2743,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3612,"sourceUnit":7039,"src":"356:37:12","symbolAliases":[{"foreign":{"id":2742,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"364:4:12","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Arrays","contractDependencies":[],"contractKind":"library","documentation":{"id":2744,"nodeType":"StructuredDocumentation","src":"395:63:12","text":" @dev Collection of functions related to array types."},"fullyImplemented":true,"id":3611,"linearizedBaseContracts":[3611],"name":"Arrays","nameLocation":"467:6:12","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2747,"libraryName":{"id":2745,"name":"SlotDerivation","nameLocations":["486:14:12"],"nodeType":"IdentifierPath","referencedDeclaration":3855,"src":"486:14:12"},"nodeType":"UsingForDirective","src":"480:33:12","typeName":{"id":2746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"505:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"global":false,"id":2750,"libraryName":{"id":2748,"name":"StorageSlot","nameLocations":["524:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3979,"src":"524:11:12"},"nodeType":"UsingForDirective","src":"518:30:12","typeName":{"id":2749,"name":"bytes32","nodeType":"ElementaryTypeName","src":"540:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"body":{"id":2782,"nodeType":"Block","src":"1628:83:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2772,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1656:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2771,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"1649:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1649:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2775,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1669:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":2774,"name":"_end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3027,"src":"1664:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1664:11:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2777,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"1677:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2770,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"1638:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2778,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:44:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2779,"nodeType":"ExpressionStatement","src":"1638:44:12"},{"expression":{"id":2780,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2754,"src":"1699:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2769,"id":2781,"nodeType":"Return","src":"1692:12:12"}]},"documentation":{"id":2751,"nodeType":"StructuredDocumentation","src":"554:915:12","text":" @dev Sort an array of uint256 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2783,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1483:4:12","nodeType":"FunctionDefinition","parameters":{"id":2765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2754,"mutability":"mutable","name":"array","nameLocation":"1514:5:12","nodeType":"VariableDeclaration","scope":2783,"src":"1497:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2753,"nodeType":"ArrayTypeName","src":"1497:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2764,"mutability":"mutable","name":"comp","nameLocation":"1576:4:12","nodeType":"VariableDeclaration","scope":2783,"src":"1529:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2763,"nodeType":"FunctionTypeName","parameterTypes":{"id":2759,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2763,"src":"1538:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2755,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2758,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2763,"src":"1547:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2757,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1537:18:12"},"returnParameterTypes":{"id":2762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2761,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2763,"src":"1570:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2760,"name":"bool","nodeType":"ElementaryTypeName","src":"1570:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1569:6:12"},"src":"1529:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"1487:99:12"},"returnParameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2783,"src":"1610:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1610:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2767,"nodeType":"ArrayTypeName","src":"1610:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1609:18:12"},"scope":3611,"src":"1474:237:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2801,"nodeType":"Block","src":"1894:66:12","statements":[{"expression":{"arguments":[{"id":2794,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"1909:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2795,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"1916:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3643_$","typeString":"type(library Comparators)"}},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1928:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3628,"src":"1916:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2793,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2783,2802,2834,2855,2887,2908],"referencedDeclaration":2783,"src":"1904:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1904:27:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2798,"nodeType":"ExpressionStatement","src":"1904:27:12"},{"expression":{"id":2799,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"1948:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2792,"id":2800,"nodeType":"Return","src":"1941:12:12"}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"1717:93:12","text":" @dev Variant of {sort} that sorts an array of uint256 in increasing order."},"id":2802,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"1824:4:12","nodeType":"FunctionDefinition","parameters":{"id":2788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"array","nameLocation":"1846:5:12","nodeType":"VariableDeclaration","scope":2802,"src":"1829:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2785,"name":"uint256","nodeType":"ElementaryTypeName","src":"1829:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2786,"nodeType":"ArrayTypeName","src":"1829:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1828:24:12"},"returnParameters":{"id":2792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2791,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2802,"src":"1876:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1876:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2790,"nodeType":"ArrayTypeName","src":"1876:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"1875:18:12"},"scope":3611,"src":"1815:145:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2833,"nodeType":"Block","src":"3040:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2824,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3075:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2823,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3059,3071],"referencedDeclaration":3059,"src":"3055:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3055:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2827,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2816,"src":"3102:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"}],"id":2826,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3097,3123],"referencedDeclaration":3097,"src":"3083:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (address,address) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3083:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2822,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2783,2802,2834,2855,2887,2908],"referencedDeclaration":2783,"src":"3050:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3050:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2830,"nodeType":"ExpressionStatement","src":"3050:58:12"},{"expression":{"id":2831,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2806,"src":"3125:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2821,"id":2832,"nodeType":"Return","src":"3118:12:12"}]},"documentation":{"id":2803,"nodeType":"StructuredDocumentation","src":"1966:915:12","text":" @dev Sort an array of address (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2834,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"2895:4:12","nodeType":"FunctionDefinition","parameters":{"id":2817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2806,"mutability":"mutable","name":"array","nameLocation":"2926:5:12","nodeType":"VariableDeclaration","scope":2834,"src":"2909:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"2909:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2805,"nodeType":"ArrayTypeName","src":"2909:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2816,"mutability":"mutable","name":"comp","nameLocation":"2988:4:12","nodeType":"VariableDeclaration","scope":2834,"src":"2941:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":2815,"nodeType":"FunctionTypeName","parameterTypes":{"id":2811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"2950:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"2950:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"2959:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"2959:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2949:18:12"},"returnParameterTypes":{"id":2814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2813,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2815,"src":"2982:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2812,"name":"bool","nodeType":"ElementaryTypeName","src":"2982:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2981:6:12"},"src":"2941:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"2899:99:12"},"returnParameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2820,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2834,"src":"3022:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"3022:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2819,"nodeType":"ArrayTypeName","src":"3022:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3021:18:12"},"scope":3611,"src":"2886:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2854,"nodeType":"Block","src":"3320:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2846,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3355:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}],"id":2845,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3059,3071],"referencedDeclaration":3059,"src":"3335:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (address[] memory) pure returns (uint256[] memory)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3335:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2848,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"3363:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3643_$","typeString":"type(library Comparators)"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3375:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3628,"src":"3363:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2844,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2783,2802,2834,2855,2887,2908],"referencedDeclaration":2783,"src":"3330:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3330:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2851,"nodeType":"ExpressionStatement","src":"3330:48:12"},{"expression":{"id":2852,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2838,"src":"3395:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2843,"id":2853,"nodeType":"Return","src":"3388:12:12"}]},"documentation":{"id":2835,"nodeType":"StructuredDocumentation","src":"3143:93:12","text":" @dev Variant of {sort} that sorts an array of address in increasing order."},"id":2855,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"3250:4:12","nodeType":"FunctionDefinition","parameters":{"id":2839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2838,"mutability":"mutable","name":"array","nameLocation":"3272:5:12","nodeType":"VariableDeclaration","scope":2855,"src":"3255:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2836,"name":"address","nodeType":"ElementaryTypeName","src":"3255:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2837,"nodeType":"ArrayTypeName","src":"3255:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3254:24:12"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2855,"src":"3302:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"3302:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2841,"nodeType":"ArrayTypeName","src":"3302:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"3301:18:12"},"scope":3611,"src":"3241:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2886,"nodeType":"Block","src":"4487:97:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2877,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"4522:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2876,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3059,3071],"referencedDeclaration":3071,"src":"4502:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4502:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":2880,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2869,"src":"4549:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"}],"id":2879,"name":"_castToUint256Comp","nodeType":"Identifier","overloadedDeclarations":[3097,3123],"referencedDeclaration":3123,"src":"4530:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$_$returns$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$","typeString":"function (function (bytes32,bytes32) pure returns (bool)) pure returns (function (uint256,uint256) pure returns (bool))"}},"id":2881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4530:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2875,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2783,2802,2834,2855,2887,2908],"referencedDeclaration":2783,"src":"4497:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2882,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4497:58:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2883,"nodeType":"ExpressionStatement","src":"4497:58:12"},{"expression":{"id":2884,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2859,"src":"4572:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2874,"id":2885,"nodeType":"Return","src":"4565:12:12"}]},"documentation":{"id":2856,"nodeType":"StructuredDocumentation","src":"3413:915:12","text":" @dev Sort an array of bytes32 (in memory) following the provided comparator function.\n This function does the sorting \"in place\", meaning that it overrides the input. The object is returned for\n convenience, but that returned value can be discarded safely if the caller has a memory pointer to the array.\n NOTE: this function's cost is `O(n · log(n))` in average and `O(n²)` in the worst case, with n the length of the\n array. Using it in view functions that are executed through `eth_call` is safe, but one should be very careful\n when executing this as part of a transaction. If the array being sorted is too large, the sort operation may\n consume more gas than is available in a block, leading to potential DoS.\n IMPORTANT: Consider memory side-effects when using custom comparator functions that access memory in an unsafe way."},"id":2887,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4342:4:12","nodeType":"FunctionDefinition","parameters":{"id":2870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"array","nameLocation":"4373:5:12","nodeType":"VariableDeclaration","scope":2887,"src":"4356:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2857,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4356:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2858,"nodeType":"ArrayTypeName","src":"4356:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2869,"mutability":"mutable","name":"comp","nameLocation":"4435:4:12","nodeType":"VariableDeclaration","scope":2887,"src":"4388:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":2868,"nodeType":"FunctionTypeName","parameterTypes":{"id":2864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2861,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"4397:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2860,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4397:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"4406:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2862,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4396:18:12"},"returnParameterTypes":{"id":2867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2866,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2868,"src":"4429:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2865,"name":"bool","nodeType":"ElementaryTypeName","src":"4429:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4428:6:12"},"src":"4388:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"4346:99:12"},"returnParameters":{"id":2874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2887,"src":"4469:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2871,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2872,"nodeType":"ArrayTypeName","src":"4469:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4468:18:12"},"scope":3611,"src":"4333:251:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2907,"nodeType":"Block","src":"4767:87:12","statements":[{"expression":{"arguments":[{"arguments":[{"id":2899,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"4802:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":2898,"name":"_castToUint256Array","nodeType":"Identifier","overloadedDeclarations":[3059,3071],"referencedDeclaration":3071,"src":"4782:19:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (bytes32[] memory) pure returns (uint256[] memory)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:26:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":2901,"name":"Comparators","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3643,"src":"4810:11:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Comparators_$3643_$","typeString":"type(library Comparators)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4822:2:12","memberName":"lt","nodeType":"MemberAccess","referencedDeclaration":3628,"src":"4810:14:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2897,"name":"sort","nodeType":"Identifier","overloadedDeclarations":[2783,2802,2834,2855,2887,2908],"referencedDeclaration":2783,"src":"4777:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256[] memory,function (uint256,uint256) pure returns (bool)) pure returns (uint256[] memory)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4777:48:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":2904,"nodeType":"ExpressionStatement","src":"4777:48:12"},{"expression":{"id":2905,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2891,"src":"4842:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2896,"id":2906,"nodeType":"Return","src":"4835:12:12"}]},"documentation":{"id":2888,"nodeType":"StructuredDocumentation","src":"4590:93:12","text":" @dev Variant of {sort} that sorts an array of bytes32 in increasing order."},"id":2908,"implemented":true,"kind":"function","modifiers":[],"name":"sort","nameLocation":"4697:4:12","nodeType":"FunctionDefinition","parameters":{"id":2892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2891,"mutability":"mutable","name":"array","nameLocation":"4719:5:12","nodeType":"VariableDeclaration","scope":2908,"src":"4702:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2889,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4702:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2890,"nodeType":"ArrayTypeName","src":"4702:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4701:24:12"},"returnParameters":{"id":2896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2908,"src":"4749:16:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2893,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4749:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2894,"nodeType":"ArrayTypeName","src":"4749:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4748:18:12"},"scope":3611,"src":"4688:166:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"5470:889:12","statements":[{"id":2994,"nodeType":"UncheckedBlock","src":"5480:873:12","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2926,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"5508:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2927,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"5514:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5508:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30783430","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5522:4:12","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"5508:18:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2932,"nodeType":"IfStatement","src":"5504:31:12","trueBody":{"functionReturnParameters":2925,"id":2931,"nodeType":"Return","src":"5528:7:12"}},{"assignments":[2934],"declarations":[{"constant":false,"id":2934,"mutability":"mutable","name":"pivot","nameLocation":"5599:5:12","nodeType":"VariableDeclaration","scope":2994,"src":"5591:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2933,"name":"uint256","nodeType":"ElementaryTypeName","src":"5591:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2938,"initialValue":{"arguments":[{"id":2936,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"5614:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2935,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"5607:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5607:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5591:29:12"},{"assignments":[2940],"declarations":[{"constant":false,"id":2940,"mutability":"mutable","name":"pos","nameLocation":"5715:3:12","nodeType":"VariableDeclaration","scope":2994,"src":"5707:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"5707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2942,"initialValue":{"id":2941,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"5721:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5707:19:12"},{"body":{"id":2973,"nodeType":"Block","src":"5795:331:12","statements":[{"condition":{"arguments":[{"arguments":[{"id":2958,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"5829:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2957,"name":"_mload","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3037,"src":"5822:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5822:10:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2960,"name":"pivot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"5834:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2956,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"5817:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}},"id":2961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5817:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2972,"nodeType":"IfStatement","src":"5813:299:12","trueBody":{"id":2971,"nodeType":"Block","src":"5842:270:12","statements":[{"expression":{"id":2964,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2962,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6046:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6053:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6046:11:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2965,"nodeType":"ExpressionStatement","src":"6046:11:12"},{"expression":{"arguments":[{"id":2967,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6085:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2968,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"6090:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2966,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"6079:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6079:14:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2970,"nodeType":"ExpressionStatement","src":"6079:14:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2949,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"5773:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2950,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"5778:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5773:8:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2974,"initializationExpression":{"assignments":[2944],"declarations":[{"constant":false,"id":2944,"mutability":"mutable","name":"it","nameLocation":"5754:2:12","nodeType":"VariableDeclaration","scope":2974,"src":"5746:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2943,"name":"uint256","nodeType":"ElementaryTypeName","src":"5746:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2948,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2945,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"5759:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5767:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5759:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5746:25:12"},"loopExpression":{"expression":{"id":2954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2952,"name":"it","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"5783:2:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"30783230","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5789:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"5783:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2955,"nodeType":"ExpressionStatement","src":"5783:10:12"},"nodeType":"ForStatement","src":"5741:385:12"},{"expression":{"arguments":[{"id":2976,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"6146:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2977,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6153:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2975,"name":"_swap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3047,"src":"6140:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":2978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6140:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2979,"nodeType":"ExpressionStatement","src":"6140:17:12"},{"expression":{"arguments":[{"id":2981,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"6207:5:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2982,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6214:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2983,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"6219:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2980,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"6196:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6196:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2985,"nodeType":"ExpressionStatement","src":"6196:28:12"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2987,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2940,"src":"6284:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"30783230","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6290:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6284:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2990,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2913,"src":"6296:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2991,"name":"comp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2923,"src":"6301:4:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"}],"id":2986,"name":"_quickSort","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2996,"src":"6273:10:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_$returns$__$","typeString":"function (uint256,uint256,function (uint256,uint256) pure returns (bool)) pure"}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6273:33:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2993,"nodeType":"ExpressionStatement","src":"6273:33:12"}]}]},"documentation":{"id":2909,"nodeType":"StructuredDocumentation","src":"4860:491:12","text":" @dev Performs a quick sort of a segment of memory. The segment sorted starts at `begin` (inclusive), and stops\n at end (exclusive). Sorting follows the `comp` comparator.\n Invariant: `begin <= end`. This is the case when initially called by {sort} and is preserved in subcalls.\n IMPORTANT: Memory locations between `begin` and `end` are not validated/zeroed. This function should\n be used only if the limits are within a memory array."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"_quickSort","nameLocation":"5365:10:12","nodeType":"FunctionDefinition","parameters":{"id":2924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2911,"mutability":"mutable","name":"begin","nameLocation":"5384:5:12","nodeType":"VariableDeclaration","scope":2996,"src":"5376:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2913,"mutability":"mutable","name":"end","nameLocation":"5399:3:12","nodeType":"VariableDeclaration","scope":2996,"src":"5391:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2912,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2923,"mutability":"mutable","name":"comp","nameLocation":"5451:4:12","nodeType":"VariableDeclaration","scope":2996,"src":"5404:51:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":2922,"nodeType":"FunctionTypeName","parameterTypes":{"id":2918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2915,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2922,"src":"5413:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2914,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2922,"src":"5422:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2916,"name":"uint256","nodeType":"ElementaryTypeName","src":"5422:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5412:18:12"},"returnParameterTypes":{"id":2921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2922,"src":"5445:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2919,"name":"bool","nodeType":"ElementaryTypeName","src":"5445:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5444:6:12"},"src":"5404:51:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"5375:81:12"},"returnParameters":{"id":2925,"nodeType":"ParameterList","parameters":[],"src":"5470:0:12"},"scope":3611,"src":"5356:1003:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3006,"nodeType":"Block","src":"6532:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"6567:47:12","statements":[{"nodeType":"YulAssignment","src":"6581:23:12","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"6592:5:12"},{"kind":"number","nodeType":"YulLiteral","src":"6599:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6588:3:12"},"nodeType":"YulFunctionCall","src":"6588:16:12"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"6581:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3000,"isOffset":false,"isSlot":false,"src":"6592:5:12","valueSize":1},{"declaration":3003,"isOffset":false,"isSlot":false,"src":"6581:3:12","valueSize":1}],"flags":["memory-safe"],"id":3005,"nodeType":"InlineAssembly","src":"6542:72:12"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"6365:87:12","text":" @dev Pointer to the memory location of the first element of `array`."},"id":3007,"implemented":true,"kind":"function","modifiers":[],"name":"_begin","nameLocation":"6466:6:12","nodeType":"FunctionDefinition","parameters":{"id":3001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"array","nameLocation":"6490:5:12","nodeType":"VariableDeclaration","scope":3007,"src":"6473:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2998,"name":"uint256","nodeType":"ElementaryTypeName","src":"6473:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2999,"nodeType":"ArrayTypeName","src":"6473:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6472:24:12"},"returnParameters":{"id":3004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3003,"mutability":"mutable","name":"ptr","nameLocation":"6527:3:12","nodeType":"VariableDeclaration","scope":3007,"src":"6519:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3002,"name":"uint256","nodeType":"ElementaryTypeName","src":"6519:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6518:13:12"},"scope":3611,"src":"6457:163:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3026,"nodeType":"Block","src":"6892:93:12","statements":[{"id":3025,"nodeType":"UncheckedBlock","src":"6902:77:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3017,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"6940:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":3016,"name":"_begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3007,"src":"6933:6:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (uint256[] memory) pure returns (uint256)"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6933:13:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3019,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3011,"src":"6949:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6955:6:12","memberName":"length","nodeType":"MemberAccess","src":"6949:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783230","id":3021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6964:4:12","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"6949:19:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6933:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3015,"id":3024,"nodeType":"Return","src":"6926:42:12"}]}]},"documentation":{"id":3008,"nodeType":"StructuredDocumentation","src":"6626:188:12","text":" @dev Pointer to the memory location of the first memory word (32bytes) after `array`. This is the memory word\n that comes just after the last element of the array."},"id":3027,"implemented":true,"kind":"function","modifiers":[],"name":"_end","nameLocation":"6828:4:12","nodeType":"FunctionDefinition","parameters":{"id":3012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"mutability":"mutable","name":"array","nameLocation":"6850:5:12","nodeType":"VariableDeclaration","scope":3027,"src":"6833:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3009,"name":"uint256","nodeType":"ElementaryTypeName","src":"6833:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3010,"nodeType":"ArrayTypeName","src":"6833:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"6832:24:12"},"returnParameters":{"id":3015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3014,"mutability":"mutable","name":"ptr","nameLocation":"6887:3:12","nodeType":"VariableDeclaration","scope":3027,"src":"6879:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3013,"name":"uint256","nodeType":"ElementaryTypeName","src":"6879:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6878:13:12"},"scope":3611,"src":"6819:166:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3036,"nodeType":"Block","src":"7136:68:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7155:43:12","statements":[{"nodeType":"YulAssignment","src":"7169:19:12","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"7184:3:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7178:5:12"},"nodeType":"YulFunctionCall","src":"7178:10:12"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"7169:5:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3030,"isOffset":false,"isSlot":false,"src":"7184:3:12","valueSize":1},{"declaration":3033,"isOffset":false,"isSlot":false,"src":"7169:5:12","valueSize":1}],"id":3035,"nodeType":"InlineAssembly","src":"7146:52:12"}]},"documentation":{"id":3028,"nodeType":"StructuredDocumentation","src":"6991:74:12","text":" @dev Load memory word (as a uint256) at location `ptr`."},"id":3037,"implemented":true,"kind":"function","modifiers":[],"name":"_mload","nameLocation":"7079:6:12","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3030,"mutability":"mutable","name":"ptr","nameLocation":"7094:3:12","nodeType":"VariableDeclaration","scope":3037,"src":"7086:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3029,"name":"uint256","nodeType":"ElementaryTypeName","src":"7086:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7085:13:12"},"returnParameters":{"id":3034,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3033,"mutability":"mutable","name":"value","nameLocation":"7129:5:12","nodeType":"VariableDeclaration","scope":3037,"src":"7121:13:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3032,"name":"uint256","nodeType":"ElementaryTypeName","src":"7121:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7120:15:12"},"scope":3611,"src":"7070:134:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3046,"nodeType":"Block","src":"7348:178:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7367:153:12","statements":[{"nodeType":"YulVariableDeclaration","src":"7381:25:12","value":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7401:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7395:5:12"},"nodeType":"YulFunctionCall","src":"7395:11:12"},"variables":[{"name":"value1","nodeType":"YulTypedName","src":"7385:6:12","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7419:25:12","value":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7439:4:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7433:5:12"},"nodeType":"YulFunctionCall","src":"7433:11:12"},"variables":[{"name":"value2","nodeType":"YulTypedName","src":"7423:6:12","type":""}]},{"expression":{"arguments":[{"name":"ptr1","nodeType":"YulIdentifier","src":"7464:4:12"},{"name":"value2","nodeType":"YulIdentifier","src":"7470:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7457:6:12"},"nodeType":"YulFunctionCall","src":"7457:20:12"},"nodeType":"YulExpressionStatement","src":"7457:20:12"},{"expression":{"arguments":[{"name":"ptr2","nodeType":"YulIdentifier","src":"7497:4:12"},{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7490:6:12"},"nodeType":"YulFunctionCall","src":"7490:20:12"},"nodeType":"YulExpressionStatement","src":"7490:20:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3040,"isOffset":false,"isSlot":false,"src":"7401:4:12","valueSize":1},{"declaration":3040,"isOffset":false,"isSlot":false,"src":"7464:4:12","valueSize":1},{"declaration":3042,"isOffset":false,"isSlot":false,"src":"7439:4:12","valueSize":1},{"declaration":3042,"isOffset":false,"isSlot":false,"src":"7497:4:12","valueSize":1}],"id":3045,"nodeType":"InlineAssembly","src":"7358:162:12"}]},"documentation":{"id":3038,"nodeType":"StructuredDocumentation","src":"7210:77:12","text":" @dev Swaps the elements memory location `ptr1` and `ptr2`."},"id":3047,"implemented":true,"kind":"function","modifiers":[],"name":"_swap","nameLocation":"7301:5:12","nodeType":"FunctionDefinition","parameters":{"id":3043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3040,"mutability":"mutable","name":"ptr1","nameLocation":"7315:4:12","nodeType":"VariableDeclaration","scope":3047,"src":"7307:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3039,"name":"uint256","nodeType":"ElementaryTypeName","src":"7307:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3042,"mutability":"mutable","name":"ptr2","nameLocation":"7329:4:12","nodeType":"VariableDeclaration","scope":3047,"src":"7321:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"7321:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7306:28:12"},"returnParameters":{"id":3044,"nodeType":"ParameterList","parameters":[],"src":"7348:0:12"},"scope":3611,"src":"7292:234:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3058,"nodeType":"Block","src":"7713:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7732:39:12","statements":[{"nodeType":"YulAssignment","src":"7746:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"7756:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7746:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3051,"isOffset":false,"isSlot":false,"src":"7756:5:12","valueSize":1},{"declaration":3055,"isOffset":false,"isSlot":false,"src":"7746:6:12","valueSize":1}],"id":3057,"nodeType":"InlineAssembly","src":"7723:48:12"}]},"documentation":{"id":3048,"nodeType":"StructuredDocumentation","src":"7532:76:12","text":"@dev Helper: low level cast address memory array to uint256 memory array"},"id":3059,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7622:19:12","nodeType":"FunctionDefinition","parameters":{"id":3052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3051,"mutability":"mutable","name":"input","nameLocation":"7659:5:12","nodeType":"VariableDeclaration","scope":3059,"src":"7642:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3049,"name":"address","nodeType":"ElementaryTypeName","src":"7642:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3050,"nodeType":"ArrayTypeName","src":"7642:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"7641:24:12"},"returnParameters":{"id":3056,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3055,"mutability":"mutable","name":"output","nameLocation":"7705:6:12","nodeType":"VariableDeclaration","scope":3059,"src":"7688:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3053,"name":"uint256","nodeType":"ElementaryTypeName","src":"7688:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3054,"nodeType":"ArrayTypeName","src":"7688:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7687:25:12"},"scope":3611,"src":"7613:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3070,"nodeType":"Block","src":"7964:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"7983:39:12","statements":[{"nodeType":"YulAssignment","src":"7997:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8007:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"7997:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3063,"isOffset":false,"isSlot":false,"src":"8007:5:12","valueSize":1},{"declaration":3067,"isOffset":false,"isSlot":false,"src":"7997:6:12","valueSize":1}],"id":3069,"nodeType":"InlineAssembly","src":"7974:48:12"}]},"documentation":{"id":3060,"nodeType":"StructuredDocumentation","src":"7783:76:12","text":"@dev Helper: low level cast bytes32 memory array to uint256 memory array"},"id":3071,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Array","nameLocation":"7873:19:12","nodeType":"FunctionDefinition","parameters":{"id":3064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3063,"mutability":"mutable","name":"input","nameLocation":"7910:5:12","nodeType":"VariableDeclaration","scope":3071,"src":"7893:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3061,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7893:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3062,"nodeType":"ArrayTypeName","src":"7893:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7892:24:12"},"returnParameters":{"id":3068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3067,"mutability":"mutable","name":"output","nameLocation":"7956:6:12","nodeType":"VariableDeclaration","scope":3071,"src":"7939:23:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3065,"name":"uint256","nodeType":"ElementaryTypeName","src":"7939:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3066,"nodeType":"ArrayTypeName","src":"7939:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7938:25:12"},"scope":3611,"src":"7864:164:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3096,"nodeType":"Block","src":"8290:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8309:39:12","statements":[{"nodeType":"YulAssignment","src":"8323:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8333:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8323:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3082,"isOffset":false,"isSlot":false,"src":"8333:5:12","valueSize":1},{"declaration":3093,"isOffset":false,"isSlot":false,"src":"8323:6:12","valueSize":1}],"id":3095,"nodeType":"InlineAssembly","src":"8300:48:12"}]},"documentation":{"id":3072,"nodeType":"StructuredDocumentation","src":"8034:78:12","text":"@dev Helper: low level cast address comp function to uint256 comp function"},"id":3097,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8126:18:12","nodeType":"FunctionDefinition","parameters":{"id":3083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3082,"mutability":"mutable","name":"input","nameLocation":"8201:5:12","nodeType":"VariableDeclaration","scope":3097,"src":"8154:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"typeName":{"id":3081,"nodeType":"FunctionTypeName","parameterTypes":{"id":3077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3074,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"8163:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3073,"name":"address","nodeType":"ElementaryTypeName","src":"8163:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"8172:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3075,"name":"address","nodeType":"ElementaryTypeName","src":"8172:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8162:18:12"},"returnParameterTypes":{"id":3080,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3079,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"8195:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3078,"name":"bool","nodeType":"ElementaryTypeName","src":"8195:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8194:6:12"},"src":"8154:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_address_$returns$_t_bool_$","typeString":"function (address,address) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8144:68:12"},"returnParameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3093,"mutability":"mutable","name":"output","nameLocation":"8282:6:12","nodeType":"VariableDeclaration","scope":3097,"src":"8235:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3092,"nodeType":"FunctionTypeName","parameterTypes":{"id":3088,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"8244:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3084,"name":"uint256","nodeType":"ElementaryTypeName","src":"8244:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3087,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"8253:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3086,"name":"uint256","nodeType":"ElementaryTypeName","src":"8253:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8243:18:12"},"returnParameterTypes":{"id":3091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3090,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3092,"src":"8276:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3089,"name":"bool","nodeType":"ElementaryTypeName","src":"8276:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8275:6:12"},"src":"8235:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8234:55:12"},"scope":3611,"src":"8117:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3122,"nodeType":"Block","src":"8616:64:12","statements":[{"AST":{"nodeType":"YulBlock","src":"8635:39:12","statements":[{"nodeType":"YulAssignment","src":"8649:15:12","value":{"name":"input","nodeType":"YulIdentifier","src":"8659:5:12"},"variableNames":[{"name":"output","nodeType":"YulIdentifier","src":"8649:6:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3108,"isOffset":false,"isSlot":false,"src":"8659:5:12","valueSize":1},{"declaration":3119,"isOffset":false,"isSlot":false,"src":"8649:6:12","valueSize":1}],"id":3121,"nodeType":"InlineAssembly","src":"8626:48:12"}]},"documentation":{"id":3098,"nodeType":"StructuredDocumentation","src":"8360:78:12","text":"@dev Helper: low level cast bytes32 comp function to uint256 comp function"},"id":3123,"implemented":true,"kind":"function","modifiers":[],"name":"_castToUint256Comp","nameLocation":"8452:18:12","nodeType":"FunctionDefinition","parameters":{"id":3109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3108,"mutability":"mutable","name":"input","nameLocation":"8527:5:12","nodeType":"VariableDeclaration","scope":3123,"src":"8480:52:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"typeName":{"id":3107,"nodeType":"FunctionTypeName","parameterTypes":{"id":3103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3100,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"8489:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3099,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8489:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"8498:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8498:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8488:18:12"},"returnParameterTypes":{"id":3106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3105,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3107,"src":"8521:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3104,"name":"bool","nodeType":"ElementaryTypeName","src":"8521:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8520:6:12"},"src":"8480:52:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32,bytes32) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8470:68:12"},"returnParameters":{"id":3120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3119,"mutability":"mutable","name":"output","nameLocation":"8608:6:12","nodeType":"VariableDeclaration","scope":3123,"src":"8561:53:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"typeName":{"id":3118,"nodeType":"FunctionTypeName","parameterTypes":{"id":3114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3111,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"8570:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3110,"name":"uint256","nodeType":"ElementaryTypeName","src":"8570:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"8579:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3112,"name":"uint256","nodeType":"ElementaryTypeName","src":"8579:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8569:18:12"},"returnParameterTypes":{"id":3117,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3116,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"8602:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3115,"name":"bool","nodeType":"ElementaryTypeName","src":"8602:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8601:6:12"},"src":"8561:53:12","stateMutability":"pure","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$","typeString":"function (uint256,uint256) pure returns (bool)"},"visibility":"internal"},"visibility":"internal"}],"src":"8560:55:12"},"scope":3611,"src":"8443:237:12","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":3205,"nodeType":"Block","src":"9405:834:12","statements":[{"assignments":[3135],"declarations":[{"constant":false,"id":3135,"mutability":"mutable","name":"low","nameLocation":"9423:3:12","nodeType":"VariableDeclaration","scope":3205,"src":"9415:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3134,"name":"uint256","nodeType":"ElementaryTypeName","src":"9415:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3137,"initialValue":{"hexValue":"30","id":3136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9429:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9415:15:12"},{"assignments":[3139],"declarations":[{"constant":false,"id":3139,"mutability":"mutable","name":"high","nameLocation":"9448:4:12","nodeType":"VariableDeclaration","scope":3205,"src":"9440:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3138,"name":"uint256","nodeType":"ElementaryTypeName","src":"9440:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3142,"initialValue":{"expression":{"id":3140,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"9455:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9461:6:12","memberName":"length","nodeType":"MemberAccess","src":"9455:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9440:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3143,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9482:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9490:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9482:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3149,"nodeType":"IfStatement","src":"9478:48:12","trueBody":{"id":3148,"nodeType":"Block","src":"9493:33:12","statements":[{"expression":{"hexValue":"30","id":3146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9514:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3133,"id":3147,"nodeType":"Return","src":"9507:8:12"}]}},{"body":{"id":3181,"nodeType":"Block","src":"9555:423:12","statements":[{"assignments":[3154],"declarations":[{"constant":false,"id":3154,"mutability":"mutable","name":"mid","nameLocation":"9577:3:12","nodeType":"VariableDeclaration","scope":3181,"src":"9569:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3153,"name":"uint256","nodeType":"ElementaryTypeName","src":"9569:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3160,"initialValue":{"arguments":[{"id":3157,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"9596:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3158,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9601:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3155,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"9583:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9588:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"9583:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9583:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9569:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3162,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"9844:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3163,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"9851:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3161,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3486,3512,3538],"referencedDeclaration":3538,"src":"9831:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3870_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9831:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9856:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"9831:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3166,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"9864:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9831:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3179,"nodeType":"Block","src":"9922:46:12","statements":[{"expression":{"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3173,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"9940:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"9946:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9952:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9946:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9940:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3178,"nodeType":"ExpressionStatement","src":"9940:13:12"}]},"id":3180,"nodeType":"IfStatement","src":"9827:141:12","trueBody":{"id":3172,"nodeType":"Block","src":"9873:43:12","statements":[{"expression":{"id":3170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3168,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9891:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3169,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3154,"src":"9898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9891:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3171,"nodeType":"ExpressionStatement","src":"9891:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3150,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"9543:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3151,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3139,"src":"9549:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9543:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3182,"nodeType":"WhileStatement","src":"9536:442:12"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3183,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"10095:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10101:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10095:7:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3187,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3127,"src":"10119:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3190,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3188,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"10126:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10132:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10126:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3186,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3486,3512,3538],"referencedDeclaration":3538,"src":"10106:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3870_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10106:28:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3192,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10135:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"10106:34:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3193,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3129,"src":"10144:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10106:45:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10095:56:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3203,"nodeType":"Block","src":"10198:35:12","statements":[{"expression":{"id":3201,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"10219:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3133,"id":3202,"nodeType":"Return","src":"10212:10:12"}]},"id":3204,"nodeType":"IfStatement","src":"10091:142:12","trueBody":{"id":3200,"nodeType":"Block","src":"10153:39:12","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3196,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3135,"src":"10174:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10180:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10174:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3133,"id":3199,"nodeType":"Return","src":"10167:14:12"}]}}]},"documentation":{"id":3124,"nodeType":"StructuredDocumentation","src":"8686:616:12","text":" @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n NOTE: The `array` is expected to be sorted in ascending order, and to\n contain no repeated elements.\n IMPORTANT: Deprecated. This implementation behaves as {lowerBound} but lacks\n support for repeated elements in the array. The {lowerBound} function should\n be used instead."},"id":3206,"implemented":true,"kind":"function","modifiers":[],"name":"findUpperBound","nameLocation":"9316:14:12","nodeType":"FunctionDefinition","parameters":{"id":3130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"array","nameLocation":"9349:5:12","nodeType":"VariableDeclaration","scope":3206,"src":"9331:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3125,"name":"uint256","nodeType":"ElementaryTypeName","src":"9331:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3126,"nodeType":"ArrayTypeName","src":"9331:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3129,"mutability":"mutable","name":"element","nameLocation":"9364:7:12","nodeType":"VariableDeclaration","scope":3206,"src":"9356:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3128,"name":"uint256","nodeType":"ElementaryTypeName","src":"9356:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9330:42:12"},"returnParameters":{"id":3133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3206,"src":"9396:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3131,"name":"uint256","nodeType":"ElementaryTypeName","src":"9396:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9395:9:12"},"scope":3611,"src":"9307:932:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3269,"nodeType":"Block","src":"10756:709:12","statements":[{"assignments":[3218],"declarations":[{"constant":false,"id":3218,"mutability":"mutable","name":"low","nameLocation":"10774:3:12","nodeType":"VariableDeclaration","scope":3269,"src":"10766:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3217,"name":"uint256","nodeType":"ElementaryTypeName","src":"10766:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3220,"initialValue":{"hexValue":"30","id":3219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10780:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10766:15:12"},{"assignments":[3222],"declarations":[{"constant":false,"id":3222,"mutability":"mutable","name":"high","nameLocation":"10799:4:12","nodeType":"VariableDeclaration","scope":3269,"src":"10791:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"10791:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3225,"initialValue":{"expression":{"id":3223,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"10806:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10812:6:12","memberName":"length","nodeType":"MemberAccess","src":"10806:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10791:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3226,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10833:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10841:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10833:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3232,"nodeType":"IfStatement","src":"10829:48:12","trueBody":{"id":3231,"nodeType":"Block","src":"10844:33:12","statements":[{"expression":{"hexValue":"30","id":3229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10865:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3216,"id":3230,"nodeType":"Return","src":"10858:8:12"}]}},{"body":{"id":3265,"nodeType":"Block","src":"10906:532:12","statements":[{"assignments":[3237],"declarations":[{"constant":false,"id":3237,"mutability":"mutable","name":"mid","nameLocation":"10928:3:12","nodeType":"VariableDeclaration","scope":3265,"src":"10920:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3236,"name":"uint256","nodeType":"ElementaryTypeName","src":"10920:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3243,"initialValue":{"arguments":[{"id":3240,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"10947:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3241,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3238,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"10934:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10939:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"10934:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10934:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10920:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3245,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3210,"src":"11195:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3246,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"11202:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3244,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3486,3512,3538],"referencedDeclaration":3538,"src":"11182:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3870_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11182:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3248,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11207:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"11182:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3249,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3212,"src":"11215:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11182:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3263,"nodeType":"Block","src":"11385:43:12","statements":[{"expression":{"id":3261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3259,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"11403:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3260,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"11410:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11403:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3262,"nodeType":"ExpressionStatement","src":"11403:10:12"}]},"id":3264,"nodeType":"IfStatement","src":"11178:250:12","trueBody":{"id":3258,"nodeType":"Block","src":"11224:155:12","statements":[{"id":3257,"nodeType":"UncheckedBlock","src":"11301:64:12","statements":[{"expression":{"id":3255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3251,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"11333:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3252,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3237,"src":"11339:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3253,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11345:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11339:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11333:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3256,"nodeType":"ExpressionStatement","src":"11333:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3233,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"10894:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3234,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"10900:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10894:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3266,"nodeType":"WhileStatement","src":"10887:551:12"},{"expression":{"id":3267,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"11455:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3216,"id":3268,"nodeType":"Return","src":"11448:10:12"}]},"documentation":{"id":3207,"nodeType":"StructuredDocumentation","src":"10245:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value greater or equal than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/lower_bound[lower_bound]."},"id":3270,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBound","nameLocation":"10671:10:12","nodeType":"FunctionDefinition","parameters":{"id":3213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3210,"mutability":"mutable","name":"array","nameLocation":"10700:5:12","nodeType":"VariableDeclaration","scope":3270,"src":"10682:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3208,"name":"uint256","nodeType":"ElementaryTypeName","src":"10682:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3209,"nodeType":"ArrayTypeName","src":"10682:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3212,"mutability":"mutable","name":"element","nameLocation":"10715:7:12","nodeType":"VariableDeclaration","scope":3270,"src":"10707:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3211,"name":"uint256","nodeType":"ElementaryTypeName","src":"10707:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10681:42:12"},"returnParameters":{"id":3216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3215,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3270,"src":"10747:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3214,"name":"uint256","nodeType":"ElementaryTypeName","src":"10747:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10746:9:12"},"scope":3611,"src":"10662:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3333,"nodeType":"Block","src":"11982:709:12","statements":[{"assignments":[3282],"declarations":[{"constant":false,"id":3282,"mutability":"mutable","name":"low","nameLocation":"12000:3:12","nodeType":"VariableDeclaration","scope":3333,"src":"11992:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"11992:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3284,"initialValue":{"hexValue":"30","id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12006:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11992:15:12"},{"assignments":[3286],"declarations":[{"constant":false,"id":3286,"mutability":"mutable","name":"high","nameLocation":"12025:4:12","nodeType":"VariableDeclaration","scope":3333,"src":"12017:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"12017:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3289,"initialValue":{"expression":{"id":3287,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"12032:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},"id":3288,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12038:6:12","memberName":"length","nodeType":"MemberAccess","src":"12032:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12017:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12059:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12059:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3296,"nodeType":"IfStatement","src":"12055:48:12","trueBody":{"id":3295,"nodeType":"Block","src":"12070:33:12","statements":[{"expression":{"hexValue":"30","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12091:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3280,"id":3294,"nodeType":"Return","src":"12084:8:12"}]}},{"body":{"id":3329,"nodeType":"Block","src":"12132:532:12","statements":[{"assignments":[3301],"declarations":[{"constant":false,"id":3301,"mutability":"mutable","name":"mid","nameLocation":"12154:3:12","nodeType":"VariableDeclaration","scope":3329,"src":"12146:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3300,"name":"uint256","nodeType":"ElementaryTypeName","src":"12146:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3307,"initialValue":{"arguments":[{"id":3304,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"12173:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3305,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12178:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3302,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"12160:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12165:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"12160:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12160:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12146:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3309,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3274,"src":"12421:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"}},{"id":3310,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"12428:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[] storage pointer"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"name":"unsafeAccess","nodeType":"Identifier","overloadedDeclarations":[3486,3512,3538],"referencedDeclaration":3538,"src":"12408:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$3870_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12408:24:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"id":3312,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12433:5:12","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":3869,"src":"12408:30:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3313,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3276,"src":"12441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12408:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3327,"nodeType":"Block","src":"12499:155:12","statements":[{"id":3326,"nodeType":"UncheckedBlock","src":"12576:64:12","statements":[{"expression":{"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3320,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"12608:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3321,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"12614:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12620:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12614:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12608:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3325,"nodeType":"ExpressionStatement","src":"12608:13:12"}]}]},"id":3328,"nodeType":"IfStatement","src":"12404:250:12","trueBody":{"id":3319,"nodeType":"Block","src":"12450:43:12","statements":[{"expression":{"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3315,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12468:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3316,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3301,"src":"12475:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12468:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3318,"nodeType":"ExpressionStatement","src":"12468:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3297,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"12120:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3298,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3286,"src":"12126:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12120:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3330,"nodeType":"WhileStatement","src":"12113:551:12"},{"expression":{"id":3331,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3282,"src":"12681:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3280,"id":3332,"nodeType":"Return","src":"12674:10:12"}]},"documentation":{"id":3271,"nodeType":"StructuredDocumentation","src":"11471:412:12","text":" @dev Searches an `array` sorted in ascending order and returns the first\n index that contains a value strictly greater than `element`. If no such index\n exists (i.e. all values in the array are strictly less than `element`), the array\n length is returned. Time complexity O(log n).\n See C++'s https://en.cppreference.com/w/cpp/algorithm/upper_bound[upper_bound]."},"id":3334,"implemented":true,"kind":"function","modifiers":[],"name":"upperBound","nameLocation":"11897:10:12","nodeType":"FunctionDefinition","parameters":{"id":3277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3274,"mutability":"mutable","name":"array","nameLocation":"11926:5:12","nodeType":"VariableDeclaration","scope":3334,"src":"11908:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3272,"name":"uint256","nodeType":"ElementaryTypeName","src":"11908:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3273,"nodeType":"ArrayTypeName","src":"11908:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3276,"mutability":"mutable","name":"element","nameLocation":"11941:7:12","nodeType":"VariableDeclaration","scope":3334,"src":"11933:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3275,"name":"uint256","nodeType":"ElementaryTypeName","src":"11933:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11907:42:12"},"returnParameters":{"id":3280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3334,"src":"11973:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3278,"name":"uint256","nodeType":"ElementaryTypeName","src":"11973:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11972:9:12"},"scope":3611,"src":"11888:803:12","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3396,"nodeType":"Block","src":"12875:709:12","statements":[{"assignments":[3346],"declarations":[{"constant":false,"id":3346,"mutability":"mutable","name":"low","nameLocation":"12893:3:12","nodeType":"VariableDeclaration","scope":3396,"src":"12885:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3345,"name":"uint256","nodeType":"ElementaryTypeName","src":"12885:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3348,"initialValue":{"hexValue":"30","id":3347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12899:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12885:15:12"},{"assignments":[3350],"declarations":[{"constant":false,"id":3350,"mutability":"mutable","name":"high","nameLocation":"12918:4:12","nodeType":"VariableDeclaration","scope":3396,"src":"12910:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3349,"name":"uint256","nodeType":"ElementaryTypeName","src":"12910:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3353,"initialValue":{"expression":{"id":3351,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"12925:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12931:6:12","memberName":"length","nodeType":"MemberAccess","src":"12925:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12910:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3354,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"12952:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12960:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12952:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3360,"nodeType":"IfStatement","src":"12948:48:12","trueBody":{"id":3359,"nodeType":"Block","src":"12963:33:12","statements":[{"expression":{"hexValue":"30","id":3357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12984:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3344,"id":3358,"nodeType":"Return","src":"12977:8:12"}]}},{"body":{"id":3392,"nodeType":"Block","src":"13025:532:12","statements":[{"assignments":[3365],"declarations":[{"constant":false,"id":3365,"mutability":"mutable","name":"mid","nameLocation":"13047:3:12","nodeType":"VariableDeclaration","scope":3392,"src":"13039:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3364,"name":"uint256","nodeType":"ElementaryTypeName","src":"13039:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3371,"initialValue":{"arguments":[{"id":3368,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"13066:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3369,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13071:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3366,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"13053:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13058:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"13053:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13053:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13039:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3373,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3338,"src":"13320:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3374,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"13327:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3372,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3551,3564,3577],"referencedDeclaration":3577,"src":"13301:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13301:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3376,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"13334:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13301:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3390,"nodeType":"Block","src":"13504:43:12","statements":[{"expression":{"id":3388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3386,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13522:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3387,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"13529:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13522:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3389,"nodeType":"ExpressionStatement","src":"13522:10:12"}]},"id":3391,"nodeType":"IfStatement","src":"13297:250:12","trueBody":{"id":3385,"nodeType":"Block","src":"13343:155:12","statements":[{"id":3384,"nodeType":"UncheckedBlock","src":"13420:64:12","statements":[{"expression":{"id":3382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3378,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"13452:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3379,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3365,"src":"13458:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3380,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13464:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13458:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13452:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3383,"nodeType":"ExpressionStatement","src":"13452:13:12"}]}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3361,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"13013:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3362,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3350,"src":"13019:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13013:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3393,"nodeType":"WhileStatement","src":"13006:551:12"},{"expression":{"id":3394,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3346,"src":"13574:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3344,"id":3395,"nodeType":"Return","src":"13567:10:12"}]},"documentation":{"id":3335,"nodeType":"StructuredDocumentation","src":"12697:74:12","text":" @dev Same as {lowerBound}, but with an array in memory."},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"lowerBoundMemory","nameLocation":"12785:16:12","nodeType":"FunctionDefinition","parameters":{"id":3341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3338,"mutability":"mutable","name":"array","nameLocation":"12819:5:12","nodeType":"VariableDeclaration","scope":3397,"src":"12802:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"12802:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3337,"nodeType":"ArrayTypeName","src":"12802:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3340,"mutability":"mutable","name":"element","nameLocation":"12834:7:12","nodeType":"VariableDeclaration","scope":3397,"src":"12826:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3339,"name":"uint256","nodeType":"ElementaryTypeName","src":"12826:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12801:41:12"},"returnParameters":{"id":3344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3343,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3397,"src":"12866:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3342,"name":"uint256","nodeType":"ElementaryTypeName","src":"12866:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12865:9:12"},"scope":3611,"src":"12776:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3459,"nodeType":"Block","src":"13768:709:12","statements":[{"assignments":[3409],"declarations":[{"constant":false,"id":3409,"mutability":"mutable","name":"low","nameLocation":"13786:3:12","nodeType":"VariableDeclaration","scope":3459,"src":"13778:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"13778:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3411,"initialValue":{"hexValue":"30","id":3410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13792:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13778:15:12"},{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"high","nameLocation":"13811:4:12","nodeType":"VariableDeclaration","scope":3459,"src":"13803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3412,"name":"uint256","nodeType":"ElementaryTypeName","src":"13803:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3416,"initialValue":{"expression":{"id":3414,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"13818:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13824:6:12","memberName":"length","nodeType":"MemberAccess","src":"13818:12:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13803:27:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"13845:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13853:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13845:9:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3423,"nodeType":"IfStatement","src":"13841:48:12","trueBody":{"id":3422,"nodeType":"Block","src":"13856:33:12","statements":[{"expression":{"hexValue":"30","id":3420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13877:1:12","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3407,"id":3421,"nodeType":"Return","src":"13870:8:12"}]}},{"body":{"id":3455,"nodeType":"Block","src":"13918:532:12","statements":[{"assignments":[3428],"declarations":[{"constant":false,"id":3428,"mutability":"mutable","name":"mid","nameLocation":"13940:3:12","nodeType":"VariableDeclaration","scope":3455,"src":"13932:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3427,"name":"uint256","nodeType":"ElementaryTypeName","src":"13932:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3434,"initialValue":{"arguments":[{"id":3431,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"13959:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3432,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"13964:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3429,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"13946:4:12","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13951:7:12","memberName":"average","nodeType":"MemberAccess","referencedDeclaration":5767,"src":"13946:12:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":3433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13946:23:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13932:37:12"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3436,"name":"array","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"14213:5:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3437,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"14220:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3435,"name":"unsafeMemoryAccess","nodeType":"Identifier","overloadedDeclarations":[3551,3564,3577],"referencedDeclaration":3577,"src":"14194:18:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256[] memory,uint256) pure returns (uint256)"}},"id":3438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14194:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3439,"name":"element","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"14227:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14194:40:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3453,"nodeType":"Block","src":"14285:155:12","statements":[{"id":3452,"nodeType":"UncheckedBlock","src":"14362:64:12","statements":[{"expression":{"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3446,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"14394:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3447,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"14400:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14406:1:12","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14400:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14394:13:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3451,"nodeType":"ExpressionStatement","src":"14394:13:12"}]}]},"id":3454,"nodeType":"IfStatement","src":"14190:250:12","trueBody":{"id":3445,"nodeType":"Block","src":"14236:43:12","statements":[{"expression":{"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3441,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"14254:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3442,"name":"mid","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"14261:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14254:10:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3444,"nodeType":"ExpressionStatement","src":"14254:10:12"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3424,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"13906:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3425,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"13912:4:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13906:10:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3456,"nodeType":"WhileStatement","src":"13899:551:12"},{"expression":{"id":3457,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"14467:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3407,"id":3458,"nodeType":"Return","src":"14460:10:12"}]},"documentation":{"id":3398,"nodeType":"StructuredDocumentation","src":"13590:74:12","text":" @dev Same as {upperBound}, but with an array in memory."},"id":3460,"implemented":true,"kind":"function","modifiers":[],"name":"upperBoundMemory","nameLocation":"13678:16:12","nodeType":"FunctionDefinition","parameters":{"id":3404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3401,"mutability":"mutable","name":"array","nameLocation":"13712:5:12","nodeType":"VariableDeclaration","scope":3460,"src":"13695:22:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3399,"name":"uint256","nodeType":"ElementaryTypeName","src":"13695:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3400,"nodeType":"ArrayTypeName","src":"13695:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"element","nameLocation":"13727:7:12","nodeType":"VariableDeclaration","scope":3460,"src":"13719:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3402,"name":"uint256","nodeType":"ElementaryTypeName","src":"13719:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13694:41:12"},"returnParameters":{"id":3407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3406,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3460,"src":"13759:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3405,"name":"uint256","nodeType":"ElementaryTypeName","src":"13759:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13758:9:12"},"scope":3611,"src":"13669:808:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3485,"nodeType":"Block","src":"14793:167:12","statements":[{"assignments":[3473],"declarations":[{"constant":false,"id":3473,"mutability":"mutable","name":"slot","nameLocation":"14811:4:12","nodeType":"VariableDeclaration","scope":3485,"src":"14803:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14803:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3474,"nodeType":"VariableDeclarationStatement","src":"14803:12:12"},{"AST":{"nodeType":"YulBlock","src":"14850:40:12","statements":[{"nodeType":"YulAssignment","src":"14864:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"14872:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"14864:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3464,"isOffset":false,"isSlot":true,"src":"14872:8:12","suffix":"slot","valueSize":1},{"declaration":3473,"isOffset":false,"isSlot":false,"src":"14864:4:12","valueSize":1}],"flags":["memory-safe"],"id":3475,"nodeType":"InlineAssembly","src":"14825:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3480,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3466,"src":"14932:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3476,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3473,"src":"14906:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14911:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"14906:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14925:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"14906:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14937:14:12","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":3890,"src":"14906:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$3861_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14906:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3861_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"functionReturnParameters":3471,"id":3484,"nodeType":"Return","src":"14899:54:12"}]},"documentation":{"id":3461,"nodeType":"StructuredDocumentation","src":"14483:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3486,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"14688:12:12","nodeType":"FunctionDefinition","parameters":{"id":3467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3464,"mutability":"mutable","name":"arr","nameLocation":"14719:3:12","nodeType":"VariableDeclaration","scope":3486,"src":"14701:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3462,"name":"address","nodeType":"ElementaryTypeName","src":"14701:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3463,"nodeType":"ArrayTypeName","src":"14701:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3466,"mutability":"mutable","name":"pos","nameLocation":"14732:3:12","nodeType":"VariableDeclaration","scope":3486,"src":"14724:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3465,"name":"uint256","nodeType":"ElementaryTypeName","src":"14724:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14700:36:12"},"returnParameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3470,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3486,"src":"14760:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3861_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3469,"nodeType":"UserDefinedTypeName","pathNode":{"id":3468,"name":"StorageSlot.AddressSlot","nameLocations":["14760:11:12","14772:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3861,"src":"14760:23:12"},"referencedDeclaration":3861,"src":"14760:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3861_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"14759:33:12"},"scope":3611,"src":"14679:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3511,"nodeType":"Block","src":"15276:167:12","statements":[{"assignments":[3499],"declarations":[{"constant":false,"id":3499,"mutability":"mutable","name":"slot","nameLocation":"15294:4:12","nodeType":"VariableDeclaration","scope":3511,"src":"15286:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3498,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15286:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3500,"nodeType":"VariableDeclarationStatement","src":"15286:12:12"},{"AST":{"nodeType":"YulBlock","src":"15333:40:12","statements":[{"nodeType":"YulAssignment","src":"15347:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15355:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15347:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3490,"isOffset":false,"isSlot":true,"src":"15355:8:12","suffix":"slot","valueSize":1},{"declaration":3499,"isOffset":false,"isSlot":false,"src":"15347:4:12","valueSize":1}],"flags":["memory-safe"],"id":3501,"nodeType":"InlineAssembly","src":"15308:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3506,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3492,"src":"15415:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3502,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3499,"src":"15389:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15394:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"15389:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15408:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"15389:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15420:14:12","memberName":"getBytes32Slot","nodeType":"MemberAccess","referencedDeclaration":3912,"src":"15389:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$3867_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15389:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3867_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot storage pointer"}},"functionReturnParameters":3497,"id":3510,"nodeType":"Return","src":"15382:54:12"}]},"documentation":{"id":3487,"nodeType":"StructuredDocumentation","src":"14966:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3512,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15171:12:12","nodeType":"FunctionDefinition","parameters":{"id":3493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3490,"mutability":"mutable","name":"arr","nameLocation":"15202:3:12","nodeType":"VariableDeclaration","scope":3512,"src":"15184:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15184:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3489,"nodeType":"ArrayTypeName","src":"15184:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3492,"mutability":"mutable","name":"pos","nameLocation":"15215:3:12","nodeType":"VariableDeclaration","scope":3512,"src":"15207:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3491,"name":"uint256","nodeType":"ElementaryTypeName","src":"15207:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15183:36:12"},"returnParameters":{"id":3497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3496,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3512,"src":"15243:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3867_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3495,"nodeType":"UserDefinedTypeName","pathNode":{"id":3494,"name":"StorageSlot.Bytes32Slot","nameLocations":["15243:11:12","15255:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3867,"src":"15243:23:12"},"referencedDeclaration":3867,"src":"15243:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3867_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"15242:33:12"},"scope":3611,"src":"15162:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3537,"nodeType":"Block","src":"15759:167:12","statements":[{"assignments":[3525],"declarations":[{"constant":false,"id":3525,"mutability":"mutable","name":"slot","nameLocation":"15777:4:12","nodeType":"VariableDeclaration","scope":3537,"src":"15769:12:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3524,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15769:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3526,"nodeType":"VariableDeclarationStatement","src":"15769:12:12"},{"AST":{"nodeType":"YulBlock","src":"15816:40:12","statements":[{"nodeType":"YulAssignment","src":"15830:16:12","value":{"name":"arr.slot","nodeType":"YulIdentifier","src":"15838:8:12"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"15830:4:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3516,"isOffset":false,"isSlot":true,"src":"15838:8:12","suffix":"slot","valueSize":1},{"declaration":3525,"isOffset":false,"isSlot":false,"src":"15830:4:12","valueSize":1}],"flags":["memory-safe"],"id":3527,"nodeType":"InlineAssembly","src":"15791:65:12"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3532,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3518,"src":"15898:3:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3528,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3525,"src":"15872:4:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15877:11:12","memberName":"deriveArray","nodeType":"MemberAccess","referencedDeclaration":3770,"src":"15872:16:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (bytes32)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:18:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15891:6:12","memberName":"offset","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"15872:25:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$attached_to$_t_bytes32_$","typeString":"function (bytes32,uint256) pure returns (bytes32)"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:30:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15903:14:12","memberName":"getUint256Slot","nodeType":"MemberAccess","referencedDeclaration":3923,"src":"15872:45:12","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$3870_storage_ptr_$attached_to$_t_bytes32_$","typeString":"function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15872:47:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot storage pointer"}},"functionReturnParameters":3523,"id":3536,"nodeType":"Return","src":"15865:54:12"}]},"documentation":{"id":3513,"nodeType":"StructuredDocumentation","src":"15449:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3538,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeAccess","nameLocation":"15654:12:12","nodeType":"FunctionDefinition","parameters":{"id":3519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3516,"mutability":"mutable","name":"arr","nameLocation":"15685:3:12","nodeType":"VariableDeclaration","scope":3538,"src":"15667:21:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3514,"name":"uint256","nodeType":"ElementaryTypeName","src":"15667:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3515,"nodeType":"ArrayTypeName","src":"15667:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3518,"mutability":"mutable","name":"pos","nameLocation":"15698:3:12","nodeType":"VariableDeclaration","scope":3538,"src":"15690:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3517,"name":"uint256","nodeType":"ElementaryTypeName","src":"15690:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15666:36:12"},"returnParameters":{"id":3523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3538,"src":"15726:31:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3521,"nodeType":"UserDefinedTypeName","pathNode":{"id":3520,"name":"StorageSlot.Uint256Slot","nameLocations":["15726:11:12","15738:11:12"],"nodeType":"IdentifierPath","referencedDeclaration":3870,"src":"15726:23:12"},"referencedDeclaration":3870,"src":"15726:23:12","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"15725:33:12"},"scope":3611,"src":"15645:281:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3550,"nodeType":"Block","src":"16227:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"16246:73:12","statements":[{"nodeType":"YulAssignment","src":"16260:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16281:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16286:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16277:3:12"},"nodeType":"YulFunctionCall","src":"16277:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16297:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16302:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16293:3:12"},"nodeType":"YulFunctionCall","src":"16293:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16273:3:12"},"nodeType":"YulFunctionCall","src":"16273:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16267:5:12"},"nodeType":"YulFunctionCall","src":"16267:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16260:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3542,"isOffset":false,"isSlot":false,"src":"16281:3:12","valueSize":1},{"declaration":3544,"isOffset":false,"isSlot":false,"src":"16297:3:12","valueSize":1},{"declaration":3547,"isOffset":false,"isSlot":false,"src":"16260:3:12","valueSize":1}],"id":3549,"nodeType":"InlineAssembly","src":"16237:82:12"}]},"documentation":{"id":3539,"nodeType":"StructuredDocumentation","src":"15932:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3551,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16137:18:12","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"arr","nameLocation":"16173:3:12","nodeType":"VariableDeclaration","scope":3551,"src":"16156:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3540,"name":"address","nodeType":"ElementaryTypeName","src":"16156:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3541,"nodeType":"ArrayTypeName","src":"16156:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"pos","nameLocation":"16186:3:12","nodeType":"VariableDeclaration","scope":3551,"src":"16178:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3543,"name":"uint256","nodeType":"ElementaryTypeName","src":"16178:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16155:35:12"},"returnParameters":{"id":3548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3547,"mutability":"mutable","name":"res","nameLocation":"16222:3:12","nodeType":"VariableDeclaration","scope":3551,"src":"16214:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3546,"name":"address","nodeType":"ElementaryTypeName","src":"16214:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16213:13:12"},"scope":3611,"src":"16128:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3563,"nodeType":"Block","src":"16626:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"16645:73:12","statements":[{"nodeType":"YulAssignment","src":"16659:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"16680:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16676:3:12"},"nodeType":"YulFunctionCall","src":"16676:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16696:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"16701:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"16692:3:12"},"nodeType":"YulFunctionCall","src":"16692:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16672:3:12"},"nodeType":"YulFunctionCall","src":"16672:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16666:5:12"},"nodeType":"YulFunctionCall","src":"16666:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"16659:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3555,"isOffset":false,"isSlot":false,"src":"16680:3:12","valueSize":1},{"declaration":3557,"isOffset":false,"isSlot":false,"src":"16696:3:12","valueSize":1},{"declaration":3560,"isOffset":false,"isSlot":false,"src":"16659:3:12","valueSize":1}],"id":3562,"nodeType":"InlineAssembly","src":"16636:82:12"}]},"documentation":{"id":3552,"nodeType":"StructuredDocumentation","src":"16331:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3564,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16536:18:12","nodeType":"FunctionDefinition","parameters":{"id":3558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3555,"mutability":"mutable","name":"arr","nameLocation":"16572:3:12","nodeType":"VariableDeclaration","scope":3564,"src":"16555:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16555:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3554,"nodeType":"ArrayTypeName","src":"16555:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3557,"mutability":"mutable","name":"pos","nameLocation":"16585:3:12","nodeType":"VariableDeclaration","scope":3564,"src":"16577:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3556,"name":"uint256","nodeType":"ElementaryTypeName","src":"16577:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16554:35:12"},"returnParameters":{"id":3561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3560,"mutability":"mutable","name":"res","nameLocation":"16621:3:12","nodeType":"VariableDeclaration","scope":3564,"src":"16613:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3559,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16613:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16612:13:12"},"scope":3611,"src":"16527:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3576,"nodeType":"Block","src":"17025:98:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17044:73:12","statements":[{"nodeType":"YulAssignment","src":"17058:49:12","value":{"arguments":[{"arguments":[{"arguments":[{"name":"arr","nodeType":"YulIdentifier","src":"17079:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17084:4:12","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17075:3:12"},"nodeType":"YulFunctionCall","src":"17075:14:12"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17095:3:12"},{"kind":"number","nodeType":"YulLiteral","src":"17100:4:12","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"17091:3:12"},"nodeType":"YulFunctionCall","src":"17091:14:12"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17071:3:12"},"nodeType":"YulFunctionCall","src":"17071:35:12"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17065:5:12"},"nodeType":"YulFunctionCall","src":"17065:42:12"},"variableNames":[{"name":"res","nodeType":"YulIdentifier","src":"17058:3:12"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3568,"isOffset":false,"isSlot":false,"src":"17079:3:12","valueSize":1},{"declaration":3570,"isOffset":false,"isSlot":false,"src":"17095:3:12","valueSize":1},{"declaration":3573,"isOffset":false,"isSlot":false,"src":"17058:3:12","valueSize":1}],"id":3575,"nodeType":"InlineAssembly","src":"17035:82:12"}]},"documentation":{"id":3565,"nodeType":"StructuredDocumentation","src":"16730:191:12","text":" @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."},"id":3577,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeMemoryAccess","nameLocation":"16935:18:12","nodeType":"FunctionDefinition","parameters":{"id":3571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3568,"mutability":"mutable","name":"arr","nameLocation":"16971:3:12","nodeType":"VariableDeclaration","scope":3577,"src":"16954:20:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"16954:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3567,"nodeType":"ArrayTypeName","src":"16954:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3570,"mutability":"mutable","name":"pos","nameLocation":"16984:3:12","nodeType":"VariableDeclaration","scope":3577,"src":"16976:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3569,"name":"uint256","nodeType":"ElementaryTypeName","src":"16976:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16953:35:12"},"returnParameters":{"id":3574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3573,"mutability":"mutable","name":"res","nameLocation":"17020:3:12","nodeType":"VariableDeclaration","scope":3577,"src":"17012:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3572,"name":"uint256","nodeType":"ElementaryTypeName","src":"17012:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17011:13:12"},"scope":3611,"src":"16926:197:12","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3587,"nodeType":"Block","src":"17439:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17474:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17495:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"17507:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17488:6:12"},"nodeType":"YulFunctionCall","src":"17488:23:12"},"nodeType":"YulExpressionStatement","src":"17488:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3581,"isOffset":false,"isSlot":true,"src":"17495:10:12","suffix":"slot","valueSize":1},{"declaration":3583,"isOffset":false,"isSlot":false,"src":"17507:3:12","valueSize":1}],"flags":["memory-safe"],"id":3586,"nodeType":"InlineAssembly","src":"17449:72:12"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"17129:233:12","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3588,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17376:15:12","nodeType":"FunctionDefinition","parameters":{"id":3584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3581,"mutability":"mutable","name":"array","nameLocation":"17410:5:12","nodeType":"VariableDeclaration","scope":3588,"src":"17392:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3579,"name":"address","nodeType":"ElementaryTypeName","src":"17392:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3580,"nodeType":"ArrayTypeName","src":"17392:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":3583,"mutability":"mutable","name":"len","nameLocation":"17425:3:12","nodeType":"VariableDeclaration","scope":3588,"src":"17417:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3582,"name":"uint256","nodeType":"ElementaryTypeName","src":"17417:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17391:38:12"},"returnParameters":{"id":3585,"nodeType":"ParameterList","parameters":[],"src":"17439:0:12"},"scope":3611,"src":"17367:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3598,"nodeType":"Block","src":"17843:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"17878:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"17899:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"17911:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"17892:6:12"},"nodeType":"YulFunctionCall","src":"17892:23:12"},"nodeType":"YulExpressionStatement","src":"17892:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3592,"isOffset":false,"isSlot":true,"src":"17899:10:12","suffix":"slot","valueSize":1},{"declaration":3594,"isOffset":false,"isSlot":false,"src":"17911:3:12","valueSize":1}],"flags":["memory-safe"],"id":3597,"nodeType":"InlineAssembly","src":"17853:72:12"}]},"documentation":{"id":3589,"nodeType":"StructuredDocumentation","src":"17533:233:12","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3599,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"17780:15:12","nodeType":"FunctionDefinition","parameters":{"id":3595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3592,"mutability":"mutable","name":"array","nameLocation":"17814:5:12","nodeType":"VariableDeclaration","scope":3599,"src":"17796:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3590,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17796:7:12","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3591,"nodeType":"ArrayTypeName","src":"17796:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3594,"mutability":"mutable","name":"len","nameLocation":"17829:3:12","nodeType":"VariableDeclaration","scope":3599,"src":"17821:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3593,"name":"uint256","nodeType":"ElementaryTypeName","src":"17821:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17795:38:12"},"returnParameters":{"id":3596,"nodeType":"ParameterList","parameters":[],"src":"17843:0:12"},"scope":3611,"src":"17771:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3609,"nodeType":"Block","src":"18247:88:12","statements":[{"AST":{"nodeType":"YulBlock","src":"18282:47:12","statements":[{"expression":{"arguments":[{"name":"array.slot","nodeType":"YulIdentifier","src":"18303:10:12"},{"name":"len","nodeType":"YulIdentifier","src":"18315:3:12"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"18296:6:12"},"nodeType":"YulFunctionCall","src":"18296:23:12"},"nodeType":"YulExpressionStatement","src":"18296:23:12"}]},"evmVersion":"paris","externalReferences":[{"declaration":3603,"isOffset":false,"isSlot":true,"src":"18303:10:12","suffix":"slot","valueSize":1},{"declaration":3605,"isOffset":false,"isSlot":false,"src":"18315:3:12","valueSize":1}],"flags":["memory-safe"],"id":3608,"nodeType":"InlineAssembly","src":"18257:72:12"}]},"documentation":{"id":3600,"nodeType":"StructuredDocumentation","src":"17937:233:12","text":" @dev Helper to set the length of a dynamic array. Directly writing to `.length` is forbidden.\n WARNING: this does not clear elements if length is reduced, of initialize elements if length is increased."},"id":3610,"implemented":true,"kind":"function","modifiers":[],"name":"unsafeSetLength","nameLocation":"18184:15:12","nodeType":"FunctionDefinition","parameters":{"id":3606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3603,"mutability":"mutable","name":"array","nameLocation":"18218:5:12","nodeType":"VariableDeclaration","scope":3610,"src":"18200:23:12","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3601,"name":"uint256","nodeType":"ElementaryTypeName","src":"18200:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ArrayTypeName","src":"18200:9:12","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":3605,"mutability":"mutable","name":"len","nameLocation":"18233:3:12","nodeType":"VariableDeclaration","scope":3610,"src":"18225:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3604,"name":"uint256","nodeType":"ElementaryTypeName","src":"18225:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18199:38:12"},"returnParameters":{"id":3607,"nodeType":"ParameterList","parameters":[],"src":"18247:0:12"},"scope":3611,"src":"18175:160:12","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":3612,"src":"459:17878:12","usedErrors":[],"usedEvents":[]}],"src":"183:18155:12"},"id":12},"@openzeppelin/contracts/utils/Comparators.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Comparators.sol","exportedSymbols":{"Comparators":[3643]},"id":3644,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3613,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"105:24:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Comparators","contractDependencies":[],"contractKind":"library","documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"131:92:13","text":" @dev Provides a set of functions to compare values.\n _Available since v5.1._"},"fullyImplemented":true,"id":3643,"linearizedBaseContracts":[3643],"name":"Comparators","nameLocation":"232:11:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":3627,"nodeType":"Block","src":"313:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3616,"src":"330:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3618,"src":"334:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"330:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3622,"id":3626,"nodeType":"Return","src":"323:12:13"}]},"id":3628,"implemented":true,"kind":"function","modifiers":[],"name":"lt","nameLocation":"259:2:13","nodeType":"FunctionDefinition","parameters":{"id":3619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3616,"mutability":"mutable","name":"a","nameLocation":"270:1:13","nodeType":"VariableDeclaration","scope":3628,"src":"262:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3615,"name":"uint256","nodeType":"ElementaryTypeName","src":"262:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3618,"mutability":"mutable","name":"b","nameLocation":"281:1:13","nodeType":"VariableDeclaration","scope":3628,"src":"273:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3617,"name":"uint256","nodeType":"ElementaryTypeName","src":"273:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"261:22:13"},"returnParameters":{"id":3622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3628,"src":"307:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3620,"name":"bool","nodeType":"ElementaryTypeName","src":"307:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"306:6:13"},"scope":3643,"src":"250:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3641,"nodeType":"Block","src":"411:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3637,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3630,"src":"428:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3638,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3632,"src":"432:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"428:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3636,"id":3640,"nodeType":"Return","src":"421:12:13"}]},"id":3642,"implemented":true,"kind":"function","modifiers":[],"name":"gt","nameLocation":"357:2:13","nodeType":"FunctionDefinition","parameters":{"id":3633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3630,"mutability":"mutable","name":"a","nameLocation":"368:1:13","nodeType":"VariableDeclaration","scope":3642,"src":"360:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3629,"name":"uint256","nodeType":"ElementaryTypeName","src":"360:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3632,"mutability":"mutable","name":"b","nameLocation":"379:1:13","nodeType":"VariableDeclaration","scope":3642,"src":"371:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3631,"name":"uint256","nodeType":"ElementaryTypeName","src":"371:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"359:22:13"},"returnParameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3642,"src":"405:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3634,"name":"bool","nodeType":"ElementaryTypeName","src":"405:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"404:6:13"},"scope":3643,"src":"348:92:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3644,"src":"224:218:13","usedErrors":[],"usedEvents":[]}],"src":"105:338:13"},"id":13},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[3673]},"id":3674,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3645,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:14"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":3646,"nodeType":"StructuredDocumentation","src":"127:496:14","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":3673,"linearizedBaseContracts":[3673],"name":"Context","nameLocation":"642:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":3654,"nodeType":"Block","src":"718:34:14","statements":[{"expression":{"expression":{"id":3651,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"735:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"739:6:14","memberName":"sender","nodeType":"MemberAccess","src":"735:10:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3650,"id":3653,"nodeType":"Return","src":"728:17:14"}]},"id":3655,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"665:10:14","nodeType":"FunctionDefinition","parameters":{"id":3647,"nodeType":"ParameterList","parameters":[],"src":"675:2:14"},"returnParameters":{"id":3650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3655,"src":"709:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3648,"name":"address","nodeType":"ElementaryTypeName","src":"709:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"708:9:14"},"scope":3673,"src":"656:96:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3663,"nodeType":"Block","src":"825:32:14","statements":[{"expression":{"expression":{"id":3660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"842:3:14","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"846:4:14","memberName":"data","nodeType":"MemberAccess","src":"842:8:14","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":3659,"id":3662,"nodeType":"Return","src":"835:15:14"}]},"id":3664,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"767:8:14","nodeType":"FunctionDefinition","parameters":{"id":3656,"nodeType":"ParameterList","parameters":[],"src":"775:2:14"},"returnParameters":{"id":3659,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3658,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3664,"src":"809:14:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3657,"name":"bytes","nodeType":"ElementaryTypeName","src":"809:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"808:16:14"},"scope":3673,"src":"758:99:14","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":3671,"nodeType":"Block","src":"935:25:14","statements":[{"expression":{"hexValue":"30","id":3669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"952:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3668,"id":3670,"nodeType":"Return","src":"945:8:14"}]},"id":3672,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"872:20:14","nodeType":"FunctionDefinition","parameters":{"id":3665,"nodeType":"ParameterList","parameters":[],"src":"892:2:14"},"returnParameters":{"id":3668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3672,"src":"926:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3666,"name":"uint256","nodeType":"ElementaryTypeName","src":"926:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"925:9:14"},"scope":3673,"src":"863:97:14","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":3674,"src":"624:338:14","usedErrors":[],"usedEvents":[]}],"src":"101:862:14"},"id":14},"@openzeppelin/contracts/utils/Panic.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[3725]},"id":3726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3675,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":3676,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":3725,"linearizedBaseContracts":[3725],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":3677,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":3680,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":3725,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3678,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":3681,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":3684,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":3725,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":3685,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":3688,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":3725,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3686,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":3687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":3689,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":3692,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":3725,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3690,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":3691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":3693,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":3696,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":3725,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3694,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":3697,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":3700,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":3725,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3698,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":3699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":3701,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":3704,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":3725,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3702,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":3703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":3705,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":3708,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":3725,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":3707,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":3712,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":3725,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3710,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":3711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":3713,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":3716,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":3725,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":3715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":3723,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1868:6:15"},"nodeType":"YulFunctionCall","src":"1868:24:15"},"nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1905:6:15"},"nodeType":"YulFunctionCall","src":"1905:18:15"},"nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1936:6:15"},"nodeType":"YulFunctionCall","src":"1936:18:15"},"nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":3719,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":3722,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":3717,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":3724,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":3720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3719,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":3724,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":3721,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":3725,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3726,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"},"id":15},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/SlotDerivation.sol","exportedSymbols":{"SlotDerivation":[3855]},"id":3856,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3727,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"199:24:16"},{"abstract":false,"baseContracts":[],"canonicalName":"SlotDerivation","contractDependencies":[],"contractKind":"library","documentation":{"id":3728,"nodeType":"StructuredDocumentation","src":"225:1373:16","text":" @dev Library for computing storage (and transient storage) locations from namespaces and deriving slots\n corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by\n the solidity language / compiler.\n See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.].\n Example usage:\n ```solidity\n contract Example {\n     // Add the library methods\n     using StorageSlot for bytes32;\n     using SlotDerivation for bytes32;\n     // Declare a namespace\n     string private constant _NAMESPACE = \"<namespace>\"; // eg. OpenZeppelin.Slot\n     function setValueInNamespace(uint256 key, address newValue) internal {\n         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;\n     }\n     function getValueInNamespace(uint256 key) internal view returns (address) {\n         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;\n     }\n }\n ```\n TIP: Consider using this library along with {StorageSlot}.\n NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking\n upgrade safety will ignore the slots accessed through this library.\n _Available since v5.1._"},"fullyImplemented":true,"id":3855,"linearizedBaseContracts":[3855],"name":"SlotDerivation","nameLocation":"1607:14:16","nodeType":"ContractDefinition","nodes":[{"body":{"id":3737,"nodeType":"Block","src":"1790:194:16","statements":[{"AST":{"nodeType":"YulBlock","src":"1825:153:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1846:4:16","type":"","value":"0x00"},{"arguments":[{"arguments":[{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1870:9:16"},{"kind":"number","nodeType":"YulLiteral","src":"1881:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1866:3:16"},"nodeType":"YulFunctionCall","src":"1866:20:16"},{"arguments":[{"name":"namespace","nodeType":"YulIdentifier","src":"1894:9:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1888:5:16"},"nodeType":"YulFunctionCall","src":"1888:16:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1856:9:16"},"nodeType":"YulFunctionCall","src":"1856:49:16"},{"kind":"number","nodeType":"YulLiteral","src":"1907:1:16","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1852:3:16"},"nodeType":"YulFunctionCall","src":"1852:57:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1839:6:16"},"nodeType":"YulFunctionCall","src":"1839:71:16"},"nodeType":"YulExpressionStatement","src":"1839:71:16"},{"nodeType":"YulAssignment","src":"1923:45:16","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1945:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"1951:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1935:9:16"},"nodeType":"YulFunctionCall","src":"1935:21:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1962:4:16","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1958:3:16"},"nodeType":"YulFunctionCall","src":"1958:9:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1931:3:16"},"nodeType":"YulFunctionCall","src":"1931:37:16"},"variableNames":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3731,"isOffset":false,"isSlot":false,"src":"1870:9:16","valueSize":1},{"declaration":3731,"isOffset":false,"isSlot":false,"src":"1894:9:16","valueSize":1},{"declaration":3734,"isOffset":false,"isSlot":false,"src":"1923:4:16","valueSize":1}],"flags":["memory-safe"],"id":3736,"nodeType":"InlineAssembly","src":"1800:178:16"}]},"documentation":{"id":3729,"nodeType":"StructuredDocumentation","src":"1628:74:16","text":" @dev Derive an ERC-7201 slot from a string (namespace)."},"id":3738,"implemented":true,"kind":"function","modifiers":[],"name":"erc7201Slot","nameLocation":"1716:11:16","nodeType":"FunctionDefinition","parameters":{"id":3732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3731,"mutability":"mutable","name":"namespace","nameLocation":"1742:9:16","nodeType":"VariableDeclaration","scope":3738,"src":"1728:23:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3730,"name":"string","nodeType":"ElementaryTypeName","src":"1728:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1727:25:16"},"returnParameters":{"id":3735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3734,"mutability":"mutable","name":"slot","nameLocation":"1784:4:16","nodeType":"VariableDeclaration","scope":3738,"src":"1776:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3733,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1776:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1775:14:16"},"scope":3855,"src":"1707:277:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3759,"nodeType":"Block","src":"2176:86:16","statements":[{"id":3758,"nodeType":"UncheckedBlock","src":"2186:70:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3752,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3741,"src":"2233:4:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3751,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2225:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3750,"name":"uint256","nodeType":"ElementaryTypeName","src":"2225:7:16","typeDescriptions":{}}},"id":3753,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2225:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3754,"name":"pos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3743,"src":"2241:3:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2225:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2217:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3748,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2217:7:16","typeDescriptions":{}}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2217:28:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3747,"id":3757,"nodeType":"Return","src":"2210:35:16"}]}]},"documentation":{"id":3739,"nodeType":"StructuredDocumentation","src":"1990:99:16","text":" @dev Add an offset to a slot to get the n-th element of a structure or an array."},"id":3760,"implemented":true,"kind":"function","modifiers":[],"name":"offset","nameLocation":"2103:6:16","nodeType":"FunctionDefinition","parameters":{"id":3744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3741,"mutability":"mutable","name":"slot","nameLocation":"2118:4:16","nodeType":"VariableDeclaration","scope":3760,"src":"2110:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3740,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2110:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3743,"mutability":"mutable","name":"pos","nameLocation":"2132:3:16","nodeType":"VariableDeclaration","scope":3760,"src":"2124:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"2124:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2109:27:16"},"returnParameters":{"id":3747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3746,"mutability":"mutable","name":"result","nameLocation":"2168:6:16","nodeType":"VariableDeclaration","scope":3760,"src":"2160:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2160:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2159:16:16"},"scope":3855,"src":"2094:168:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3769,"nodeType":"Block","src":"2465:127:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2500:86:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2521:4:16","type":"","value":"0x00"},{"name":"slot","nodeType":"YulIdentifier","src":"2527:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2514:6:16"},"nodeType":"YulFunctionCall","src":"2514:18:16"},"nodeType":"YulExpressionStatement","src":"2514:18:16"},{"nodeType":"YulAssignment","src":"2545:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2565:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2571:4:16","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2555:9:16"},"nodeType":"YulFunctionCall","src":"2555:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2545:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3766,"isOffset":false,"isSlot":false,"src":"2545:6:16","valueSize":1},{"declaration":3763,"isOffset":false,"isSlot":false,"src":"2527:4:16","valueSize":1}],"flags":["memory-safe"],"id":3768,"nodeType":"InlineAssembly","src":"2475:111:16"}]},"documentation":{"id":3761,"nodeType":"StructuredDocumentation","src":"2268:118:16","text":" @dev Derive the location of the first element in an array from the slot where the length is stored."},"id":3770,"implemented":true,"kind":"function","modifiers":[],"name":"deriveArray","nameLocation":"2400:11:16","nodeType":"FunctionDefinition","parameters":{"id":3764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3763,"mutability":"mutable","name":"slot","nameLocation":"2420:4:16","nodeType":"VariableDeclaration","scope":3770,"src":"2412:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3762,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2412:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2411:14:16"},"returnParameters":{"id":3767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3766,"mutability":"mutable","name":"result","nameLocation":"2457:6:16","nodeType":"VariableDeclaration","scope":3770,"src":"2449:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3765,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2449:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2448:16:16"},"scope":3855,"src":"2391:201:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3781,"nodeType":"Block","src":"2770:179:16","statements":[{"AST":{"nodeType":"YulBlock","src":"2805:138:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2826:4:16","type":"","value":"0x00"},{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"2836:3:16"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2845:2:16","type":"","value":"96"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2853:1:16","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2849:3:16"},"nodeType":"YulFunctionCall","src":"2849:6:16"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2841:3:16"},"nodeType":"YulFunctionCall","src":"2841:15:16"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2832:3:16"},"nodeType":"YulFunctionCall","src":"2832:25:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2819:6:16"},"nodeType":"YulFunctionCall","src":"2819:39:16"},"nodeType":"YulExpressionStatement","src":"2819:39:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2878:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"2884:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2871:6:16"},"nodeType":"YulFunctionCall","src":"2871:18:16"},"nodeType":"YulExpressionStatement","src":"2871:18:16"},{"nodeType":"YulAssignment","src":"2902:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2922:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"2928:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2912:9:16"},"nodeType":"YulFunctionCall","src":"2912:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2902:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3775,"isOffset":false,"isSlot":false,"src":"2836:3:16","valueSize":1},{"declaration":3778,"isOffset":false,"isSlot":false,"src":"2902:6:16","valueSize":1},{"declaration":3773,"isOffset":false,"isSlot":false,"src":"2884:4:16","valueSize":1}],"flags":["memory-safe"],"id":3780,"nodeType":"InlineAssembly","src":"2780:163:16"}]},"documentation":{"id":3771,"nodeType":"StructuredDocumentation","src":"2598:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3782,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"2690:13:16","nodeType":"FunctionDefinition","parameters":{"id":3776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3773,"mutability":"mutable","name":"slot","nameLocation":"2712:4:16","nodeType":"VariableDeclaration","scope":3782,"src":"2704:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2704:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3775,"mutability":"mutable","name":"key","nameLocation":"2726:3:16","nodeType":"VariableDeclaration","scope":3782,"src":"2718:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3774,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2703:27:16"},"returnParameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"result","nameLocation":"2762:6:16","nodeType":"VariableDeclaration","scope":3782,"src":"2754:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3777,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2754:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2753:16:16"},"scope":3855,"src":"2681:268:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3793,"nodeType":"Block","src":"3124:173:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3159:132:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3180:4:16","type":"","value":"0x00"},{"arguments":[{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"3200:3:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3193:6:16"},"nodeType":"YulFunctionCall","src":"3193:11:16"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3186:6:16"},"nodeType":"YulFunctionCall","src":"3186:19:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3173:6:16"},"nodeType":"YulFunctionCall","src":"3173:33:16"},"nodeType":"YulExpressionStatement","src":"3173:33:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3226:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3232:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3219:6:16"},"nodeType":"YulFunctionCall","src":"3219:18:16"},"nodeType":"YulExpressionStatement","src":"3219:18:16"},{"nodeType":"YulAssignment","src":"3250:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3270:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3276:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3260:9:16"},"nodeType":"YulFunctionCall","src":"3260:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3250:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3787,"isOffset":false,"isSlot":false,"src":"3200:3:16","valueSize":1},{"declaration":3790,"isOffset":false,"isSlot":false,"src":"3250:6:16","valueSize":1},{"declaration":3785,"isOffset":false,"isSlot":false,"src":"3232:4:16","valueSize":1}],"flags":["memory-safe"],"id":3792,"nodeType":"InlineAssembly","src":"3134:157:16"}]},"documentation":{"id":3783,"nodeType":"StructuredDocumentation","src":"2955:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3794,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3047:13:16","nodeType":"FunctionDefinition","parameters":{"id":3788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3785,"mutability":"mutable","name":"slot","nameLocation":"3069:4:16","nodeType":"VariableDeclaration","scope":3794,"src":"3061:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3784,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3061:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3787,"mutability":"mutable","name":"key","nameLocation":"3080:3:16","nodeType":"VariableDeclaration","scope":3794,"src":"3075:8:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3786,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3060:24:16"},"returnParameters":{"id":3791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3790,"mutability":"mutable","name":"result","nameLocation":"3116:6:16","nodeType":"VariableDeclaration","scope":3794,"src":"3108:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3789,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3108:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3107:16:16"},"scope":3855,"src":"3038:259:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3805,"nodeType":"Block","src":"3475:157:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3510:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3531:4:16","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3537:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3524:6:16"},"nodeType":"YulFunctionCall","src":"3524:17:16"},"nodeType":"YulExpressionStatement","src":"3524:17:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3561:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3567:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3554:6:16"},"nodeType":"YulFunctionCall","src":"3554:18:16"},"nodeType":"YulExpressionStatement","src":"3554:18:16"},{"nodeType":"YulAssignment","src":"3585:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3605:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3611:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3595:9:16"},"nodeType":"YulFunctionCall","src":"3595:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3585:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3799,"isOffset":false,"isSlot":false,"src":"3537:3:16","valueSize":1},{"declaration":3802,"isOffset":false,"isSlot":false,"src":"3585:6:16","valueSize":1},{"declaration":3797,"isOffset":false,"isSlot":false,"src":"3567:4:16","valueSize":1}],"flags":["memory-safe"],"id":3804,"nodeType":"InlineAssembly","src":"3485:141:16"}]},"documentation":{"id":3795,"nodeType":"StructuredDocumentation","src":"3303:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3806,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3395:13:16","nodeType":"FunctionDefinition","parameters":{"id":3800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3797,"mutability":"mutable","name":"slot","nameLocation":"3417:4:16","nodeType":"VariableDeclaration","scope":3806,"src":"3409:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3409:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3799,"mutability":"mutable","name":"key","nameLocation":"3431:3:16","nodeType":"VariableDeclaration","scope":3806,"src":"3423:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3798,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3423:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3408:27:16"},"returnParameters":{"id":3803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3802,"mutability":"mutable","name":"result","nameLocation":"3467:6:16","nodeType":"VariableDeclaration","scope":3806,"src":"3459:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3801,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3459:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3458:16:16"},"scope":3855,"src":"3386:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3817,"nodeType":"Block","src":"3810:157:16","statements":[{"AST":{"nodeType":"YulBlock","src":"3845:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3866:4:16","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"3872:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3859:6:16"},"nodeType":"YulFunctionCall","src":"3859:17:16"},"nodeType":"YulExpressionStatement","src":"3859:17:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3896:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"3902:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3889:6:16"},"nodeType":"YulFunctionCall","src":"3889:18:16"},"nodeType":"YulExpressionStatement","src":"3889:18:16"},{"nodeType":"YulAssignment","src":"3920:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3940:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"3946:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3930:9:16"},"nodeType":"YulFunctionCall","src":"3930:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3920:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3811,"isOffset":false,"isSlot":false,"src":"3872:3:16","valueSize":1},{"declaration":3814,"isOffset":false,"isSlot":false,"src":"3920:6:16","valueSize":1},{"declaration":3809,"isOffset":false,"isSlot":false,"src":"3902:4:16","valueSize":1}],"flags":["memory-safe"],"id":3816,"nodeType":"InlineAssembly","src":"3820:141:16"}]},"documentation":{"id":3807,"nodeType":"StructuredDocumentation","src":"3638:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3818,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"3730:13:16","nodeType":"FunctionDefinition","parameters":{"id":3812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3809,"mutability":"mutable","name":"slot","nameLocation":"3752:4:16","nodeType":"VariableDeclaration","scope":3818,"src":"3744:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3808,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3744:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3811,"mutability":"mutable","name":"key","nameLocation":"3766:3:16","nodeType":"VariableDeclaration","scope":3818,"src":"3758:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3810,"name":"uint256","nodeType":"ElementaryTypeName","src":"3758:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3743:27:16"},"returnParameters":{"id":3815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3814,"mutability":"mutable","name":"result","nameLocation":"3802:6:16","nodeType":"VariableDeclaration","scope":3818,"src":"3794:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3813,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3794:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3793:16:16"},"scope":3855,"src":"3721:246:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3829,"nodeType":"Block","src":"4144:157:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4179:116:16","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4200:4:16","type":"","value":"0x00"},{"name":"key","nodeType":"YulIdentifier","src":"4206:3:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4193:6:16"},"nodeType":"YulFunctionCall","src":"4193:17:16"},"nodeType":"YulExpressionStatement","src":"4193:17:16"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4230:4:16","type":"","value":"0x20"},{"name":"slot","nodeType":"YulIdentifier","src":"4236:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4223:6:16"},"nodeType":"YulFunctionCall","src":"4223:18:16"},"nodeType":"YulExpressionStatement","src":"4223:18:16"},{"nodeType":"YulAssignment","src":"4254:31:16","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4274:4:16","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"4280:4:16","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4264:9:16"},"nodeType":"YulFunctionCall","src":"4264:21:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4254:6:16"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3823,"isOffset":false,"isSlot":false,"src":"4206:3:16","valueSize":1},{"declaration":3826,"isOffset":false,"isSlot":false,"src":"4254:6:16","valueSize":1},{"declaration":3821,"isOffset":false,"isSlot":false,"src":"4236:4:16","valueSize":1}],"flags":["memory-safe"],"id":3828,"nodeType":"InlineAssembly","src":"4154:141:16"}]},"documentation":{"id":3819,"nodeType":"StructuredDocumentation","src":"3973:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3830,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4065:13:16","nodeType":"FunctionDefinition","parameters":{"id":3824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3821,"mutability":"mutable","name":"slot","nameLocation":"4087:4:16","nodeType":"VariableDeclaration","scope":3830,"src":"4079:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3820,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4079:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3823,"mutability":"mutable","name":"key","nameLocation":"4100:3:16","nodeType":"VariableDeclaration","scope":3830,"src":"4093:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3822,"name":"int256","nodeType":"ElementaryTypeName","src":"4093:6:16","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4078:26:16"},"returnParameters":{"id":3827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3826,"mutability":"mutable","name":"result","nameLocation":"4136:6:16","nodeType":"VariableDeclaration","scope":3830,"src":"4128:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3825,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4128:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4127:16:16"},"scope":3855,"src":"4056:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3841,"nodeType":"Block","src":"4485:326:16","statements":[{"AST":{"nodeType":"YulBlock","src":"4520:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"4534:24:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4554:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4548:5:16"},"nodeType":"YulFunctionCall","src":"4548:10:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4538:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4571:27:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"4588:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"4593:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4584:3:16"},"nodeType":"YulFunctionCall","src":"4584:14:16"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"4575:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4611:29:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4626:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"4633:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4622:3:16"},"nodeType":"YulFunctionCall","src":"4622:18:16"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"4615:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4653:23:16","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4672:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4666:5:16"},"nodeType":"YulFunctionCall","src":"4666:10:16"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"4657:5:16","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4696:3:16"},{"name":"slot","nodeType":"YulIdentifier","src":"4701:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4689:6:16"},"nodeType":"YulFunctionCall","src":"4689:17:16"},"nodeType":"YulExpressionStatement","src":"4689:17:16"},{"nodeType":"YulAssignment","src":"4719:45:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"4739:5:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4750:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"4758:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4746:3:16"},"nodeType":"YulFunctionCall","src":"4746:17:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"4729:9:16"},"nodeType":"YulFunctionCall","src":"4729:35:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4719:6:16"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"4784:3:16"},{"name":"cache","nodeType":"YulIdentifier","src":"4789:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4777:6:16"},"nodeType":"YulFunctionCall","src":"4777:18:16"},"nodeType":"YulExpressionStatement","src":"4777:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3835,"isOffset":false,"isSlot":false,"src":"4554:3:16","valueSize":1},{"declaration":3835,"isOffset":false,"isSlot":false,"src":"4588:3:16","valueSize":1},{"declaration":3838,"isOffset":false,"isSlot":false,"src":"4719:6:16","valueSize":1},{"declaration":3833,"isOffset":false,"isSlot":false,"src":"4701:4:16","valueSize":1}],"flags":["memory-safe"],"id":3840,"nodeType":"InlineAssembly","src":"4495:310:16"}]},"documentation":{"id":3831,"nodeType":"StructuredDocumentation","src":"4307:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3842,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4399:13:16","nodeType":"FunctionDefinition","parameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3833,"mutability":"mutable","name":"slot","nameLocation":"4421:4:16","nodeType":"VariableDeclaration","scope":3842,"src":"4413:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3832,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3835,"mutability":"mutable","name":"key","nameLocation":"4441:3:16","nodeType":"VariableDeclaration","scope":3842,"src":"4427:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3834,"name":"string","nodeType":"ElementaryTypeName","src":"4427:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4412:33:16"},"returnParameters":{"id":3839,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3838,"mutability":"mutable","name":"result","nameLocation":"4477:6:16","nodeType":"VariableDeclaration","scope":3842,"src":"4469:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4469:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4468:16:16"},"scope":3855,"src":"4390:421:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3853,"nodeType":"Block","src":"4994:326:16","statements":[{"AST":{"nodeType":"YulBlock","src":"5029:285:16","statements":[{"nodeType":"YulVariableDeclaration","src":"5043:24:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5063:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5057:5:16"},"nodeType":"YulFunctionCall","src":"5057:10:16"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5047:6:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5080:27:16","value":{"arguments":[{"name":"key","nodeType":"YulIdentifier","src":"5097:3:16"},{"kind":"number","nodeType":"YulLiteral","src":"5102:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5093:3:16"},"nodeType":"YulFunctionCall","src":"5093:14:16"},"variables":[{"name":"begin","nodeType":"YulTypedName","src":"5084:5:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5120:29:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5135:5:16"},{"name":"length","nodeType":"YulIdentifier","src":"5142:6:16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5131:3:16"},"nodeType":"YulFunctionCall","src":"5131:18:16"},"variables":[{"name":"end","nodeType":"YulTypedName","src":"5124:3:16","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5162:23:16","value":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5181:3:16"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5175:5:16"},"nodeType":"YulFunctionCall","src":"5175:10:16"},"variables":[{"name":"cache","nodeType":"YulTypedName","src":"5166:5:16","type":""}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5205:3:16"},{"name":"slot","nodeType":"YulIdentifier","src":"5210:4:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5198:6:16"},"nodeType":"YulFunctionCall","src":"5198:17:16"},"nodeType":"YulExpressionStatement","src":"5198:17:16"},{"nodeType":"YulAssignment","src":"5228:45:16","value":{"arguments":[{"name":"begin","nodeType":"YulIdentifier","src":"5248:5:16"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5259:6:16"},{"kind":"number","nodeType":"YulLiteral","src":"5267:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5255:3:16"},"nodeType":"YulFunctionCall","src":"5255:17:16"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5238:9:16"},"nodeType":"YulFunctionCall","src":"5238:35:16"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"5228:6:16"}]},{"expression":{"arguments":[{"name":"end","nodeType":"YulIdentifier","src":"5293:3:16"},{"name":"cache","nodeType":"YulIdentifier","src":"5298:5:16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5286:6:16"},"nodeType":"YulFunctionCall","src":"5286:18:16"},"nodeType":"YulExpressionStatement","src":"5286:18:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":3847,"isOffset":false,"isSlot":false,"src":"5063:3:16","valueSize":1},{"declaration":3847,"isOffset":false,"isSlot":false,"src":"5097:3:16","valueSize":1},{"declaration":3850,"isOffset":false,"isSlot":false,"src":"5228:6:16","valueSize":1},{"declaration":3845,"isOffset":false,"isSlot":false,"src":"5210:4:16","valueSize":1}],"flags":["memory-safe"],"id":3852,"nodeType":"InlineAssembly","src":"5004:310:16"}]},"documentation":{"id":3843,"nodeType":"StructuredDocumentation","src":"4817:78:16","text":" @dev Derive the location of a mapping element from the key."},"id":3854,"implemented":true,"kind":"function","modifiers":[],"name":"deriveMapping","nameLocation":"4909:13:16","nodeType":"FunctionDefinition","parameters":{"id":3848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3845,"mutability":"mutable","name":"slot","nameLocation":"4931:4:16","nodeType":"VariableDeclaration","scope":3854,"src":"4923:12:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4923:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3847,"mutability":"mutable","name":"key","nameLocation":"4950:3:16","nodeType":"VariableDeclaration","scope":3854,"src":"4937:16:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3846,"name":"bytes","nodeType":"ElementaryTypeName","src":"4937:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4922:32:16"},"returnParameters":{"id":3851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3850,"mutability":"mutable","name":"result","nameLocation":"4986:6:16","nodeType":"VariableDeclaration","scope":3854,"src":"4978:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4978:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4977:16:16"},"scope":3855,"src":"4900:420:16","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3856,"src":"1599:3723:16","usedErrors":[],"usedEvents":[]}],"src":"199:5124:16"},"id":16},"@openzeppelin/contracts/utils/StorageSlot.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[3979]},"id":3980,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3857,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":3858,"nodeType":"StructuredDocumentation","src":"219:1187:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":3979,"linearizedBaseContracts":[3979],"name":"StorageSlot","nameLocation":"1415:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":3861,"members":[{"constant":false,"id":3860,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":3861,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3859,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":3979,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":3864,"members":[{"constant":false,"id":3863,"mutability":"mutable","name":"value","nameLocation":"1522:5:17","nodeType":"VariableDeclaration","scope":3864,"src":"1517:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3862,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:17","nodeType":"StructDefinition","scope":3979,"src":"1488:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":3867,"members":[{"constant":false,"id":3866,"mutability":"mutable","name":"value","nameLocation":"1577:5:17","nodeType":"VariableDeclaration","scope":3867,"src":"1569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:17","nodeType":"StructDefinition","scope":3979,"src":"1540:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":3870,"members":[{"constant":false,"id":3869,"mutability":"mutable","name":"value","nameLocation":"1632:5:17","nodeType":"VariableDeclaration","scope":3870,"src":"1624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3868,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:17","nodeType":"StructDefinition","scope":3979,"src":"1595:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":3873,"members":[{"constant":false,"id":3872,"mutability":"mutable","name":"value","nameLocation":"1685:5:17","nodeType":"VariableDeclaration","scope":3873,"src":"1678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3871,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:17","nodeType":"StructDefinition","scope":3979,"src":"1650:47:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":3876,"members":[{"constant":false,"id":3875,"mutability":"mutable","name":"value","nameLocation":"1738:5:17","nodeType":"VariableDeclaration","scope":3876,"src":"1731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3874,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:17","nodeType":"StructDefinition","scope":3979,"src":"1703:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":3879,"members":[{"constant":false,"id":3878,"mutability":"mutable","name":"value","nameLocation":"1789:5:17","nodeType":"VariableDeclaration","scope":3879,"src":"1783:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3877,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:17","nodeType":"StructDefinition","scope":3979,"src":"1756:45:17","visibility":"public"},{"body":{"id":3889,"nodeType":"Block","src":"1983:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2018:38:17","statements":[{"nodeType":"YulAssignment","src":"2032:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2042:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2032:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3886,"isOffset":false,"isSlot":true,"src":"2032:6:17","suffix":"slot","valueSize":1},{"declaration":3882,"isOffset":false,"isSlot":false,"src":"2042:4:17","valueSize":1}],"flags":["memory-safe"],"id":3888,"nodeType":"InlineAssembly","src":"1993:63:17"}]},"documentation":{"id":3880,"nodeType":"StructuredDocumentation","src":"1807:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":3890,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:17","nodeType":"FunctionDefinition","parameters":{"id":3883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3882,"mutability":"mutable","name":"slot","nameLocation":"1931:4:17","nodeType":"VariableDeclaration","scope":3890,"src":"1923:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3881,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:17"},"returnParameters":{"id":3887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3886,"mutability":"mutable","name":"r","nameLocation":"1980:1:17","nodeType":"VariableDeclaration","scope":3890,"src":"1960:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3861_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":3885,"nodeType":"UserDefinedTypeName","pathNode":{"id":3884,"name":"AddressSlot","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3861,"src":"1960:11:17"},"referencedDeclaration":3861,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$3861_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:17"},"scope":3979,"src":"1899:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3900,"nodeType":"Block","src":"2243:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2278:38:17","statements":[{"nodeType":"YulAssignment","src":"2292:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2302:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2292:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3897,"isOffset":false,"isSlot":true,"src":"2292:6:17","suffix":"slot","valueSize":1},{"declaration":3893,"isOffset":false,"isSlot":false,"src":"2302:4:17","valueSize":1}],"flags":["memory-safe"],"id":3899,"nodeType":"InlineAssembly","src":"2253:63:17"}]},"documentation":{"id":3891,"nodeType":"StructuredDocumentation","src":"2068:86:17","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":3901,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:17","nodeType":"FunctionDefinition","parameters":{"id":3894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3893,"mutability":"mutable","name":"slot","nameLocation":"2191:4:17","nodeType":"VariableDeclaration","scope":3901,"src":"2183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:17"},"returnParameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3897,"mutability":"mutable","name":"r","nameLocation":"2240:1:17","nodeType":"VariableDeclaration","scope":3901,"src":"2220:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3864_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":3896,"nodeType":"UserDefinedTypeName","pathNode":{"id":3895,"name":"BooleanSlot","nameLocations":["2220:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3864,"src":"2220:11:17"},"referencedDeclaration":3864,"src":"2220:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$3864_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:17"},"scope":3979,"src":"2159:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3911,"nodeType":"Block","src":"2503:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2538:38:17","statements":[{"nodeType":"YulAssignment","src":"2552:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2562:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2552:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3908,"isOffset":false,"isSlot":true,"src":"2552:6:17","suffix":"slot","valueSize":1},{"declaration":3904,"isOffset":false,"isSlot":false,"src":"2562:4:17","valueSize":1}],"flags":["memory-safe"],"id":3910,"nodeType":"InlineAssembly","src":"2513:63:17"}]},"documentation":{"id":3902,"nodeType":"StructuredDocumentation","src":"2328:86:17","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":3912,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:17","nodeType":"FunctionDefinition","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3904,"mutability":"mutable","name":"slot","nameLocation":"2451:4:17","nodeType":"VariableDeclaration","scope":3912,"src":"2443:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3903,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:17"},"returnParameters":{"id":3909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3908,"mutability":"mutable","name":"r","nameLocation":"2500:1:17","nodeType":"VariableDeclaration","scope":3912,"src":"2480:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3867_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":3907,"nodeType":"UserDefinedTypeName","pathNode":{"id":3906,"name":"Bytes32Slot","nameLocations":["2480:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3867,"src":"2480:11:17"},"referencedDeclaration":3867,"src":"2480:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$3867_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:17"},"scope":3979,"src":"2419:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3922,"nodeType":"Block","src":"2763:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"2798:38:17","statements":[{"nodeType":"YulAssignment","src":"2812:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"2822:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"2812:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3919,"isOffset":false,"isSlot":true,"src":"2812:6:17","suffix":"slot","valueSize":1},{"declaration":3915,"isOffset":false,"isSlot":false,"src":"2822:4:17","valueSize":1}],"flags":["memory-safe"],"id":3921,"nodeType":"InlineAssembly","src":"2773:63:17"}]},"documentation":{"id":3913,"nodeType":"StructuredDocumentation","src":"2588:86:17","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":3923,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:17","nodeType":"FunctionDefinition","parameters":{"id":3916,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3915,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":3923,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3914,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:17"},"returnParameters":{"id":3920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3919,"mutability":"mutable","name":"r","nameLocation":"2760:1:17","nodeType":"VariableDeclaration","scope":3923,"src":"2740:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":3918,"nodeType":"UserDefinedTypeName","pathNode":{"id":3917,"name":"Uint256Slot","nameLocations":["2740:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":3870,"src":"2740:11:17"},"referencedDeclaration":3870,"src":"2740:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$3870_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:17"},"scope":3979,"src":"2679:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3933,"nodeType":"Block","src":"3020:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3055:38:17","statements":[{"nodeType":"YulAssignment","src":"3069:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3079:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3069:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3930,"isOffset":false,"isSlot":true,"src":"3069:6:17","suffix":"slot","valueSize":1},{"declaration":3926,"isOffset":false,"isSlot":false,"src":"3079:4:17","valueSize":1}],"flags":["memory-safe"],"id":3932,"nodeType":"InlineAssembly","src":"3030:63:17"}]},"documentation":{"id":3924,"nodeType":"StructuredDocumentation","src":"2848:85:17","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":3934,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:17","nodeType":"FunctionDefinition","parameters":{"id":3927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3926,"mutability":"mutable","name":"slot","nameLocation":"2969:4:17","nodeType":"VariableDeclaration","scope":3934,"src":"2961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3925,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:17"},"returnParameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"r","nameLocation":"3017:1:17","nodeType":"VariableDeclaration","scope":3934,"src":"2998:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3873_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":3929,"nodeType":"UserDefinedTypeName","pathNode":{"id":3928,"name":"Int256Slot","nameLocations":["2998:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3873,"src":"2998:10:17"},"referencedDeclaration":3873,"src":"2998:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$3873_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:17"},"scope":3979,"src":"2938:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3944,"nodeType":"Block","src":"3277:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3312:38:17","statements":[{"nodeType":"YulAssignment","src":"3326:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3336:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3326:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3941,"isOffset":false,"isSlot":true,"src":"3326:6:17","suffix":"slot","valueSize":1},{"declaration":3937,"isOffset":false,"isSlot":false,"src":"3336:4:17","valueSize":1}],"flags":["memory-safe"],"id":3943,"nodeType":"InlineAssembly","src":"3287:63:17"}]},"documentation":{"id":3935,"nodeType":"StructuredDocumentation","src":"3105:85:17","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":3945,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:17","nodeType":"FunctionDefinition","parameters":{"id":3938,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3937,"mutability":"mutable","name":"slot","nameLocation":"3226:4:17","nodeType":"VariableDeclaration","scope":3945,"src":"3218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3936,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:17"},"returnParameters":{"id":3942,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3941,"mutability":"mutable","name":"r","nameLocation":"3274:1:17","nodeType":"VariableDeclaration","scope":3945,"src":"3255:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3876_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3940,"nodeType":"UserDefinedTypeName","pathNode":{"id":3939,"name":"StringSlot","nameLocations":["3255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3876,"src":"3255:10:17"},"referencedDeclaration":3876,"src":"3255:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3876_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:17"},"scope":3979,"src":"3195:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3955,"nodeType":"Block","src":"3558:85:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3593:44:17","statements":[{"nodeType":"YulAssignment","src":"3607:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"3617:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3607:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3952,"isOffset":false,"isSlot":true,"src":"3607:6:17","suffix":"slot","valueSize":1},{"declaration":3948,"isOffset":false,"isSlot":true,"src":"3617:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3954,"nodeType":"InlineAssembly","src":"3568:69:17"}]},"documentation":{"id":3946,"nodeType":"StructuredDocumentation","src":"3362:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":3956,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:17","nodeType":"FunctionDefinition","parameters":{"id":3949,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3948,"mutability":"mutable","name":"store","nameLocation":"3506:5:17","nodeType":"VariableDeclaration","scope":3956,"src":"3491:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":3947,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:17"},"returnParameters":{"id":3953,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3952,"mutability":"mutable","name":"r","nameLocation":"3555:1:17","nodeType":"VariableDeclaration","scope":3956,"src":"3536:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3876_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":3951,"nodeType":"UserDefinedTypeName","pathNode":{"id":3950,"name":"StringSlot","nameLocations":["3536:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":3876,"src":"3536:10:17"},"referencedDeclaration":3876,"src":"3536:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$3876_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:17"},"scope":3979,"src":"3468:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"3818:79:17","statements":[{"AST":{"nodeType":"YulBlock","src":"3853:38:17","statements":[{"nodeType":"YulAssignment","src":"3867:14:17","value":{"name":"slot","nodeType":"YulIdentifier","src":"3877:4:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"3867:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3963,"isOffset":false,"isSlot":true,"src":"3867:6:17","suffix":"slot","valueSize":1},{"declaration":3959,"isOffset":false,"isSlot":false,"src":"3877:4:17","valueSize":1}],"flags":["memory-safe"],"id":3965,"nodeType":"InlineAssembly","src":"3828:63:17"}]},"documentation":{"id":3957,"nodeType":"StructuredDocumentation","src":"3649:84:17","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:17","nodeType":"FunctionDefinition","parameters":{"id":3960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3959,"mutability":"mutable","name":"slot","nameLocation":"3768:4:17","nodeType":"VariableDeclaration","scope":3967,"src":"3760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3958,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:17"},"returnParameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"r","nameLocation":"3815:1:17","nodeType":"VariableDeclaration","scope":3967,"src":"3797:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3879_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"BytesSlot","nameLocations":["3797:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3879,"src":"3797:9:17"},"referencedDeclaration":3879,"src":"3797:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3879_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:17"},"scope":3979,"src":"3738:159:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3977,"nodeType":"Block","src":"4094:85:17","statements":[{"AST":{"nodeType":"YulBlock","src":"4129:44:17","statements":[{"nodeType":"YulAssignment","src":"4143:20:17","value":{"name":"store.slot","nodeType":"YulIdentifier","src":"4153:10:17"},"variableNames":[{"name":"r.slot","nodeType":"YulIdentifier","src":"4143:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3974,"isOffset":false,"isSlot":true,"src":"4143:6:17","suffix":"slot","valueSize":1},{"declaration":3970,"isOffset":false,"isSlot":true,"src":"4153:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":3976,"nodeType":"InlineAssembly","src":"4104:69:17"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"3903:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":3978,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:17","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"store","nameLocation":"4043:5:17","nodeType":"VariableDeclaration","scope":3978,"src":"4029:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":3969,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:17"},"returnParameters":{"id":3975,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3974,"mutability":"mutable","name":"r","nameLocation":"4091:1:17","nodeType":"VariableDeclaration","scope":3978,"src":"4073:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3879_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":3973,"nodeType":"UserDefinedTypeName","pathNode":{"id":3972,"name":"BytesSlot","nameLocations":["4073:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":3879,"src":"4073:9:17"},"referencedDeclaration":3879,"src":"4073:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$3879_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:17"},"scope":3979,"src":"4007:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3980,"src":"1407:2774:17","usedErrors":[],"usedEvents":[]}],"src":"193:3989:17"},"id":17},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[7038],"SafeCast":[8803],"SignedMath":[8947],"Strings":[5381]},"id":5382,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3981,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":3983,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5382,"sourceUnit":7039,"src":"127:37:18","symbolAliases":[{"foreign":{"id":3982,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./math/SafeCast.sol","id":3985,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5382,"sourceUnit":8804,"src":"165:45:18","symbolAliases":[{"foreign":{"id":3984,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"173:8:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":3987,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5382,"sourceUnit":8948,"src":"211:49:18","symbolAliases":[{"foreign":{"id":3986,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"219:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":3988,"nodeType":"StructuredDocumentation","src":"262:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":5381,"linearizedBaseContracts":[5381],"name":"Strings","nameLocation":"305:7:18","nodeType":"ContractDefinition","nodes":[{"global":false,"id":3990,"libraryName":{"id":3989,"name":"SafeCast","nameLocations":["325:8:18"],"nodeType":"IdentifierPath","referencedDeclaration":8803,"src":"325:8:18"},"nodeType":"UsingForDirective","src":"319:21:18"},{"constant":true,"id":3993,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"371:10:18","nodeType":"VariableDeclaration","scope":5381,"src":"346:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":3991,"name":"bytes16","nodeType":"ElementaryTypeName","src":"346:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":3992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"384:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":3996,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"431:14:18","nodeType":"VariableDeclaration","scope":5381,"src":"408:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3994,"name":"uint8","nodeType":"ElementaryTypeName","src":"408:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":3995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"448:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"constant":true,"id":4032,"mutability":"constant","name":"SPECIAL_CHARS_LOOKUP","nameLocation":"481:20:18","nodeType":"VariableDeclaration","scope":5381,"src":"456:302:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3997,"name":"uint256","nodeType":"ElementaryTypeName","src":"456:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"},"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"},"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"},"id":4021,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"},"id":4016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"},"id":4011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"},"id":4006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":3998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"513:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783038","id":3999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"518:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"513:9:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4001,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"512:11:18","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"id":4004,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"552:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783039","id":4003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"552:9:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}}],"id":4005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"551:11:18","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"}},"src":"512:50:18","typeDescriptions":{"typeIdentifier":"t_rational_768_by_1","typeString":"int_const 768"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"id":4009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"585:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783061","id":4008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"590:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"585:9:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}}],"id":4010,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"584:11:18","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"}},"src":"512:83:18","typeDescriptions":{"typeIdentifier":"t_rational_1792_by_1","typeString":"int_const 1792"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"id":4014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"622:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783063","id":4013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"627:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"622:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}}],"id":4015,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"621:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"}},"src":"512:120:18","typeDescriptions":{"typeIdentifier":"t_rational_5888_by_1","typeString":"int_const 5888"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"id":4019,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"661:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783064","id":4018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"666:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"661:9:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}}],"id":4020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"660:11:18","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"}},"src":"512:159:18","typeDescriptions":{"typeIdentifier":"t_rational_14080_by_1","typeString":"int_const 14080"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"},"id":4024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"706:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783232","id":4023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"711:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"706:9:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}}],"id":4025,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"705:11:18","typeDescriptions":{"typeIdentifier":"t_rational_17179869184_by_1","typeString":"int_const 17179869184"}},"src":"512:204:18","typeDescriptions":{"typeIdentifier":"t_rational_17179883264_by_1","typeString":"int_const 17179883264"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"},"id":4029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"748:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"30783563","id":4028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"753:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"748:9:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}}],"id":4030,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"747:11:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521099596496896_by_1","typeString":"int_const 4951760157141521099596496896"}},"src":"512:246:18","typeDescriptions":{"typeIdentifier":"t_rational_4951760157141521116776380160_by_1","typeString":"int_const 4951760157141521116776380160"}},"visibility":"private"},{"documentation":{"id":4033,"nodeType":"StructuredDocumentation","src":"778:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":4039,"name":"StringsInsufficientHexLength","nameLocation":"870:28:18","nodeType":"ErrorDefinition","parameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4035,"mutability":"mutable","name":"value","nameLocation":"907:5:18","nodeType":"VariableDeclaration","scope":4039,"src":"899:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4034,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"length","nameLocation":"922:6:18","nodeType":"VariableDeclaration","scope":4039,"src":"914:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4036,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"898:31:18"},"src":"864:66:18"},{"documentation":{"id":4040,"nodeType":"StructuredDocumentation","src":"936:108:18","text":" @dev The string being parsed contains characters that are not in scope of the given base."},"errorSelector":"94e2737e","id":4042,"name":"StringsInvalidChar","nameLocation":"1055:18:18","nodeType":"ErrorDefinition","parameters":{"id":4041,"nodeType":"ParameterList","parameters":[],"src":"1073:2:18"},"src":"1049:27:18"},{"documentation":{"id":4043,"nodeType":"StructuredDocumentation","src":"1082:84:18","text":" @dev The string being parsed is not a properly formatted address."},"errorSelector":"1d15ae44","id":4045,"name":"StringsInvalidAddressFormat","nameLocation":"1177:27:18","nodeType":"ErrorDefinition","parameters":{"id":4044,"nodeType":"ParameterList","parameters":[],"src":"1204:2:18"},"src":"1171:36:18"},{"body":{"id":4092,"nodeType":"Block","src":"1379:561:18","statements":[{"id":4091,"nodeType":"UncheckedBlock","src":"1389:545:18","statements":[{"assignments":[4054],"declarations":[{"constant":false,"id":4054,"mutability":"mutable","name":"length","nameLocation":"1421:6:18","nodeType":"VariableDeclaration","scope":4091,"src":"1413:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4053,"name":"uint256","nodeType":"ElementaryTypeName","src":"1413:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4061,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4057,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"1441:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4055,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"1430:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":6870,"src":"1430:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1430:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1450:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1430:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1413:38:18"},{"assignments":[4063],"declarations":[{"constant":false,"id":4063,"mutability":"mutable","name":"buffer","nameLocation":"1479:6:18","nodeType":"VariableDeclaration","scope":4091,"src":"1465:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4062,"name":"string","nodeType":"ElementaryTypeName","src":"1465:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":4068,"initialValue":{"arguments":[{"id":4066,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4054,"src":"1499:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1488:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":4064,"name":"string","nodeType":"ElementaryTypeName","src":"1492:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1488:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"1465:41:18"},{"assignments":[4070],"declarations":[{"constant":false,"id":4070,"mutability":"mutable","name":"ptr","nameLocation":"1528:3:18","nodeType":"VariableDeclaration","scope":4091,"src":"1520:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4069,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4071,"nodeType":"VariableDeclarationStatement","src":"1520:11:18"},{"AST":{"nodeType":"YulBlock","src":"1570:67:18","statements":[{"nodeType":"YulAssignment","src":"1588:35:18","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"1599:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1611:2:18","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"1615:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1607:3:18"},"nodeType":"YulFunctionCall","src":"1607:15:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1595:3:18"},"nodeType":"YulFunctionCall","src":"1595:28:18"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"1588:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4063,"isOffset":false,"isSlot":false,"src":"1599:6:18","valueSize":1},{"declaration":4054,"isOffset":false,"isSlot":false,"src":"1615:6:18","valueSize":1},{"declaration":4070,"isOffset":false,"isSlot":false,"src":"1588:3:18","valueSize":1}],"flags":["memory-safe"],"id":4072,"nodeType":"InlineAssembly","src":"1545:92:18"},{"body":{"id":4087,"nodeType":"Block","src":"1663:234:18","statements":[{"expression":{"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1681:5:18","subExpression":{"id":4074,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"1681:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4076,"nodeType":"ExpressionStatement","src":"1681:5:18"},{"AST":{"nodeType":"YulBlock","src":"1729:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1759:3:18"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1773:5:18"},{"kind":"number","nodeType":"YulLiteral","src":"1780:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"1769:3:18"},"nodeType":"YulFunctionCall","src":"1769:14:18"},{"name":"HEX_DIGITS","nodeType":"YulIdentifier","src":"1785:10:18"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"1764:4:18"},"nodeType":"YulFunctionCall","src":"1764:32:18"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"1751:7:18"},"nodeType":"YulFunctionCall","src":"1751:46:18"},"nodeType":"YulExpressionStatement","src":"1751:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":3993,"isOffset":false,"isSlot":false,"src":"1785:10:18","valueSize":1},{"declaration":4070,"isOffset":false,"isSlot":false,"src":"1759:3:18","valueSize":1},{"declaration":4048,"isOffset":false,"isSlot":false,"src":"1773:5:18","valueSize":1}],"flags":["memory-safe"],"id":4077,"nodeType":"InlineAssembly","src":"1704:111:18"},{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"1832:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":4079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1832:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4081,"nodeType":"ExpressionStatement","src":"1832:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4048,"src":"1865:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"1861:21:18","trueBody":{"id":4085,"nodeType":"Break","src":"1877:5:18"}}]},"condition":{"hexValue":"74727565","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1657:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":4088,"nodeType":"WhileStatement","src":"1650:247:18"},{"expression":{"id":4089,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"1917:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4052,"id":4090,"nodeType":"Return","src":"1910:13:18"}]}]},"documentation":{"id":4046,"nodeType":"StructuredDocumentation","src":"1213:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":4093,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"1317:8:18","nodeType":"FunctionDefinition","parameters":{"id":4049,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4048,"mutability":"mutable","name":"value","nameLocation":"1334:5:18","nodeType":"VariableDeclaration","scope":4093,"src":"1326:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4047,"name":"uint256","nodeType":"ElementaryTypeName","src":"1326:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1325:15:18"},"returnParameters":{"id":4052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4093,"src":"1364:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4050,"name":"string","nodeType":"ElementaryTypeName","src":"1364:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1363:15:18"},"scope":5381,"src":"1308:632:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4118,"nodeType":"Block","src":"2116:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4104,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"2147:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2155:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2147:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":4108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2165:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":4109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2147:20:18","trueExpression":{"hexValue":"2d","id":4107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2159:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4096,"src":"2193:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":4111,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8947,"src":"2178:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$8947_$","typeString":"type(library SignedMath)"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2189:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":8946,"src":"2178:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2178:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4110,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4093,"src":"2169:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2169:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":4102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2133:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4101,"name":"string","nodeType":"ElementaryTypeName","src":"2133:6:18","typeDescriptions":{}}},"id":4103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2140:6:18","memberName":"concat","nodeType":"MemberAccess","src":"2133:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2133:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4100,"id":4117,"nodeType":"Return","src":"2126:75:18"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"1946:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"2049:14:18","nodeType":"FunctionDefinition","parameters":{"id":4097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4096,"mutability":"mutable","name":"value","nameLocation":"2071:5:18","nodeType":"VariableDeclaration","scope":4119,"src":"2064:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4095,"name":"int256","nodeType":"ElementaryTypeName","src":"2064:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"2063:14:18"},"returnParameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4119,"src":"2101:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4098,"name":"string","nodeType":"ElementaryTypeName","src":"2101:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2100:15:18"},"scope":5381,"src":"2040:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4138,"nodeType":"Block","src":"2387:100:18","statements":[{"id":4137,"nodeType":"UncheckedBlock","src":"2397:84:18","statements":[{"expression":{"arguments":[{"id":4128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"2440:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4131,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"2459:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4129,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"2447:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2452:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":6981,"src":"2447:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2447:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2468:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2447:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4127,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4139,4222,4242],"referencedDeclaration":4222,"src":"2428:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2428:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4126,"id":4136,"nodeType":"Return","src":"2421:49:18"}]}]},"documentation":{"id":4120,"nodeType":"StructuredDocumentation","src":"2214:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":4139,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2322:11:18","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"value","nameLocation":"2342:5:18","nodeType":"VariableDeclaration","scope":4139,"src":"2334:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:18"},"returnParameters":{"id":4126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4139,"src":"2372:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4124,"name":"string","nodeType":"ElementaryTypeName","src":"2372:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2371:15:18"},"scope":5381,"src":"2313:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4221,"nodeType":"Block","src":"2700:435:18","statements":[{"assignments":[4150],"declarations":[{"constant":false,"id":4150,"mutability":"mutable","name":"localValue","nameLocation":"2718:10:18","nodeType":"VariableDeclaration","scope":4221,"src":"2710:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4149,"name":"uint256","nodeType":"ElementaryTypeName","src":"2710:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4152,"initialValue":{"id":4151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"2731:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2710:26:18"},{"assignments":[4154],"declarations":[{"constant":false,"id":4154,"mutability":"mutable","name":"buffer","nameLocation":"2759:6:18","nodeType":"VariableDeclaration","scope":4221,"src":"2746:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4153,"name":"bytes","nodeType":"ElementaryTypeName","src":"2746:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4163,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2778:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4158,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"2782:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2778:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":4160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2791:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2778:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4156,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2768:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":4155,"name":"bytes","nodeType":"ElementaryTypeName","src":"2772:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":4162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2768:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2746:47:18"},{"expression":{"id":4168,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4164,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"2803:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4166,"indexExpression":{"hexValue":"30","id":4165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2810:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2803:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":4167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2815:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2803:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4169,"nodeType":"ExpressionStatement","src":"2803:15:18"},{"expression":{"id":4174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4170,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"2828:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4172,"indexExpression":{"hexValue":"31","id":4171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2835:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2828:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":4173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2840:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2828:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4175,"nodeType":"ExpressionStatement","src":"2828:15:18"},{"body":{"id":4204,"nodeType":"Block","src":"2898:95:18","statements":[{"expression":{"id":4198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4190,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"2912:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4192,"indexExpression":{"id":4191,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"2919:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2912:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":4193,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"2924:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":4197,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4194,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"2935:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2935:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2924:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2912:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4199,"nodeType":"ExpressionStatement","src":"2912:40:18"},{"expression":{"id":4202,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4200,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"2966:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2981:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2966:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4203,"nodeType":"ExpressionStatement","src":"2966:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4184,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"2886:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2890:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2886:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4205,"initializationExpression":{"assignments":[4177],"declarations":[{"constant":false,"id":4177,"mutability":"mutable","name":"i","nameLocation":"2866:1:18","nodeType":"VariableDeclaration","scope":4205,"src":"2858:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4176,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4183,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2870:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4179,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"2874:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2870:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2870:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2858:26:18"},"loopExpression":{"expression":{"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2893:3:18","subExpression":{"id":4187,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4177,"src":"2895:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4189,"nodeType":"ExpressionStatement","src":"2893:3:18"},"nodeType":"ForStatement","src":"2853:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4150,"src":"3006:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3020:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3006:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4215,"nodeType":"IfStatement","src":"3002:96:18","trueBody":{"id":4214,"nodeType":"Block","src":"3023:75:18","statements":[{"errorCall":{"arguments":[{"id":4210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4142,"src":"3073:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4211,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"3080:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4209,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"3044:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) pure"}},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3044:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4213,"nodeType":"RevertStatement","src":"3037:50:18"}]}},{"expression":{"arguments":[{"id":4218,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4154,"src":"3121:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3114:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4216,"name":"string","nodeType":"ElementaryTypeName","src":"3114:6:18","typeDescriptions":{}}},"id":4219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3114:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4148,"id":4220,"nodeType":"Return","src":"3107:21:18"}]},"documentation":{"id":4140,"nodeType":"StructuredDocumentation","src":"2493:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":4222,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2619:11:18","nodeType":"FunctionDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4142,"mutability":"mutable","name":"value","nameLocation":"2639:5:18","nodeType":"VariableDeclaration","scope":4222,"src":"2631:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4141,"name":"uint256","nodeType":"ElementaryTypeName","src":"2631:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"length","nameLocation":"2654:6:18","nodeType":"VariableDeclaration","scope":4222,"src":"2646:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4143,"name":"uint256","nodeType":"ElementaryTypeName","src":"2646:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2630:31:18"},"returnParameters":{"id":4148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4222,"src":"2685:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4146,"name":"string","nodeType":"ElementaryTypeName","src":"2685:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2684:15:18"},"scope":5381,"src":"2610:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4241,"nodeType":"Block","src":"3367:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":4235,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"3412:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3404:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4233,"name":"uint160","nodeType":"ElementaryTypeName","src":"3404:7:18","typeDescriptions":{}}},"id":4236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3404:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3396:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4231,"name":"uint256","nodeType":"ElementaryTypeName","src":"3396:7:18","typeDescriptions":{}}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3396:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4238,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3996,"src":"3420:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4230,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4139,4222,4242],"referencedDeclaration":4222,"src":"3384:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":4239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3384:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4229,"id":4240,"nodeType":"Return","src":"3377:58:18"}]},"documentation":{"id":4223,"nodeType":"StructuredDocumentation","src":"3141:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":4242,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"3303:11:18","nodeType":"FunctionDefinition","parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4225,"mutability":"mutable","name":"addr","nameLocation":"3323:4:18","nodeType":"VariableDeclaration","scope":4242,"src":"3315:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4224,"name":"address","nodeType":"ElementaryTypeName","src":"3315:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3314:14:18"},"returnParameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4242,"src":"3352:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4227,"name":"string","nodeType":"ElementaryTypeName","src":"3352:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3351:15:18"},"scope":5381,"src":"3294:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4306,"nodeType":"Block","src":"3699:642:18","statements":[{"assignments":[4251],"declarations":[{"constant":false,"id":4251,"mutability":"mutable","name":"buffer","nameLocation":"3722:6:18","nodeType":"VariableDeclaration","scope":4306,"src":"3709:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4250,"name":"bytes","nodeType":"ElementaryTypeName","src":"3709:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4258,"initialValue":{"arguments":[{"arguments":[{"id":4255,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"3749:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4254,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[4139,4222,4242],"referencedDeclaration":4242,"src":"3737:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":4256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3731:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4252,"name":"bytes","nodeType":"ElementaryTypeName","src":"3731:5:18","typeDescriptions":{}}},"id":4257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3731:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3709:46:18"},{"assignments":[4260],"declarations":[{"constant":false,"id":4260,"mutability":"mutable","name":"hashValue","nameLocation":"3848:9:18","nodeType":"VariableDeclaration","scope":4306,"src":"3840:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4259,"name":"uint256","nodeType":"ElementaryTypeName","src":"3840:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4261,"nodeType":"VariableDeclarationStatement","src":"3840:17:18"},{"AST":{"nodeType":"YulBlock","src":"3892:78:18","statements":[{"nodeType":"YulAssignment","src":"3906:54:18","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3923:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"3941:6:18"},{"kind":"number","nodeType":"YulLiteral","src":"3949:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3937:3:18"},"nodeType":"YulFunctionCall","src":"3937:17:18"},{"kind":"number","nodeType":"YulLiteral","src":"3956:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3927:9:18"},"nodeType":"YulFunctionCall","src":"3927:32:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3919:3:18"},"nodeType":"YulFunctionCall","src":"3919:41:18"},"variableNames":[{"name":"hashValue","nodeType":"YulIdentifier","src":"3906:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":4251,"isOffset":false,"isSlot":false,"src":"3941:6:18","valueSize":1},{"declaration":4260,"isOffset":false,"isSlot":false,"src":"3906:9:18","valueSize":1}],"flags":["memory-safe"],"id":4262,"nodeType":"InlineAssembly","src":"3867:103:18"},{"body":{"id":4299,"nodeType":"Block","src":"4013:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4273,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"4119:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4131:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"4119:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":4276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4137:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"4119:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":4280,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"4148:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4282,"indexExpression":{"id":4281,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"4155:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4148:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4279,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4142:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4278,"name":"uint8","nodeType":"ElementaryTypeName","src":"4142:5:18","typeDescriptions":{}}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4142:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":4284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4161:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"4142:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4119:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4294,"nodeType":"IfStatement","src":"4115:150:18","trueBody":{"id":4293,"nodeType":"Block","src":"4165:100:18","statements":[{"expression":{"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":4287,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"4233:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4289,"indexExpression":{"id":4288,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"4240:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4233:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4246:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"4233:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4292,"nodeType":"ExpressionStatement","src":"4233:17:18"}]}},{"expression":{"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4295,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4260,"src":"4278:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4292:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"4278:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4298,"nodeType":"ExpressionStatement","src":"4278:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"4001:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4005:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4001:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4300,"initializationExpression":{"assignments":[4264],"declarations":[{"constant":false,"id":4264,"mutability":"mutable","name":"i","nameLocation":"3993:1:18","nodeType":"VariableDeclaration","scope":4300,"src":"3985:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4263,"name":"uint256","nodeType":"ElementaryTypeName","src":"3985:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4266,"initialValue":{"hexValue":"3431","id":4265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3997:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3985:14:18"},"loopExpression":{"expression":{"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"4008:3:18","subExpression":{"id":4270,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4264,"src":"4010:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4272,"nodeType":"ExpressionStatement","src":"4008:3:18"},"nodeType":"ForStatement","src":"3980:324:18"},{"expression":{"arguments":[{"id":4303,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"4327:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4320:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":4301,"name":"string","nodeType":"ElementaryTypeName","src":"4320:6:18","typeDescriptions":{}}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4320:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":4249,"id":4305,"nodeType":"Return","src":"4313:21:18"}]},"documentation":{"id":4243,"nodeType":"StructuredDocumentation","src":"3448:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":4307,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"3627:19:18","nodeType":"FunctionDefinition","parameters":{"id":4246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"addr","nameLocation":"3655:4:18","nodeType":"VariableDeclaration","scope":4307,"src":"3647:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4244,"name":"address","nodeType":"ElementaryTypeName","src":"3647:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3646:14:18"},"returnParameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4307,"src":"3684:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4247,"name":"string","nodeType":"ElementaryTypeName","src":"3684:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3683:15:18"},"scope":5381,"src":"3618:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4343,"nodeType":"Block","src":"4496:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4319,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"4519:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4318,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4513:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4317,"name":"bytes","nodeType":"ElementaryTypeName","src":"4513:5:18","typeDescriptions":{}}},"id":4320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4513:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4522:6:18","memberName":"length","nodeType":"MemberAccess","src":"4513:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":4324,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"4538:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4532:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4322,"name":"bytes","nodeType":"ElementaryTypeName","src":"4532:5:18","typeDescriptions":{}}},"id":4325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4532:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4541:6:18","memberName":"length","nodeType":"MemberAccess","src":"4532:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4513:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4331,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4310,"src":"4567:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4561:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4329,"name":"bytes","nodeType":"ElementaryTypeName","src":"4561:5:18","typeDescriptions":{}}},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4561:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4328,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4551:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4551:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":4337,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4312,"src":"4590:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4336,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4584:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4335,"name":"bytes","nodeType":"ElementaryTypeName","src":"4584:5:18","typeDescriptions":{}}},"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4584:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":4334,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4574:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4574:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4551:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4513:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4316,"id":4342,"nodeType":"Return","src":"4506:87:18"}]},"documentation":{"id":4308,"nodeType":"StructuredDocumentation","src":"4347:66:18","text":" @dev Returns true if the two strings are equal."},"id":4344,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"4427:5:18","nodeType":"FunctionDefinition","parameters":{"id":4313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4310,"mutability":"mutable","name":"a","nameLocation":"4447:1:18","nodeType":"VariableDeclaration","scope":4344,"src":"4433:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4309,"name":"string","nodeType":"ElementaryTypeName","src":"4433:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4312,"mutability":"mutable","name":"b","nameLocation":"4464:1:18","nodeType":"VariableDeclaration","scope":4344,"src":"4450:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4311,"name":"string","nodeType":"ElementaryTypeName","src":"4450:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4432:34:18"},"returnParameters":{"id":4316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4315,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4344,"src":"4490:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4314,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4489:6:18"},"scope":5381,"src":"4418:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4362,"nodeType":"Block","src":"4897:64:18","statements":[{"expression":{"arguments":[{"id":4353,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"4924:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4931:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4357,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4347,"src":"4940:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4934:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4355,"name":"bytes","nodeType":"ElementaryTypeName","src":"4934:5:18","typeDescriptions":{}}},"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4934:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4947:6:18","memberName":"length","nodeType":"MemberAccess","src":"4934:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4352,"name":"parseUint","nodeType":"Identifier","overloadedDeclarations":[4363,4394],"referencedDeclaration":4394,"src":"4914:9:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4914:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4351,"id":4361,"nodeType":"Return","src":"4907:47:18"}]},"documentation":{"id":4345,"nodeType":"StructuredDocumentation","src":"4606:214:18","text":" @dev Parse a decimal string and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4363,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"4834:9:18","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4347,"mutability":"mutable","name":"input","nameLocation":"4858:5:18","nodeType":"VariableDeclaration","scope":4363,"src":"4844:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4346,"name":"string","nodeType":"ElementaryTypeName","src":"4844:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4843:21:18"},"returnParameters":{"id":4351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4350,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4363,"src":"4888:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4349,"name":"uint256","nodeType":"ElementaryTypeName","src":"4888:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4887:9:18"},"scope":5381,"src":"4825:136:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4393,"nodeType":"Block","src":"5366:153:18","statements":[{"assignments":[4376,4378],"declarations":[{"constant":false,"id":4376,"mutability":"mutable","name":"success","nameLocation":"5382:7:18","nodeType":"VariableDeclaration","scope":4393,"src":"5377:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4375,"name":"bool","nodeType":"ElementaryTypeName","src":"5377:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4378,"mutability":"mutable","name":"value","nameLocation":"5399:5:18","nodeType":"VariableDeclaration","scope":4393,"src":"5391:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"5391:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4384,"initialValue":{"arguments":[{"id":4380,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4366,"src":"5421:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4381,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"5428:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4382,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4370,"src":"5435:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4379,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4415,4452],"referencedDeclaration":4452,"src":"5408:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4383,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5408:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5376:63:18"},{"condition":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5453:8:18","subExpression":{"id":4385,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4376,"src":"5454:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4390,"nodeType":"IfStatement","src":"5449:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4387,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"5470:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5470:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4389,"nodeType":"RevertStatement","src":"5463:27:18"}},{"expression":{"id":4391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"5507:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4374,"id":4392,"nodeType":"Return","src":"5500:12:18"}]},"documentation":{"id":4364,"nodeType":"StructuredDocumentation","src":"4967:294:18","text":" @dev Variant of {parseUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[0-9]*`\n - The result must fit into an `uint256` type"},"id":4394,"implemented":true,"kind":"function","modifiers":[],"name":"parseUint","nameLocation":"5275:9:18","nodeType":"FunctionDefinition","parameters":{"id":4371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4366,"mutability":"mutable","name":"input","nameLocation":"5299:5:18","nodeType":"VariableDeclaration","scope":4394,"src":"5285:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4365,"name":"string","nodeType":"ElementaryTypeName","src":"5285:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"begin","nameLocation":"5314:5:18","nodeType":"VariableDeclaration","scope":4394,"src":"5306:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"5306:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4370,"mutability":"mutable","name":"end","nameLocation":"5329:3:18","nodeType":"VariableDeclaration","scope":4394,"src":"5321:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4369,"name":"uint256","nodeType":"ElementaryTypeName","src":"5321:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5284:49:18"},"returnParameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4394,"src":"5357:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5356:9:18"},"scope":5381,"src":"5266:253:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4414,"nodeType":"Block","src":"5840:83:18","statements":[{"expression":{"arguments":[{"id":4405,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5886:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4409,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4397,"src":"5902:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5896:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4407,"name":"bytes","nodeType":"ElementaryTypeName","src":"5896:5:18","typeDescriptions":{}}},"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5896:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5909:6:18","memberName":"length","nodeType":"MemberAccess","src":"5896:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4404,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"5857:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5857:59:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4403,"id":4413,"nodeType":"Return","src":"5850:66:18"}]},"documentation":{"id":4395,"nodeType":"StructuredDocumentation","src":"5525:215:18","text":" @dev Variant of {parseUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4415,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"5754:12:18","nodeType":"FunctionDefinition","parameters":{"id":4398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4397,"mutability":"mutable","name":"input","nameLocation":"5781:5:18","nodeType":"VariableDeclaration","scope":4415,"src":"5767:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4396,"name":"string","nodeType":"ElementaryTypeName","src":"5767:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5766:21:18"},"returnParameters":{"id":4403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4400,"mutability":"mutable","name":"success","nameLocation":"5816:7:18","nodeType":"VariableDeclaration","scope":4415,"src":"5811:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4399,"name":"bool","nodeType":"ElementaryTypeName","src":"5811:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4402,"mutability":"mutable","name":"value","nameLocation":"5833:5:18","nodeType":"VariableDeclaration","scope":4415,"src":"5825:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5825:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5810:29:18"},"scope":5381,"src":"5745:178:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4451,"nodeType":"Block","src":"6325:144:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4429,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"6339:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4432,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"6351:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4431,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6345:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4430,"name":"bytes","nodeType":"ElementaryTypeName","src":"6345:5:18","typeDescriptions":{}}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6345:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6358:6:18","memberName":"length","nodeType":"MemberAccess","src":"6345:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6339:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4436,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6368:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4437,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"6376:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6368:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6339:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4444,"nodeType":"IfStatement","src":"6335:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6389:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6396:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4442,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6388:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4428,"id":4443,"nodeType":"Return","src":"6381:17:18"}},{"expression":{"arguments":[{"id":4446,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4418,"src":"6444:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4447,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4420,"src":"6451:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4448,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4422,"src":"6458:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4445,"name":"_tryParseUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4522,"src":"6415:28:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6415:47:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4428,"id":4450,"nodeType":"Return","src":"6408:54:18"}]},"documentation":{"id":4416,"nodeType":"StructuredDocumentation","src":"5929:238:18","text":" @dev Variant of {parseUint-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4452,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseUint","nameLocation":"6181:12:18","nodeType":"FunctionDefinition","parameters":{"id":4423,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4418,"mutability":"mutable","name":"input","nameLocation":"6217:5:18","nodeType":"VariableDeclaration","scope":4452,"src":"6203:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4417,"name":"string","nodeType":"ElementaryTypeName","src":"6203:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4420,"mutability":"mutable","name":"begin","nameLocation":"6240:5:18","nodeType":"VariableDeclaration","scope":4452,"src":"6232:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4419,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4422,"mutability":"mutable","name":"end","nameLocation":"6263:3:18","nodeType":"VariableDeclaration","scope":4452,"src":"6255:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4421,"name":"uint256","nodeType":"ElementaryTypeName","src":"6255:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6193:79:18"},"returnParameters":{"id":4428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4425,"mutability":"mutable","name":"success","nameLocation":"6301:7:18","nodeType":"VariableDeclaration","scope":4452,"src":"6296:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4424,"name":"bool","nodeType":"ElementaryTypeName","src":"6296:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4427,"mutability":"mutable","name":"value","nameLocation":"6318:5:18","nodeType":"VariableDeclaration","scope":4452,"src":"6310:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"6310:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6295:29:18"},"scope":5381,"src":"6172:297:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4521,"nodeType":"Block","src":"6872:347:18","statements":[{"assignments":[4467],"declarations":[{"constant":false,"id":4467,"mutability":"mutable","name":"buffer","nameLocation":"6895:6:18","nodeType":"VariableDeclaration","scope":4521,"src":"6882:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4466,"name":"bytes","nodeType":"ElementaryTypeName","src":"6882:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4472,"initialValue":{"arguments":[{"id":4470,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"6910:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6904:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4468,"name":"bytes","nodeType":"ElementaryTypeName","src":"6904:5:18","typeDescriptions":{}}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6904:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"6882:34:18"},{"assignments":[4474],"declarations":[{"constant":false,"id":4474,"mutability":"mutable","name":"result","nameLocation":"6935:6:18","nodeType":"VariableDeclaration","scope":4521,"src":"6927:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"6927:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4476,"initialValue":{"hexValue":"30","id":4475,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6944:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6927:18:18"},{"body":{"id":4515,"nodeType":"Block","src":"6993:189:18","statements":[{"assignments":[4488],"declarations":[{"constant":false,"id":4488,"mutability":"mutable","name":"chr","nameLocation":"7013:3:18","nodeType":"VariableDeclaration","scope":4515,"src":"7007:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4487,"name":"uint8","nodeType":"ElementaryTypeName","src":"7007:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4498,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4493,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4467,"src":"7062:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4494,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"7070:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4492,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"7039:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7039:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4491,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7032:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4490,"name":"bytes1","nodeType":"ElementaryTypeName","src":"7032:6:18","typeDescriptions":{}}},"id":4496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7032:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4489,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"7019:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7019:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"7007:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4499,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"7092:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"39","id":4500,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7098:1:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"7092:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4506,"nodeType":"IfStatement","src":"7088:30:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7109:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7116:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4504,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"7108:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4465,"id":4505,"nodeType":"Return","src":"7101:17:18"}},{"expression":{"id":4509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4507,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"7132:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3130","id":4508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7142:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"7132:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4510,"nodeType":"ExpressionStatement","src":"7132:12:18"},{"expression":{"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4511,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"7158:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4512,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4488,"src":"7168:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"7158:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4514,"nodeType":"ExpressionStatement","src":"7158:13:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4481,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"6979:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4482,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"6983:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6979:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4516,"initializationExpression":{"assignments":[4478],"declarations":[{"constant":false,"id":4478,"mutability":"mutable","name":"i","nameLocation":"6968:1:18","nodeType":"VariableDeclaration","scope":4516,"src":"6960:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4477,"name":"uint256","nodeType":"ElementaryTypeName","src":"6960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4480,"initialValue":{"id":4479,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4457,"src":"6972:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6960:17:18"},"loopExpression":{"expression":{"id":4485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"6988:3:18","subExpression":{"id":4484,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4478,"src":"6990:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4486,"nodeType":"ExpressionStatement","src":"6988:3:18"},"nodeType":"ForStatement","src":"6955:227:18"},{"expression":{"components":[{"hexValue":"74727565","id":4517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7199:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4518,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4474,"src":"7205:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4519,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7198:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4465,"id":4520,"nodeType":"Return","src":"7191:21:18"}]},"documentation":{"id":4453,"nodeType":"StructuredDocumentation","src":"6475:224:18","text":" @dev Implementation of {tryParseUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseUintUncheckedBounds","nameLocation":"6713:28:18","nodeType":"FunctionDefinition","parameters":{"id":4460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4455,"mutability":"mutable","name":"input","nameLocation":"6765:5:18","nodeType":"VariableDeclaration","scope":4522,"src":"6751:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4454,"name":"string","nodeType":"ElementaryTypeName","src":"6751:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4457,"mutability":"mutable","name":"begin","nameLocation":"6788:5:18","nodeType":"VariableDeclaration","scope":4522,"src":"6780:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4456,"name":"uint256","nodeType":"ElementaryTypeName","src":"6780:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4459,"mutability":"mutable","name":"end","nameLocation":"6811:3:18","nodeType":"VariableDeclaration","scope":4522,"src":"6803:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4458,"name":"uint256","nodeType":"ElementaryTypeName","src":"6803:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6741:79:18"},"returnParameters":{"id":4465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4462,"mutability":"mutable","name":"success","nameLocation":"6848:7:18","nodeType":"VariableDeclaration","scope":4522,"src":"6843:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4461,"name":"bool","nodeType":"ElementaryTypeName","src":"6843:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4464,"mutability":"mutable","name":"value","nameLocation":"6865:5:18","nodeType":"VariableDeclaration","scope":4522,"src":"6857:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4463,"name":"uint256","nodeType":"ElementaryTypeName","src":"6857:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6842:29:18"},"scope":5381,"src":"6704:515:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4540,"nodeType":"Block","src":"7516:63:18","statements":[{"expression":{"arguments":[{"id":4531,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"7542:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7549:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4535,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4525,"src":"7558:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7552:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4533,"name":"bytes","nodeType":"ElementaryTypeName","src":"7552:5:18","typeDescriptions":{}}},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7565:6:18","memberName":"length","nodeType":"MemberAccess","src":"7552:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4530,"name":"parseInt","nodeType":"Identifier","overloadedDeclarations":[4541,4572],"referencedDeclaration":4572,"src":"7533:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (int256)"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7533:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4529,"id":4539,"nodeType":"Return","src":"7526:46:18"}]},"documentation":{"id":4523,"nodeType":"StructuredDocumentation","src":"7225:216:18","text":" @dev Parse a decimal string and returns the value as a `int256`.\n Requirements:\n - The string must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4541,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7455:8:18","nodeType":"FunctionDefinition","parameters":{"id":4526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4525,"mutability":"mutable","name":"input","nameLocation":"7478:5:18","nodeType":"VariableDeclaration","scope":4541,"src":"7464:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4524,"name":"string","nodeType":"ElementaryTypeName","src":"7464:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7463:21:18"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4541,"src":"7508:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4527,"name":"int256","nodeType":"ElementaryTypeName","src":"7508:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7507:8:18"},"scope":5381,"src":"7446:133:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4571,"nodeType":"Block","src":"7984:151:18","statements":[{"assignments":[4554,4556],"declarations":[{"constant":false,"id":4554,"mutability":"mutable","name":"success","nameLocation":"8000:7:18","nodeType":"VariableDeclaration","scope":4571,"src":"7995:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4553,"name":"bool","nodeType":"ElementaryTypeName","src":"7995:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4556,"mutability":"mutable","name":"value","nameLocation":"8016:5:18","nodeType":"VariableDeclaration","scope":4571,"src":"8009:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4555,"name":"int256","nodeType":"ElementaryTypeName","src":"8009:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":4562,"initialValue":{"arguments":[{"id":4558,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4544,"src":"8037:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4559,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"8044:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4560,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"8051:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4557,"name":"tryParseInt","nodeType":"Identifier","overloadedDeclarations":[4593,4635],"referencedDeclaration":4635,"src":"8025:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8025:30:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"nodeType":"VariableDeclarationStatement","src":"7994:61:18"},{"condition":{"id":4564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8069:8:18","subExpression":{"id":4563,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4554,"src":"8070:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4568,"nodeType":"IfStatement","src":"8065:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4565,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"8086:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8086:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4567,"nodeType":"RevertStatement","src":"8079:27:18"}},{"expression":{"id":4569,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4556,"src":"8123:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":4552,"id":4570,"nodeType":"Return","src":"8116:12:18"}]},"documentation":{"id":4542,"nodeType":"StructuredDocumentation","src":"7585:296:18","text":" @dev Variant of {parseInt-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `[-+]?[0-9]*`\n - The result must fit in an `int256` type."},"id":4572,"implemented":true,"kind":"function","modifiers":[],"name":"parseInt","nameLocation":"7895:8:18","nodeType":"FunctionDefinition","parameters":{"id":4549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4544,"mutability":"mutable","name":"input","nameLocation":"7918:5:18","nodeType":"VariableDeclaration","scope":4572,"src":"7904:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4543,"name":"string","nodeType":"ElementaryTypeName","src":"7904:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4546,"mutability":"mutable","name":"begin","nameLocation":"7933:5:18","nodeType":"VariableDeclaration","scope":4572,"src":"7925:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4545,"name":"uint256","nodeType":"ElementaryTypeName","src":"7925:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4548,"mutability":"mutable","name":"end","nameLocation":"7948:3:18","nodeType":"VariableDeclaration","scope":4572,"src":"7940:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4547,"name":"uint256","nodeType":"ElementaryTypeName","src":"7940:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7903:49:18"},"returnParameters":{"id":4552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4572,"src":"7976:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4550,"name":"int256","nodeType":"ElementaryTypeName","src":"7976:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"7975:8:18"},"scope":5381,"src":"7886:249:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4592,"nodeType":"Block","src":"8526:82:18","statements":[{"expression":{"arguments":[{"id":4583,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"8571:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8578:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4587,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4575,"src":"8587:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8581:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4585,"name":"bytes","nodeType":"ElementaryTypeName","src":"8581:5:18","typeDescriptions":{}}},"id":4588,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8581:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8594:6:18","memberName":"length","nodeType":"MemberAccess","src":"8581:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4582,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"8543:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8543:58:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4581,"id":4591,"nodeType":"Return","src":"8536:65:18"}]},"documentation":{"id":4573,"nodeType":"StructuredDocumentation","src":"8141:287:18","text":" @dev Variant of {parseInt-string} that returns false if the parsing fails because of an invalid character or if\n the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4593,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8442:11:18","nodeType":"FunctionDefinition","parameters":{"id":4576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4575,"mutability":"mutable","name":"input","nameLocation":"8468:5:18","nodeType":"VariableDeclaration","scope":4593,"src":"8454:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4574,"name":"string","nodeType":"ElementaryTypeName","src":"8454:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8453:21:18"},"returnParameters":{"id":4581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4578,"mutability":"mutable","name":"success","nameLocation":"8503:7:18","nodeType":"VariableDeclaration","scope":4593,"src":"8498:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4577,"name":"bool","nodeType":"ElementaryTypeName","src":"8498:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4580,"mutability":"mutable","name":"value","nameLocation":"8519:5:18","nodeType":"VariableDeclaration","scope":4593,"src":"8512:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4579,"name":"int256","nodeType":"ElementaryTypeName","src":"8512:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"8497:28:18"},"scope":5381,"src":"8433:175:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"constant":true,"id":4598,"mutability":"constant","name":"ABS_MIN_INT256","nameLocation":"8639:14:18","nodeType":"VariableDeclaration","scope":5381,"src":"8614:50:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"8614:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"commonType":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"},"id":4597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4595,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8656:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323535","id":4596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8661:3:18","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"8656:8:18","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1","typeString":"int_const 5789...(69 digits omitted)...9968"}},"visibility":"private"},{"body":{"id":4634,"nodeType":"Block","src":"9130:143:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4612,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9144:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4615,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"9156:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4614,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9150:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4613,"name":"bytes","nodeType":"ElementaryTypeName","src":"9150:5:18","typeDescriptions":{}}},"id":4616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9150:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9163:6:18","memberName":"length","nodeType":"MemberAccess","src":"9150:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9144:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4619,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"9173:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4620,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9181:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9173:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9144:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4627,"nodeType":"IfStatement","src":"9140:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9194:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9201:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4625,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"9193:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4611,"id":4626,"nodeType":"Return","src":"9186:17:18"}},{"expression":{"arguments":[{"id":4629,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4601,"src":"9248:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4630,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4603,"src":"9255:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4631,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4605,"src":"9262:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4628,"name":"_tryParseIntUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"9220:27:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_int256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,int256)"}},"id":4632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9220:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4611,"id":4633,"nodeType":"Return","src":"9213:53:18"}]},"documentation":{"id":4599,"nodeType":"StructuredDocumentation","src":"8671:303:18","text":" @dev Variant of {parseInt-string-uint256-uint256} that returns false if the parsing fails because of an invalid\n character or if the result does not fit in a `int256`.\n NOTE: This function will revert if the absolute value of the result does not fit in a `uint256`."},"id":4635,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseInt","nameLocation":"8988:11:18","nodeType":"FunctionDefinition","parameters":{"id":4606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4601,"mutability":"mutable","name":"input","nameLocation":"9023:5:18","nodeType":"VariableDeclaration","scope":4635,"src":"9009:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4600,"name":"string","nodeType":"ElementaryTypeName","src":"9009:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4603,"mutability":"mutable","name":"begin","nameLocation":"9046:5:18","nodeType":"VariableDeclaration","scope":4635,"src":"9038:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4602,"name":"uint256","nodeType":"ElementaryTypeName","src":"9038:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4605,"mutability":"mutable","name":"end","nameLocation":"9069:3:18","nodeType":"VariableDeclaration","scope":4635,"src":"9061:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4604,"name":"uint256","nodeType":"ElementaryTypeName","src":"9061:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8999:79:18"},"returnParameters":{"id":4611,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4608,"mutability":"mutable","name":"success","nameLocation":"9107:7:18","nodeType":"VariableDeclaration","scope":4635,"src":"9102:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4607,"name":"bool","nodeType":"ElementaryTypeName","src":"9102:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4610,"mutability":"mutable","name":"value","nameLocation":"9123:5:18","nodeType":"VariableDeclaration","scope":4635,"src":"9116:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4609,"name":"int256","nodeType":"ElementaryTypeName","src":"9116:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9101:28:18"},"scope":5381,"src":"8979:294:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4755,"nodeType":"Block","src":"9673:812:18","statements":[{"assignments":[4650],"declarations":[{"constant":false,"id":4650,"mutability":"mutable","name":"buffer","nameLocation":"9696:6:18","nodeType":"VariableDeclaration","scope":4755,"src":"9683:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4649,"name":"bytes","nodeType":"ElementaryTypeName","src":"9683:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4655,"initialValue":{"arguments":[{"id":4653,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"9711:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9705:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4651,"name":"bytes","nodeType":"ElementaryTypeName","src":"9705:5:18","typeDescriptions":{}}},"id":4654,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9705:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"9683:34:18"},{"assignments":[4657],"declarations":[{"constant":false,"id":4657,"mutability":"mutable","name":"sign","nameLocation":"9781:4:18","nodeType":"VariableDeclaration","scope":4755,"src":"9774:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":4656,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9774:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":4673,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"9788:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4659,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"9797:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9788:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":4668,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4650,"src":"9845:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4669,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"9853:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4667,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"9822:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9822:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9815:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4665,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9815:6:18","typeDescriptions":{}}},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9815:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9788:72:18","trueExpression":{"arguments":[{"hexValue":"30","id":4663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9810:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9803:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4661,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9803:6:18","typeDescriptions":{}}},"id":4664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9803:9:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"9774:86:18"},{"assignments":[4675],"declarations":[{"constant":false,"id":4675,"mutability":"mutable","name":"positiveSign","nameLocation":"9946:12:18","nodeType":"VariableDeclaration","scope":4755,"src":"9941:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4674,"name":"bool","nodeType":"ElementaryTypeName","src":"9941:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4682,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"9961:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2b","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9976:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""},"value":"+"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_728b8dbbe730d9acd55e30e768e6a28a04bea0c61b88108287c2c87d79c98bb8","typeString":"literal_string \"+\""}],"id":4678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9969:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4677,"name":"bytes1","nodeType":"ElementaryTypeName","src":"9969:6:18","typeDescriptions":{}}},"id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9969:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"9961:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9941:39:18"},{"assignments":[4684],"declarations":[{"constant":false,"id":4684,"mutability":"mutable","name":"negativeSign","nameLocation":"9995:12:18","nodeType":"VariableDeclaration","scope":4755,"src":"9990:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4683,"name":"bool","nodeType":"ElementaryTypeName","src":"9990:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4691,"initialValue":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4685,"name":"sign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4657,"src":"10010:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"2d","id":4688,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10025:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""}],"id":4687,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10018:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4686,"name":"bytes1","nodeType":"ElementaryTypeName","src":"10018:6:18","typeDescriptions":{}}},"id":4689,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10018:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"10010:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"9990:39:18"},{"assignments":[4693],"declarations":[{"constant":false,"id":4693,"mutability":"mutable","name":"offset","nameLocation":"10047:6:18","nodeType":"VariableDeclaration","scope":4755,"src":"10039:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"10039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4700,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4694,"name":"positiveSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4675,"src":"10057:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":4695,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10073:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10057:28:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10056:30:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10087:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"10056:37:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10056:39:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10039:56:18"},{"assignments":[4702,4704],"declarations":[{"constant":false,"id":4702,"mutability":"mutable","name":"absSuccess","nameLocation":"10112:10:18","nodeType":"VariableDeclaration","scope":4755,"src":"10107:15:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4701,"name":"bool","nodeType":"ElementaryTypeName","src":"10107:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4704,"mutability":"mutable","name":"absValue","nameLocation":"10132:8:18","nodeType":"VariableDeclaration","scope":4755,"src":"10124:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4703,"name":"uint256","nodeType":"ElementaryTypeName","src":"10124:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4712,"initialValue":{"arguments":[{"id":4706,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4638,"src":"10157:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4640,"src":"10164:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4708,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"10172:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10164:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4710,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4642,"src":"10180:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4705,"name":"tryParseUint","nodeType":"Identifier","overloadedDeclarations":[4415,4452],"referencedDeclaration":4452,"src":"10144:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10144:40:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"10106:78:18"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4713,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"10199:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4714,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10213:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4715,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"10224:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10213:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10199:39:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4733,"name":"absSuccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4702,"src":"10341:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":4734,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10355:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4736,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10371:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4737,"name":"ABS_MIN_INT256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4598,"src":"10383:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10371:26:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10341:56:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10469:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10476:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4751,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10468:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4648,"id":4752,"nodeType":"Return","src":"10461:17:18"},"id":4753,"nodeType":"IfStatement","src":"10337:141:18","trueBody":{"id":4748,"nodeType":"Block","src":"10399:56:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4740,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10421:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"expression":{"arguments":[{"id":4743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10432:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4742,"name":"int256","nodeType":"ElementaryTypeName","src":"10432:6:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":4741,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10427:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10427:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10440:3:18","memberName":"min","nodeType":"MemberAccess","src":"10427:16:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"10420:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4648,"id":4747,"nodeType":"Return","src":"10413:31:18"}]}},"id":4754,"nodeType":"IfStatement","src":"10195:283:18","trueBody":{"id":4732,"nodeType":"Block","src":"10240:91:18","statements":[{"expression":{"components":[{"hexValue":"74727565","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10262:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"condition":{"id":4719,"name":"negativeSign","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4684,"src":"10268:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":4727,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10310:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4726,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10303:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4725,"name":"int256","nodeType":"ElementaryTypeName","src":"10303:6:18","typeDescriptions":{}}},"id":4728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10303:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4729,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10268:51:18","trueExpression":{"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"10283:17:18","subExpression":{"arguments":[{"id":4722,"name":"absValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4704,"src":"10291:8:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4721,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10284:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":4720,"name":"int256","nodeType":"ElementaryTypeName","src":"10284:6:18","typeDescriptions":{}}},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10284:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":4730,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10261:59:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_int256_$","typeString":"tuple(bool,int256)"}},"functionReturnParameters":4648,"id":4731,"nodeType":"Return","src":"10254:66:18"}]}}]},"documentation":{"id":4636,"nodeType":"StructuredDocumentation","src":"9279:223:18","text":" @dev Implementation of {tryParseInt-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4756,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseIntUncheckedBounds","nameLocation":"9516:27:18","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4638,"mutability":"mutable","name":"input","nameLocation":"9567:5:18","nodeType":"VariableDeclaration","scope":4756,"src":"9553:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4637,"name":"string","nodeType":"ElementaryTypeName","src":"9553:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4640,"mutability":"mutable","name":"begin","nameLocation":"9590:5:18","nodeType":"VariableDeclaration","scope":4756,"src":"9582:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4639,"name":"uint256","nodeType":"ElementaryTypeName","src":"9582:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4642,"mutability":"mutable","name":"end","nameLocation":"9613:3:18","nodeType":"VariableDeclaration","scope":4756,"src":"9605:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4641,"name":"uint256","nodeType":"ElementaryTypeName","src":"9605:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9543:79:18"},"returnParameters":{"id":4648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"success","nameLocation":"9650:7:18","nodeType":"VariableDeclaration","scope":4756,"src":"9645:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4644,"name":"bool","nodeType":"ElementaryTypeName","src":"9645:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"value","nameLocation":"9666:5:18","nodeType":"VariableDeclaration","scope":4756,"src":"9659:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4646,"name":"int256","nodeType":"ElementaryTypeName","src":"9659:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"9644:28:18"},"scope":5381,"src":"9507:978:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4774,"nodeType":"Block","src":"10830:67:18","statements":[{"expression":{"arguments":[{"id":4765,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"10860:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4766,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10867:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4769,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4759,"src":"10876:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10870:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4767,"name":"bytes","nodeType":"ElementaryTypeName","src":"10870:5:18","typeDescriptions":{}}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10870:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10883:6:18","memberName":"length","nodeType":"MemberAccess","src":"10870:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4764,"name":"parseHexUint","nodeType":"Identifier","overloadedDeclarations":[4775,4806],"referencedDeclaration":4806,"src":"10847:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (uint256)"}},"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10847:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4763,"id":4773,"nodeType":"Return","src":"10840:50:18"}]},"documentation":{"id":4757,"nodeType":"StructuredDocumentation","src":"10491:259:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as a `uint256`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4775,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"10764:12:18","nodeType":"FunctionDefinition","parameters":{"id":4760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4759,"mutability":"mutable","name":"input","nameLocation":"10791:5:18","nodeType":"VariableDeclaration","scope":4775,"src":"10777:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4758,"name":"string","nodeType":"ElementaryTypeName","src":"10777:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"10776:21:18"},"returnParameters":{"id":4763,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4762,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4775,"src":"10821:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4761,"name":"uint256","nodeType":"ElementaryTypeName","src":"10821:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10820:9:18"},"scope":5381,"src":"10755:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4805,"nodeType":"Block","src":"11318:156:18","statements":[{"assignments":[4788,4790],"declarations":[{"constant":false,"id":4788,"mutability":"mutable","name":"success","nameLocation":"11334:7:18","nodeType":"VariableDeclaration","scope":4805,"src":"11329:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4787,"name":"bool","nodeType":"ElementaryTypeName","src":"11329:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4790,"mutability":"mutable","name":"value","nameLocation":"11351:5:18","nodeType":"VariableDeclaration","scope":4805,"src":"11343:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4789,"name":"uint256","nodeType":"ElementaryTypeName","src":"11343:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4796,"initialValue":{"arguments":[{"id":4792,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4778,"src":"11376:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4793,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4780,"src":"11383:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4794,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4782,"src":"11390:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4791,"name":"tryParseHexUint","nodeType":"Identifier","overloadedDeclarations":[4827,4864],"referencedDeclaration":4864,"src":"11360:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11360:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11328:66:18"},{"condition":{"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11408:8:18","subExpression":{"id":4797,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4788,"src":"11409:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4802,"nodeType":"IfStatement","src":"11404:41:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":4799,"name":"StringsInvalidChar","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4042,"src":"11425:18:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11425:20:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4801,"nodeType":"RevertStatement","src":"11418:27:18"}},{"expression":{"id":4803,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4790,"src":"11462:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4786,"id":4804,"nodeType":"Return","src":"11455:12:18"}]},"documentation":{"id":4776,"nodeType":"StructuredDocumentation","src":"10903:307:18","text":" @dev Variant of {parseHexUint-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]*`\n - The result must fit in an `uint256` type."},"id":4806,"implemented":true,"kind":"function","modifiers":[],"name":"parseHexUint","nameLocation":"11224:12:18","nodeType":"FunctionDefinition","parameters":{"id":4783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4778,"mutability":"mutable","name":"input","nameLocation":"11251:5:18","nodeType":"VariableDeclaration","scope":4806,"src":"11237:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4777,"name":"string","nodeType":"ElementaryTypeName","src":"11237:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4780,"mutability":"mutable","name":"begin","nameLocation":"11266:5:18","nodeType":"VariableDeclaration","scope":4806,"src":"11258:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4779,"name":"uint256","nodeType":"ElementaryTypeName","src":"11258:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4782,"mutability":"mutable","name":"end","nameLocation":"11281:3:18","nodeType":"VariableDeclaration","scope":4806,"src":"11273:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4781,"name":"uint256","nodeType":"ElementaryTypeName","src":"11273:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11236:49:18"},"returnParameters":{"id":4786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4785,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4806,"src":"11309:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"11309:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11308:9:18"},"scope":5381,"src":"11215:259:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4826,"nodeType":"Block","src":"11801:86:18","statements":[{"expression":{"arguments":[{"id":4817,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"11850:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11857:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4821,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4809,"src":"11866:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11860:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4819,"name":"bytes","nodeType":"ElementaryTypeName","src":"11860:5:18","typeDescriptions":{}}},"id":4822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11860:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11873:6:18","memberName":"length","nodeType":"MemberAccess","src":"11860:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4816,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"11818:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4824,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11818:62:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4815,"id":4825,"nodeType":"Return","src":"11811:69:18"}]},"documentation":{"id":4807,"nodeType":"StructuredDocumentation","src":"11480:218:18","text":" @dev Variant of {parseHexUint-string} that returns false if the parsing fails because of an invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4827,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"11712:15:18","nodeType":"FunctionDefinition","parameters":{"id":4810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4809,"mutability":"mutable","name":"input","nameLocation":"11742:5:18","nodeType":"VariableDeclaration","scope":4827,"src":"11728:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4808,"name":"string","nodeType":"ElementaryTypeName","src":"11728:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11727:21:18"},"returnParameters":{"id":4815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4812,"mutability":"mutable","name":"success","nameLocation":"11777:7:18","nodeType":"VariableDeclaration","scope":4827,"src":"11772:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4811,"name":"bool","nodeType":"ElementaryTypeName","src":"11772:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4814,"mutability":"mutable","name":"value","nameLocation":"11794:5:18","nodeType":"VariableDeclaration","scope":4827,"src":"11786:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4813,"name":"uint256","nodeType":"ElementaryTypeName","src":"11786:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11771:29:18"},"scope":5381,"src":"11703:184:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4863,"nodeType":"Block","src":"12295:147:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4841,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"12309:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4844,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"12321:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4843,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12315:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4842,"name":"bytes","nodeType":"ElementaryTypeName","src":"12315:5:18","typeDescriptions":{}}},"id":4845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12315:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4846,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12328:6:18","memberName":"length","nodeType":"MemberAccess","src":"12315:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12309:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4850,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4848,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"12338:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":4849,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"12346:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12338:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12309:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4856,"nodeType":"IfStatement","src":"12305:63:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12359:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4853,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12366:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4854,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"12358:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4840,"id":4855,"nodeType":"Return","src":"12351:17:18"}},{"expression":{"arguments":[{"id":4858,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4830,"src":"12417:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":4859,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4832,"src":"12424:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4860,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4834,"src":"12431:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4857,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"12385:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":4861,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12385:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4840,"id":4862,"nodeType":"Return","src":"12378:57:18"}]},"documentation":{"id":4828,"nodeType":"StructuredDocumentation","src":"11893:241:18","text":" @dev Variant of {parseHexUint-string-uint256-uint256} that returns false if the parsing fails because of an\n invalid character.\n NOTE: This function will revert if the result does not fit in a `uint256`."},"id":4864,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseHexUint","nameLocation":"12148:15:18","nodeType":"FunctionDefinition","parameters":{"id":4835,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4830,"mutability":"mutable","name":"input","nameLocation":"12187:5:18","nodeType":"VariableDeclaration","scope":4864,"src":"12173:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4829,"name":"string","nodeType":"ElementaryTypeName","src":"12173:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4832,"mutability":"mutable","name":"begin","nameLocation":"12210:5:18","nodeType":"VariableDeclaration","scope":4864,"src":"12202:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4831,"name":"uint256","nodeType":"ElementaryTypeName","src":"12202:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4834,"mutability":"mutable","name":"end","nameLocation":"12233:3:18","nodeType":"VariableDeclaration","scope":4864,"src":"12225:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4833,"name":"uint256","nodeType":"ElementaryTypeName","src":"12225:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12163:79:18"},"returnParameters":{"id":4840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4837,"mutability":"mutable","name":"success","nameLocation":"12271:7:18","nodeType":"VariableDeclaration","scope":4864,"src":"12266:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4836,"name":"bool","nodeType":"ElementaryTypeName","src":"12266:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4839,"mutability":"mutable","name":"value","nameLocation":"12288:5:18","nodeType":"VariableDeclaration","scope":4864,"src":"12280:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4838,"name":"uint256","nodeType":"ElementaryTypeName","src":"12280:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12265:29:18"},"scope":5381,"src":"12139:303:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4966,"nodeType":"Block","src":"12851:881:18","statements":[{"assignments":[4879],"declarations":[{"constant":false,"id":4879,"mutability":"mutable","name":"buffer","nameLocation":"12874:6:18","nodeType":"VariableDeclaration","scope":4966,"src":"12861:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":4878,"name":"bytes","nodeType":"ElementaryTypeName","src":"12861:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":4884,"initialValue":{"arguments":[{"id":4882,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"12889:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4881,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12883:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4880,"name":"bytes","nodeType":"ElementaryTypeName","src":"12883:5:18","typeDescriptions":{}}},"id":4883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12883:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"12861:34:18"},{"assignments":[4886],"declarations":[{"constant":false,"id":4886,"mutability":"mutable","name":"hasPrefix","nameLocation":"12948:9:18","nodeType":"VariableDeclaration","scope":4966,"src":"12943:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4885,"name":"bool","nodeType":"ElementaryTypeName","src":"12943:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":4906,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4887,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"12961:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4888,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"12967:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":4889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12975:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12967:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12961:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4892,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12960:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4896,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13011:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4897,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"13019:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4895,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"12988:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12988:37:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12981:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4893,"name":"bytes2","nodeType":"ElementaryTypeName","src":"12981:6:18","typeDescriptions":{}}},"id":4899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12981:45:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":4902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13037:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":4901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13030:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":4900,"name":"bytes2","nodeType":"ElementaryTypeName","src":"13030:6:18","typeDescriptions":{}}},"id":4903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13030:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"12981:61:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12960:82:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"12943:99:18"},{"assignments":[4908],"declarations":[{"constant":false,"id":4908,"mutability":"mutable","name":"offset","nameLocation":"13131:6:18","nodeType":"VariableDeclaration","scope":4966,"src":"13123:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4907,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4914,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4909,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4886,"src":"13140:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13150:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"13140:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13140:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4912,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13161:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"13140:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13123:39:18"},{"assignments":[4916],"declarations":[{"constant":false,"id":4916,"mutability":"mutable","name":"result","nameLocation":"13181:6:18","nodeType":"VariableDeclaration","scope":4966,"src":"13173:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4915,"name":"uint256","nodeType":"ElementaryTypeName","src":"13173:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4918,"initialValue":{"hexValue":"30","id":4917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13190:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13173:18:18"},{"body":{"id":4960,"nodeType":"Block","src":"13248:447:18","statements":[{"assignments":[4932],"declarations":[{"constant":false,"id":4932,"mutability":"mutable","name":"chr","nameLocation":"13268:3:18","nodeType":"VariableDeclaration","scope":4960,"src":"13262:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4931,"name":"uint8","nodeType":"ElementaryTypeName","src":"13262:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":4942,"initialValue":{"arguments":[{"arguments":[{"arguments":[{"id":4937,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4879,"src":"13317:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4938,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"13325:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4936,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"13294:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13294:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13287:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":4934,"name":"bytes1","nodeType":"ElementaryTypeName","src":"13287:6:18","typeDescriptions":{}}},"id":4940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13287:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":4933,"name":"_tryParseChr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"13274:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes1_$returns$_t_uint8_$","typeString":"function (bytes1) pure returns (uint8)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13274:55:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"13262:67:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4943,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"13347:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3135","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13353:2:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"15"},"src":"13347:8:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4950,"nodeType":"IfStatement","src":"13343:31:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":4946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13365:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":4947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13372:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":4948,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13364:10:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":4877,"id":4949,"nodeType":"Return","src":"13357:17:18"}},{"expression":{"id":4953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"13388:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"hexValue":"3136","id":4952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13398:2:18","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"13388:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4954,"nodeType":"ExpressionStatement","src":"13388:12:18"},{"id":4959,"nodeType":"UncheckedBlock","src":"13414:271:18","statements":[{"expression":{"id":4957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4955,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"13657:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4956,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4932,"src":"13667:3:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"13657:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4958,"nodeType":"ExpressionStatement","src":"13657:13:18"}]}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4925,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"13234:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4926,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"13238:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13234:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4961,"initializationExpression":{"assignments":[4920],"declarations":[{"constant":false,"id":4920,"mutability":"mutable","name":"i","nameLocation":"13214:1:18","nodeType":"VariableDeclaration","scope":4961,"src":"13206:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4919,"name":"uint256","nodeType":"ElementaryTypeName","src":"13206:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4924,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4921,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4869,"src":"13218:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4922,"name":"offset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4908,"src":"13226:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13218:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13206:26:18"},"loopExpression":{"expression":{"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"13243:3:18","subExpression":{"id":4928,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4920,"src":"13245:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"nodeType":"ExpressionStatement","src":"13243:3:18"},"nodeType":"ForStatement","src":"13201:494:18"},{"expression":{"components":[{"hexValue":"74727565","id":4962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13712:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":4963,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4916,"src":"13718:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13711:14:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":4877,"id":4965,"nodeType":"Return","src":"13704:21:18"}]},"documentation":{"id":4865,"nodeType":"StructuredDocumentation","src":"12448:227:18","text":" @dev Implementation of {tryParseHexUint-string-uint256-uint256} that does not check bounds. Caller should make sure that\n `begin <= end <= input.length`. Other inputs would result in undefined behavior."},"id":4967,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseHexUintUncheckedBounds","nameLocation":"12689:31:18","nodeType":"FunctionDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4867,"mutability":"mutable","name":"input","nameLocation":"12744:5:18","nodeType":"VariableDeclaration","scope":4967,"src":"12730:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4866,"name":"string","nodeType":"ElementaryTypeName","src":"12730:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4869,"mutability":"mutable","name":"begin","nameLocation":"12767:5:18","nodeType":"VariableDeclaration","scope":4967,"src":"12759:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4868,"name":"uint256","nodeType":"ElementaryTypeName","src":"12759:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4871,"mutability":"mutable","name":"end","nameLocation":"12790:3:18","nodeType":"VariableDeclaration","scope":4967,"src":"12782:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4870,"name":"uint256","nodeType":"ElementaryTypeName","src":"12782:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12720:79:18"},"returnParameters":{"id":4877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4874,"mutability":"mutable","name":"success","nameLocation":"12827:7:18","nodeType":"VariableDeclaration","scope":4967,"src":"12822:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4873,"name":"bool","nodeType":"ElementaryTypeName","src":"12822:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4876,"mutability":"mutable","name":"value","nameLocation":"12844:5:18","nodeType":"VariableDeclaration","scope":4967,"src":"12836:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4875,"name":"uint256","nodeType":"ElementaryTypeName","src":"12836:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12821:29:18"},"scope":5381,"src":"12680:1052:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4985,"nodeType":"Block","src":"14030:67:18","statements":[{"expression":{"arguments":[{"id":4976,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"14060:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":4977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14067:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":4980,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4970,"src":"14076:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":4979,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14070:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4978,"name":"bytes","nodeType":"ElementaryTypeName","src":"14070:5:18","typeDescriptions":{}}},"id":4981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14070:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14083:6:18","memberName":"length","nodeType":"MemberAccess","src":"14070:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4975,"name":"parseAddress","nodeType":"Identifier","overloadedDeclarations":[4986,5017],"referencedDeclaration":5017,"src":"14047:12:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (address)"}},"id":4983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14047:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4974,"id":4984,"nodeType":"Return","src":"14040:50:18"}]},"documentation":{"id":4968,"nodeType":"StructuredDocumentation","src":"13738:212:18","text":" @dev Parse a hexadecimal string (with or without \"0x\" prefix), and returns the value as an `address`.\n Requirements:\n - The string must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":4986,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"13964:12:18","nodeType":"FunctionDefinition","parameters":{"id":4971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4970,"mutability":"mutable","name":"input","nameLocation":"13991:5:18","nodeType":"VariableDeclaration","scope":4986,"src":"13977:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4969,"name":"string","nodeType":"ElementaryTypeName","src":"13977:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13976:21:18"},"returnParameters":{"id":4974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4986,"src":"14021:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4972,"name":"address","nodeType":"ElementaryTypeName","src":"14021:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14020:9:18"},"scope":5381,"src":"13955:142:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5016,"nodeType":"Block","src":"14470:165:18","statements":[{"assignments":[4999,5001],"declarations":[{"constant":false,"id":4999,"mutability":"mutable","name":"success","nameLocation":"14486:7:18","nodeType":"VariableDeclaration","scope":5016,"src":"14481:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4998,"name":"bool","nodeType":"ElementaryTypeName","src":"14481:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5001,"mutability":"mutable","name":"value","nameLocation":"14503:5:18","nodeType":"VariableDeclaration","scope":5016,"src":"14495:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5000,"name":"address","nodeType":"ElementaryTypeName","src":"14495:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":5007,"initialValue":{"arguments":[{"id":5003,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"14528:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5004,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4991,"src":"14535:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5005,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4993,"src":"14542:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5002,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5038,5142],"referencedDeclaration":5142,"src":"14512:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14512:34:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"nodeType":"VariableDeclarationStatement","src":"14480:66:18"},{"condition":{"id":5009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14560:8:18","subExpression":{"id":5008,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4999,"src":"14561:7:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5013,"nodeType":"IfStatement","src":"14556:50:18","trueBody":{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":5010,"name":"StringsInvalidAddressFormat","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"14577:27:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":5011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14577:29:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5012,"nodeType":"RevertStatement","src":"14570:36:18"}},{"expression":{"id":5014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5001,"src":"14623:5:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4997,"id":5015,"nodeType":"Return","src":"14616:12:18"}]},"documentation":{"id":4987,"nodeType":"StructuredDocumentation","src":"14103:259:18","text":" @dev Variant of {parseAddress-string} that parses a substring of `input` located between position `begin` (included) and\n `end` (excluded).\n Requirements:\n - The substring must be formatted as `(0x)?[0-9a-fA-F]{40}`"},"id":5017,"implemented":true,"kind":"function","modifiers":[],"name":"parseAddress","nameLocation":"14376:12:18","nodeType":"FunctionDefinition","parameters":{"id":4994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4989,"mutability":"mutable","name":"input","nameLocation":"14403:5:18","nodeType":"VariableDeclaration","scope":5017,"src":"14389:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4988,"name":"string","nodeType":"ElementaryTypeName","src":"14389:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4991,"mutability":"mutable","name":"begin","nameLocation":"14418:5:18","nodeType":"VariableDeclaration","scope":5017,"src":"14410:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4990,"name":"uint256","nodeType":"ElementaryTypeName","src":"14410:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4993,"mutability":"mutable","name":"end","nameLocation":"14433:3:18","nodeType":"VariableDeclaration","scope":5017,"src":"14425:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4992,"name":"uint256","nodeType":"ElementaryTypeName","src":"14425:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14388:49:18"},"returnParameters":{"id":4997,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4996,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5017,"src":"14461:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4995,"name":"address","nodeType":"ElementaryTypeName","src":"14461:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14460:9:18"},"scope":5381,"src":"14367:268:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5037,"nodeType":"Block","src":"14942:70:18","statements":[{"expression":{"arguments":[{"id":5028,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"14975:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"30","id":5029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14982:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"arguments":[{"id":5032,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5020,"src":"14991:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14985:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5030,"name":"bytes","nodeType":"ElementaryTypeName","src":"14985:5:18","typeDescriptions":{}}},"id":5033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14985:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14998:6:18","memberName":"length","nodeType":"MemberAccess","src":"14985:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5027,"name":"tryParseAddress","nodeType":"Identifier","overloadedDeclarations":[5038,5142],"referencedDeclaration":5142,"src":"14959:15:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_address_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,address)"}},"id":5035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14959:46:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5026,"id":5036,"nodeType":"Return","src":"14952:53:18"}]},"documentation":{"id":5018,"nodeType":"StructuredDocumentation","src":"14641:198:18","text":" @dev Variant of {parseAddress-string} that returns false if the parsing fails because the input is not a properly\n formatted address. See {parseAddress-string} requirements."},"id":5038,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"14853:15:18","nodeType":"FunctionDefinition","parameters":{"id":5021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5020,"mutability":"mutable","name":"input","nameLocation":"14883:5:18","nodeType":"VariableDeclaration","scope":5038,"src":"14869:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5019,"name":"string","nodeType":"ElementaryTypeName","src":"14869:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14868:21:18"},"returnParameters":{"id":5026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"success","nameLocation":"14918:7:18","nodeType":"VariableDeclaration","scope":5038,"src":"14913:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5022,"name":"bool","nodeType":"ElementaryTypeName","src":"14913:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5025,"mutability":"mutable","name":"value","nameLocation":"14935:5:18","nodeType":"VariableDeclaration","scope":5038,"src":"14927:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5024,"name":"address","nodeType":"ElementaryTypeName","src":"14927:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14912:29:18"},"scope":5381,"src":"14844:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5141,"nodeType":"Block","src":"15405:733:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5052,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"15419:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5055,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"15431:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15425:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5053,"name":"bytes","nodeType":"ElementaryTypeName","src":"15425:5:18","typeDescriptions":{}}},"id":5056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15425:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15438:6:18","memberName":"length","nodeType":"MemberAccess","src":"15425:19:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15419:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5059,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"15448:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5060,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"15456:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15448:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15419:40:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5070,"nodeType":"IfStatement","src":"15415:72:18","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":5063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15469:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5065,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15476:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5064,"name":"address","nodeType":"ElementaryTypeName","src":"15476:7:18","typeDescriptions":{}}},"id":5067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15476:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5068,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"15468:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5051,"id":5069,"nodeType":"Return","src":"15461:26:18"}},{"assignments":[5072],"declarations":[{"constant":false,"id":5072,"mutability":"mutable","name":"hasPrefix","nameLocation":"15503:9:18","nodeType":"VariableDeclaration","scope":5141,"src":"15498:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5071,"name":"bool","nodeType":"ElementaryTypeName","src":"15498:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":5095,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5073,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"15516:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5074,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"15522:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15530:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"15522:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15516:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5078,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15515:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes2","typeString":"bytes2"},"id":5093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"arguments":[{"id":5084,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"15572:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15566:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5082,"name":"bytes","nodeType":"ElementaryTypeName","src":"15566:5:18","typeDescriptions":{}}},"id":5085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15566:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5086,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"15580:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5081,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"15543:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15543:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15536:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5079,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15536:6:18","typeDescriptions":{}}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15536:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"3078","id":5091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15598:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""},"value":"0x"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_39bef1777deb3dfb14f64b9f81ced092c501fee72f90e93d03bb95ee89df9837","typeString":"literal_string \"0x\""}],"id":5090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15591:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes2_$","typeString":"type(bytes2)"},"typeName":{"id":5089,"name":"bytes2","nodeType":"ElementaryTypeName","src":"15591:6:18","typeDescriptions":{}}},"id":5092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15591:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes2","typeString":"bytes2"}},"src":"15536:67:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15515:88:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"15498:105:18"},{"assignments":[5097],"declarations":[{"constant":false,"id":5097,"mutability":"mutable","name":"expectedLength","nameLocation":"15692:14:18","nodeType":"VariableDeclaration","scope":5141,"src":"15684:22:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5096,"name":"uint256","nodeType":"ElementaryTypeName","src":"15684:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5105,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3430","id":5098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15709:2:18","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":5099,"name":"hasPrefix","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5072,"src":"15714:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5100,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15724:6:18","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"15714:16:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$attached_to$_t_bool_$","typeString":"function (bool) pure returns (uint256)"}},"id":5101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15714:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":5102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15735:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15714:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15709:27:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"15684:52:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5106,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"15801:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5107,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"15807:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5109,"name":"expectedLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5097,"src":"15816:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15801:29:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5139,"nodeType":"Block","src":"16081:51:18","statements":[{"expression":{"components":[{"hexValue":"66616c7365","id":5132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16103:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16118:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16110:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5133,"name":"address","nodeType":"ElementaryTypeName","src":"16110:7:18","typeDescriptions":{}}},"id":5136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16102:19:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5051,"id":5138,"nodeType":"Return","src":"16095:26:18"}]},"id":5140,"nodeType":"IfStatement","src":"15797:335:18","trueBody":{"id":5131,"nodeType":"Block","src":"15832:243:18","statements":[{"assignments":[5112,5114],"declarations":[{"constant":false,"id":5112,"mutability":"mutable","name":"s","nameLocation":"15953:1:18","nodeType":"VariableDeclaration","scope":5131,"src":"15948:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5111,"name":"bool","nodeType":"ElementaryTypeName","src":"15948:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5114,"mutability":"mutable","name":"v","nameLocation":"15964:1:18","nodeType":"VariableDeclaration","scope":5131,"src":"15956:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5113,"name":"uint256","nodeType":"ElementaryTypeName","src":"15956:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5120,"initialValue":{"arguments":[{"id":5116,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5041,"src":"16001:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":5117,"name":"begin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5043,"src":"16008:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5118,"name":"end","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5045,"src":"16015:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5115,"name":"_tryParseHexUintUncheckedBounds","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4967,"src":"15969:31:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (string memory,uint256,uint256) pure returns (bool,uint256)"}},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15969:50:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"15947:72:18"},{"expression":{"components":[{"id":5121,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5112,"src":"16041:1:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"id":5126,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5114,"src":"16060:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5125,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16052:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5124,"name":"uint160","nodeType":"ElementaryTypeName","src":"16052:7:18","typeDescriptions":{}}},"id":5127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16052:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":5123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16044:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5122,"name":"address","nodeType":"ElementaryTypeName","src":"16044:7:18","typeDescriptions":{}}},"id":5128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16044:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":5129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16040:24:18","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":5051,"id":5130,"nodeType":"Return","src":"16033:31:18"}]}}]},"documentation":{"id":5039,"nodeType":"StructuredDocumentation","src":"15018:226:18","text":" @dev Variant of {parseAddress-string-uint256-uint256} that returns false if the parsing fails because input is not a properly\n formatted address. See {parseAddress-string-uint256-uint256} requirements."},"id":5142,"implemented":true,"kind":"function","modifiers":[],"name":"tryParseAddress","nameLocation":"15258:15:18","nodeType":"FunctionDefinition","parameters":{"id":5046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5041,"mutability":"mutable","name":"input","nameLocation":"15297:5:18","nodeType":"VariableDeclaration","scope":5142,"src":"15283:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5040,"name":"string","nodeType":"ElementaryTypeName","src":"15283:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":5043,"mutability":"mutable","name":"begin","nameLocation":"15320:5:18","nodeType":"VariableDeclaration","scope":5142,"src":"15312:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5042,"name":"uint256","nodeType":"ElementaryTypeName","src":"15312:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5045,"mutability":"mutable","name":"end","nameLocation":"15343:3:18","nodeType":"VariableDeclaration","scope":5142,"src":"15335:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5044,"name":"uint256","nodeType":"ElementaryTypeName","src":"15335:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15273:79:18"},"returnParameters":{"id":5051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5048,"mutability":"mutable","name":"success","nameLocation":"15381:7:18","nodeType":"VariableDeclaration","scope":5142,"src":"15376:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5047,"name":"bool","nodeType":"ElementaryTypeName","src":"15376:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5050,"mutability":"mutable","name":"value","nameLocation":"15398:5:18","nodeType":"VariableDeclaration","scope":5142,"src":"15390:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5049,"name":"address","nodeType":"ElementaryTypeName","src":"15390:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15375:29:18"},"scope":5381,"src":"15249:889:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5201,"nodeType":"Block","src":"16207:461:18","statements":[{"assignments":[5150],"declarations":[{"constant":false,"id":5150,"mutability":"mutable","name":"value","nameLocation":"16223:5:18","nodeType":"VariableDeclaration","scope":5201,"src":"16217:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5149,"name":"uint8","nodeType":"ElementaryTypeName","src":"16217:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":5155,"initialValue":{"arguments":[{"id":5153,"name":"chr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5144,"src":"16237:3:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5152,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16231:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5151,"name":"uint8","nodeType":"ElementaryTypeName","src":"16231:5:18","typeDescriptions":{}}},"id":5154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16231:10:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"16217:24:18"},{"id":5198,"nodeType":"UncheckedBlock","src":"16401:238:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5156,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16429:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3437","id":5157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16437:2:18","typeDescriptions":{"typeIdentifier":"t_rational_47_by_1","typeString":"int_const 47"},"value":"47"},"src":"16429:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16443:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3538","id":5160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16451:2:18","typeDescriptions":{"typeIdentifier":"t_rational_58_by_1","typeString":"int_const 58"},"value":"58"},"src":"16443:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16429:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16489:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":5168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16497:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"16489:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5170,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16503:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"313033","id":5171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16511:3:18","typeDescriptions":{"typeIdentifier":"t_rational_103_by_1","typeString":"int_const 103"},"value":"103"},"src":"16503:11:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16489:25:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5178,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16550:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3634","id":5179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16558:2:18","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"16550:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":5183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5181,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16564:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3731","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16572:2:18","typeDescriptions":{"typeIdentifier":"t_rational_71_by_1","typeString":"int_const 71"},"value":"71"},"src":"16564:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"16550:24:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"expression":{"arguments":[{"id":5191,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16618:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5190,"name":"uint8","nodeType":"ElementaryTypeName","src":"16618:5:18","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5189,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16613:4:18","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16613:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16625:3:18","memberName":"max","nodeType":"MemberAccess","src":"16613:15:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5148,"id":5194,"nodeType":"Return","src":"16606:22:18"},"id":5195,"nodeType":"IfStatement","src":"16546:82:18","trueBody":{"expression":{"id":5187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16576:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3535","id":5186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16585:2:18","typeDescriptions":{"typeIdentifier":"t_rational_55_by_1","typeString":"int_const 55"},"value":"55"},"src":"16576:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5188,"nodeType":"ExpressionStatement","src":"16576:11:18"}},"id":5196,"nodeType":"IfStatement","src":"16485:143:18","trueBody":{"expression":{"id":5176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16516:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3837","id":5175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16525:2:18","typeDescriptions":{"typeIdentifier":"t_rational_87_by_1","typeString":"int_const 87"},"value":"87"},"src":"16516:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5177,"nodeType":"ExpressionStatement","src":"16516:11:18"}},"id":5197,"nodeType":"IfStatement","src":"16425:203:18","trueBody":{"expression":{"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5163,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16455:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"3438","id":5164,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16464:2:18","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"src":"16455:11:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":5166,"nodeType":"ExpressionStatement","src":"16455:11:18"}}]},{"expression":{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"16656:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5148,"id":5200,"nodeType":"Return","src":"16649:12:18"}]},"id":5202,"implemented":true,"kind":"function","modifiers":[],"name":"_tryParseChr","nameLocation":"16153:12:18","nodeType":"FunctionDefinition","parameters":{"id":5145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5144,"mutability":"mutable","name":"chr","nameLocation":"16173:3:18","nodeType":"VariableDeclaration","scope":5202,"src":"16166:10:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5143,"name":"bytes1","nodeType":"ElementaryTypeName","src":"16166:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"src":"16165:12:18"},"returnParameters":{"id":5148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5147,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5202,"src":"16200:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5146,"name":"uint8","nodeType":"ElementaryTypeName","src":"16200:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16199:7:18"},"scope":5381,"src":"16144:524:18","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":5367,"nodeType":"Block","src":"17334:1331:18","statements":[{"assignments":[5211],"declarations":[{"constant":false,"id":5211,"mutability":"mutable","name":"buffer","nameLocation":"17357:6:18","nodeType":"VariableDeclaration","scope":5367,"src":"17344:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5210,"name":"bytes","nodeType":"ElementaryTypeName","src":"17344:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5216,"initialValue":{"arguments":[{"id":5214,"name":"input","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5205,"src":"17372:5:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":5213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17366:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":5212,"name":"bytes","nodeType":"ElementaryTypeName","src":"17366:5:18","typeDescriptions":{}}},"id":5215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17366:12:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17344:34:18"},{"assignments":[5218],"declarations":[{"constant":false,"id":5218,"mutability":"mutable","name":"output","nameLocation":"17401:6:18","nodeType":"VariableDeclaration","scope":5367,"src":"17388:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5217,"name":"bytes","nodeType":"ElementaryTypeName","src":"17388:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":5226,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17420:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"expression":{"id":5222,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"17424:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17431:6:18","memberName":"length","nodeType":"MemberAccess","src":"17424:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:17:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"17410:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":5219,"name":"bytes","nodeType":"ElementaryTypeName","src":"17414:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":5225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17410:28:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"17388:50:18"},{"assignments":[5228],"declarations":[{"constant":false,"id":5228,"mutability":"mutable","name":"outputLength","nameLocation":"17479:12:18","nodeType":"VariableDeclaration","scope":5367,"src":"17471:20:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5227,"name":"uint256","nodeType":"ElementaryTypeName","src":"17471:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5230,"initialValue":{"hexValue":"30","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17494:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17471:24:18"},{"body":{"id":5359,"nodeType":"Block","src":"17546:854:18","statements":[{"assignments":[5242],"declarations":[{"constant":false,"id":5242,"mutability":"mutable","name":"char","nameLocation":"17567:4:18","nodeType":"VariableDeclaration","scope":5359,"src":"17560:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":5241,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17560:6:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"}],"id":5250,"initialValue":{"arguments":[{"arguments":[{"id":5246,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"17604:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":5247,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"17612:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5245,"name":"_unsafeReadBytesOffset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5380,"src":"17581:22:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (bytes memory,uint256) pure returns (bytes32)"}},"id":5248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17581:33:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17574:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":5243,"name":"bytes1","nodeType":"ElementaryTypeName","src":"17574:6:18","typeDescriptions":{}}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17574:41:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"VariableDeclarationStatement","src":"17560:55:18"},{"condition":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5251,"name":"SPECIAL_CHARS_LOOKUP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"17635:20:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":5252,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17659:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"arguments":[{"id":5255,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"17670:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17664:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5253,"name":"uint8","nodeType":"ElementaryTypeName","src":"17664:5:18","typeDescriptions":{}}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17664:11:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17659:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5258,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17658:18:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17635:41:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5260,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17634:43:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":5261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17681:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17634:48:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":5263,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17633:50:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5357,"nodeType":"Block","src":"18328:62:18","statements":[{"expression":{"id":5355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5350,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"18346:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5353,"indexExpression":{"id":5352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18353:14:18","subExpression":{"id":5351,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"18353:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18346:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":5354,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"18371:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"18346:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5356,"nodeType":"ExpressionStatement","src":"18346:29:18"}]},"id":5358,"nodeType":"IfStatement","src":"17629:761:18","trueBody":{"id":5349,"nodeType":"Block","src":"17685:637:18","statements":[{"expression":{"id":5269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5264,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"17703:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5267,"indexExpression":{"id":5266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17710:14:18","subExpression":{"id":5265,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"17710:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17703:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17728:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"17703:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5270,"nodeType":"ExpressionStatement","src":"17703:29:18"},{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5271,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"17754:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783038","id":5272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17762:4:18","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x08"},"src":"17754:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5281,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"17823:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783039","id":5282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17831:4:18","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"0x09"},"src":"17823:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5293,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5291,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"17892:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783061","id":5292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17900:4:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"0x0a"},"src":"17892:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5301,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"17961:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783063","id":5302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17969:4:18","typeDescriptions":{"typeIdentifier":"t_rational_12_by_1","typeString":"int_const 12"},"value":"0x0c"},"src":"17961:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5311,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"18030:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783064","id":5312,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18038:4:18","typeDescriptions":{"typeIdentifier":"t_rational_13_by_1","typeString":"int_const 13"},"value":"0x0d"},"src":"18030:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5323,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5321,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"18099:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783563","id":5322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18107:4:18","typeDescriptions":{"typeIdentifier":"t_rational_92_by_1","typeString":"int_const 92"},"value":"0x5c"},"src":"18099:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5331,"name":"char","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5242,"src":"18169:4:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30783232","id":5332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18177:4:18","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"src":"18169:12:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5342,"nodeType":"IfStatement","src":"18165:143:18","trueBody":{"id":5341,"nodeType":"Block","src":"18183:125:18","statements":[{"expression":{"id":5339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5334,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"18261:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5337,"indexExpression":{"id":5336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18268:14:18","subExpression":{"id":5335,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"18268:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18261:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"22","id":5338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18286:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e9f33448a4153023cdaf3eb759f1afdc24aba433a3e18b683f8c04a6eaa69f0","typeString":"literal_string \"\"\""},"value":"\""},"src":"18261:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5340,"nodeType":"ExpressionStatement","src":"18261:28:18"}]}},"id":5343,"nodeType":"IfStatement","src":"18095:213:18","trueBody":{"expression":{"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5324,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"18113:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5327,"indexExpression":{"id":5326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18120:14:18","subExpression":{"id":5325,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"18120:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18113:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"5c","id":5328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18138:4:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_731553fa98541ade8b78284229adfe09a819380dee9244baac20dd1e0aa24095","typeString":"literal_string \"\\\""},"value":"\\"},"src":"18113:29:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5330,"nodeType":"ExpressionStatement","src":"18113:29:18"}},"id":5344,"nodeType":"IfStatement","src":"18026:282:18","trueBody":{"expression":{"id":5319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5314,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"18044:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5317,"indexExpression":{"id":5316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"18051:14:18","subExpression":{"id":5315,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"18051:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"18044:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"72","id":5318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18069:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_414f72a4d550cad29f17d9d99a4af64b3776ec5538cd440cef0f03fef2e9e010","typeString":"literal_string \"r\""},"value":"r"},"src":"18044:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5320,"nodeType":"ExpressionStatement","src":"18044:28:18"}},"id":5345,"nodeType":"IfStatement","src":"17957:351:18","trueBody":{"expression":{"id":5309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5304,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"17975:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5307,"indexExpression":{"id":5306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17982:14:18","subExpression":{"id":5305,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"17982:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17975:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66","id":5308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18000:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d1e8aeb79500496ef3dc2e57ba746a8315d048b7a664a2bf948db4fa91960483","typeString":"literal_string \"f\""},"value":"f"},"src":"17975:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5310,"nodeType":"ExpressionStatement","src":"17975:28:18"}},"id":5346,"nodeType":"IfStatement","src":"17888:420:18","trueBody":{"expression":{"id":5299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5294,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"17906:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5297,"indexExpression":{"id":5296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17913:14:18","subExpression":{"id":5295,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"17913:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17906:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"6e","id":5298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17931:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_4b4ecedb4964a40fe416b16c7bd8b46092040ec42ef0aa69e59f09872f105cf3","typeString":"literal_string \"n\""},"value":"n"},"src":"17906:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5300,"nodeType":"ExpressionStatement","src":"17906:28:18"}},"id":5347,"nodeType":"IfStatement","src":"17819:489:18","trueBody":{"expression":{"id":5289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5284,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"17837:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5287,"indexExpression":{"id":5286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17844:14:18","subExpression":{"id":5285,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"17844:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17837:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74","id":5288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17862:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cac1bb71f0a97c8ac94ca9546b43178a9ad254c7b757ac07433aa6df35cd8089","typeString":"literal_string \"t\""},"value":"t"},"src":"17837:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5290,"nodeType":"ExpressionStatement","src":"17837:28:18"}},"id":5348,"nodeType":"IfStatement","src":"17750:558:18","trueBody":{"expression":{"id":5279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5274,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"17768:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5277,"indexExpression":{"id":5276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"17775:14:18","subExpression":{"id":5275,"name":"outputLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5228,"src":"17775:12:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"17768:22:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"62","id":5278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17793:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_b5553de315e0edf504d9150af82dafa5c4667fa618ed0a6f19c69b41166c5510","typeString":"literal_string \"b\""},"value":"b"},"src":"17768:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":5280,"nodeType":"ExpressionStatement","src":"17768:28:18"}}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5234,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"17522:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":5235,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5211,"src":"17526:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":5236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17533:6:18","memberName":"length","nodeType":"MemberAccess","src":"17526:13:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17522:17:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5360,"initializationExpression":{"assignments":[5232],"declarations":[{"constant":false,"id":5232,"mutability":"mutable","name":"i","nameLocation":"17519:1:18","nodeType":"VariableDeclaration","scope":5360,"src":"17511:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5231,"name":"uint256","nodeType":"ElementaryTypeName","src":"17511:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5233,"nodeType":"VariableDeclarationStatement","src":"17511:9:18"},"loopExpression":{"expression":{"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17541:3:18","subExpression":{"id":5238,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5232,"src":"17543:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5240,"nodeType":"ExpressionStatement","src":"17541:3:18"},"nodeType":"ForStatement","src":"17506:894:18"},{"AST":{"nodeType":"YulBlock","src":"18498:129:18","statements":[{"expression":{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18519:6:18"},{"name":"outputLength","nodeType":"YulIdentifier","src":"18527:12:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18512:6:18"},"nodeType":"YulFunctionCall","src":"18512:28:18"},"nodeType":"YulExpressionStatement","src":"18512:28:18"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18560:4:18","type":"","value":"0x40"},{"arguments":[{"name":"output","nodeType":"YulIdentifier","src":"18570:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18582:1:18","type":"","value":"5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18589:1:18","type":"","value":"5"},{"arguments":[{"name":"outputLength","nodeType":"YulIdentifier","src":"18596:12:18"},{"kind":"number","nodeType":"YulLiteral","src":"18610:2:18","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18592:3:18"},"nodeType":"YulFunctionCall","src":"18592:21:18"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"18585:3:18"},"nodeType":"YulFunctionCall","src":"18585:29:18"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"18578:3:18"},"nodeType":"YulFunctionCall","src":"18578:37:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18566:3:18"},"nodeType":"YulFunctionCall","src":"18566:50:18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18553:6:18"},"nodeType":"YulFunctionCall","src":"18553:64:18"},"nodeType":"YulExpressionStatement","src":"18553:64:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":5218,"isOffset":false,"isSlot":false,"src":"18519:6:18","valueSize":1},{"declaration":5218,"isOffset":false,"isSlot":false,"src":"18570:6:18","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"18527:12:18","valueSize":1},{"declaration":5228,"isOffset":false,"isSlot":false,"src":"18596:12:18","valueSize":1}],"flags":["memory-safe"],"id":5361,"nodeType":"InlineAssembly","src":"18473:154:18"},{"expression":{"arguments":[{"id":5364,"name":"output","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5218,"src":"18651:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":5363,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18644:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":5362,"name":"string","nodeType":"ElementaryTypeName","src":"18644:6:18","typeDescriptions":{}}},"id":5365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18644:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":5209,"id":5366,"nodeType":"Return","src":"18637:21:18"}]},"documentation":{"id":5203,"nodeType":"StructuredDocumentation","src":"16674:576:18","text":" @dev Escape special characters in JSON strings. This can be useful to prevent JSON injection in NFT metadata.\n WARNING: This function should only be used in double quoted JSON strings. Single quotes are not escaped.\n NOTE: This function escapes all unicode characters, and not just the ones in ranges defined in section 2.5 of\n RFC-4627 (U+0000 to U+001F, U+0022 and U+005C). ECMAScript's `JSON.parse` does recover escaped unicode\n characters that are not in this range, but other tooling may provide different results."},"id":5368,"implemented":true,"kind":"function","modifiers":[],"name":"escapeJSON","nameLocation":"17264:10:18","nodeType":"FunctionDefinition","parameters":{"id":5206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5205,"mutability":"mutable","name":"input","nameLocation":"17289:5:18","nodeType":"VariableDeclaration","scope":5368,"src":"17275:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5204,"name":"string","nodeType":"ElementaryTypeName","src":"17275:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17274:21:18"},"returnParameters":{"id":5209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5368,"src":"17319:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":5207,"name":"string","nodeType":"ElementaryTypeName","src":"17319:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17318:15:18"},"scope":5381,"src":"17255:1410:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5379,"nodeType":"Block","src":"19050:225:18","statements":[{"AST":{"nodeType":"YulBlock","src":"19199:70:18","statements":[{"nodeType":"YulAssignment","src":"19213:46:18","value":{"arguments":[{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"19232:6:18"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19244:4:18","type":"","value":"0x20"},{"name":"offset","nodeType":"YulIdentifier","src":"19250:6:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19240:3:18"},"nodeType":"YulFunctionCall","src":"19240:17:18"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19228:3:18"},"nodeType":"YulFunctionCall","src":"19228:30:18"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19222:5:18"},"nodeType":"YulFunctionCall","src":"19222:37:18"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19213:5:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5371,"isOffset":false,"isSlot":false,"src":"19232:6:18","valueSize":1},{"declaration":5373,"isOffset":false,"isSlot":false,"src":"19250:6:18","valueSize":1},{"declaration":5376,"isOffset":false,"isSlot":false,"src":"19213:5:18","valueSize":1}],"flags":["memory-safe"],"id":5378,"nodeType":"InlineAssembly","src":"19174:95:18"}]},"documentation":{"id":5369,"nodeType":"StructuredDocumentation","src":"18671:268:18","text":" @dev Reads a bytes32 from a bytes array without bounds checking.\n NOTE: making this function internal would mean it could be used with memory unsafe offset, and marking the\n assembly block as such would prevent some optimizations."},"id":5380,"implemented":true,"kind":"function","modifiers":[],"name":"_unsafeReadBytesOffset","nameLocation":"18953:22:18","nodeType":"FunctionDefinition","parameters":{"id":5374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5371,"mutability":"mutable","name":"buffer","nameLocation":"18989:6:18","nodeType":"VariableDeclaration","scope":5380,"src":"18976:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5370,"name":"bytes","nodeType":"ElementaryTypeName","src":"18976:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":5373,"mutability":"mutable","name":"offset","nameLocation":"19005:6:18","nodeType":"VariableDeclaration","scope":5380,"src":"18997:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5372,"name":"uint256","nodeType":"ElementaryTypeName","src":"18997:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18975:37:18"},"returnParameters":{"id":5377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5376,"mutability":"mutable","name":"value","nameLocation":"19043:5:18","nodeType":"VariableDeclaration","scope":5380,"src":"19035:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5375,"name":"bytes32","nodeType":"ElementaryTypeName","src":"19035:7:18","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"19034:15:18"},"scope":5381,"src":"18944:331:18","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":5382,"src":"297:18980:18","usedErrors":[4039,4042,4045],"usedEvents":[]}],"src":"101:19177:18"},"id":18},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[5405],"IERC165":[5417]},"id":5406,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5383,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:19"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":5385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5406,"sourceUnit":5418,"src":"140:38:19","symbolAliases":[{"foreign":{"id":5384,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"148:7:19","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":5387,"name":"IERC165","nameLocations":["688:7:19"],"nodeType":"IdentifierPath","referencedDeclaration":5417,"src":"688:7:19"},"id":5388,"nodeType":"InheritanceSpecifier","src":"688:7:19"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":5386,"nodeType":"StructuredDocumentation","src":"180:479:19","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"},"fullyImplemented":true,"id":5405,"linearizedBaseContracts":[5405,5417],"name":"ERC165","nameLocation":"678:6:19","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[5416],"body":{"id":5403,"nodeType":"Block","src":"845:64:19","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":5401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5396,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5391,"src":"862:11:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":5398,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5417,"src":"882:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$5417_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$5417_$","typeString":"type(contract IERC165)"}],"id":5397,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"877:4:19","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5399,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"877:13:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$5417","typeString":"type(contract IERC165)"}},"id":5400,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"891:11:19","memberName":"interfaceId","nodeType":"MemberAccess","src":"877:25:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"862:40:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":5395,"id":5402,"nodeType":"Return","src":"855:47:19"}]},"documentation":{"id":5389,"nodeType":"StructuredDocumentation","src":"702:56:19","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":5404,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"772:17:19","nodeType":"FunctionDefinition","parameters":{"id":5392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5391,"mutability":"mutable","name":"interfaceId","nameLocation":"797:11:19","nodeType":"VariableDeclaration","scope":5404,"src":"790:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5390,"name":"bytes4","nodeType":"ElementaryTypeName","src":"790:6:19","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"789:20:19"},"returnParameters":{"id":5395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5394,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5404,"src":"839:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5393,"name":"bool","nodeType":"ElementaryTypeName","src":"839:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"838:6:19"},"scope":5405,"src":"763:146:19","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":5406,"src":"660:251:19","usedErrors":[],"usedEvents":[]}],"src":"114:798:19"},"id":19},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[5417]},"id":5418,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5407,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:20"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":5408,"nodeType":"StructuredDocumentation","src":"141:280:20","text":" @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":5417,"linearizedBaseContracts":[5417],"name":"IERC165","nameLocation":"432:7:20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":5409,"nodeType":"StructuredDocumentation","src":"446:340:20","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":5416,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"800:17:20","nodeType":"FunctionDefinition","parameters":{"id":5412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5411,"mutability":"mutable","name":"interfaceId","nameLocation":"825:11:20","nodeType":"VariableDeclaration","scope":5416,"src":"818:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":5410,"name":"bytes4","nodeType":"ElementaryTypeName","src":"818:6:20","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"817:20:20"},"returnParameters":{"id":5415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5416,"src":"861:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5413,"name":"bool","nodeType":"ElementaryTypeName","src":"861:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"860:6:20"},"scope":5417,"src":"791:76:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":5418,"src":"422:447:20","usedErrors":[],"usedEvents":[]}],"src":"115:755:20"},"id":20},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[7038],"Panic":[3725],"SafeCast":[8803]},"id":7039,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5419,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":5421,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":3726,"src":"129:35:21","symbolAliases":[{"foreign":{"id":5420,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"137:5:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":5423,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7039,"sourceUnit":8804,"src":"165:40:21","symbolAliases":[{"foreign":{"id":5422,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"173:8:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":5424,"nodeType":"StructuredDocumentation","src":"207:73:21","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":7038,"linearizedBaseContracts":[7038],"name":"Math","nameLocation":"289:4:21","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":5429,"members":[{"id":5425,"name":"Floor","nameLocation":"324:5:21","nodeType":"EnumValue","src":"324:5:21"},{"id":5426,"name":"Ceil","nameLocation":"367:4:21","nodeType":"EnumValue","src":"367:4:21"},{"id":5427,"name":"Trunc","nameLocation":"409:5:21","nodeType":"EnumValue","src":"409:5:21"},{"id":5428,"name":"Expand","nameLocation":"439:6:21","nodeType":"EnumValue","src":"439:6:21"}],"name":"Rounding","nameLocation":"305:8:21","nodeType":"EnumDefinition","src":"300:169:21"},{"body":{"id":5442,"nodeType":"Block","src":"731:112:21","statements":[{"AST":{"nodeType":"YulBlock","src":"766:71:21","statements":[{"nodeType":"YulAssignment","src":"780:16:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"791:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"794:1:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"787:3:21"},"nodeType":"YulFunctionCall","src":"787:9:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"780:3:21"}]},{"nodeType":"YulAssignment","src":"809:18:21","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"820:3:21"},{"name":"a","nodeType":"YulIdentifier","src":"825:1:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"817:2:21"},"nodeType":"YulFunctionCall","src":"817:10:21"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"809:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5432,"isOffset":false,"isSlot":false,"src":"791:1:21","valueSize":1},{"declaration":5432,"isOffset":false,"isSlot":false,"src":"825:1:21","valueSize":1},{"declaration":5434,"isOffset":false,"isSlot":false,"src":"794:1:21","valueSize":1},{"declaration":5437,"isOffset":false,"isSlot":false,"src":"809:4:21","valueSize":1},{"declaration":5439,"isOffset":false,"isSlot":false,"src":"780:3:21","valueSize":1},{"declaration":5439,"isOffset":false,"isSlot":false,"src":"820:3:21","valueSize":1}],"flags":["memory-safe"],"id":5441,"nodeType":"InlineAssembly","src":"741:96:21"}]},"documentation":{"id":5430,"nodeType":"StructuredDocumentation","src":"475:163:21","text":" @dev Return the 512-bit addition of two uint256.\n The result is stored in two 256 variables such that sum = high * 2²⁵⁶ + low."},"id":5443,"implemented":true,"kind":"function","modifiers":[],"name":"add512","nameLocation":"652:6:21","nodeType":"FunctionDefinition","parameters":{"id":5435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5432,"mutability":"mutable","name":"a","nameLocation":"667:1:21","nodeType":"VariableDeclaration","scope":5443,"src":"659:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5431,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5434,"mutability":"mutable","name":"b","nameLocation":"678:1:21","nodeType":"VariableDeclaration","scope":5443,"src":"670:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5433,"name":"uint256","nodeType":"ElementaryTypeName","src":"670:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"658:22:21"},"returnParameters":{"id":5440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5437,"mutability":"mutable","name":"high","nameLocation":"712:4:21","nodeType":"VariableDeclaration","scope":5443,"src":"704:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5436,"name":"uint256","nodeType":"ElementaryTypeName","src":"704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5439,"mutability":"mutable","name":"low","nameLocation":"726:3:21","nodeType":"VariableDeclaration","scope":5443,"src":"718:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5438,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"703:27:21"},"scope":7038,"src":"643:200:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5456,"nodeType":"Block","src":"1115:462:21","statements":[{"AST":{"nodeType":"YulBlock","src":"1437:134:21","statements":[{"nodeType":"YulVariableDeclaration","src":"1451:30:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1468:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"1471:1:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1478:1:21","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1474:3:21"},"nodeType":"YulFunctionCall","src":"1474:6:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"1461:6:21"},"nodeType":"YulFunctionCall","src":"1461:20:21"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"1455:2:21","type":""}]},{"nodeType":"YulAssignment","src":"1494:16:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"1505:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"1508:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1501:3:21"},"nodeType":"YulFunctionCall","src":"1501:9:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"1494:3:21"}]},{"nodeType":"YulAssignment","src":"1523:38:21","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1539:2:21"},{"name":"low","nodeType":"YulIdentifier","src":"1543:3:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1535:3:21"},"nodeType":"YulFunctionCall","src":"1535:12:21"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"1552:2:21"},{"name":"low","nodeType":"YulIdentifier","src":"1556:3:21"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1549:2:21"},"nodeType":"YulFunctionCall","src":"1549:11:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:21"},"nodeType":"YulFunctionCall","src":"1531:30:21"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"1523:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5446,"isOffset":false,"isSlot":false,"src":"1468:1:21","valueSize":1},{"declaration":5446,"isOffset":false,"isSlot":false,"src":"1505:1:21","valueSize":1},{"declaration":5448,"isOffset":false,"isSlot":false,"src":"1471:1:21","valueSize":1},{"declaration":5448,"isOffset":false,"isSlot":false,"src":"1508:1:21","valueSize":1},{"declaration":5451,"isOffset":false,"isSlot":false,"src":"1523:4:21","valueSize":1},{"declaration":5453,"isOffset":false,"isSlot":false,"src":"1494:3:21","valueSize":1},{"declaration":5453,"isOffset":false,"isSlot":false,"src":"1543:3:21","valueSize":1},{"declaration":5453,"isOffset":false,"isSlot":false,"src":"1556:3:21","valueSize":1}],"flags":["memory-safe"],"id":5455,"nodeType":"InlineAssembly","src":"1412:159:21"}]},"documentation":{"id":5444,"nodeType":"StructuredDocumentation","src":"849:173:21","text":" @dev Return the 512-bit multiplication of two uint256.\n The result is stored in two 256 variables such that product = high * 2²⁵⁶ + low."},"id":5457,"implemented":true,"kind":"function","modifiers":[],"name":"mul512","nameLocation":"1036:6:21","nodeType":"FunctionDefinition","parameters":{"id":5449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5446,"mutability":"mutable","name":"a","nameLocation":"1051:1:21","nodeType":"VariableDeclaration","scope":5457,"src":"1043:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5445,"name":"uint256","nodeType":"ElementaryTypeName","src":"1043:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5448,"mutability":"mutable","name":"b","nameLocation":"1062:1:21","nodeType":"VariableDeclaration","scope":5457,"src":"1054:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5447,"name":"uint256","nodeType":"ElementaryTypeName","src":"1054:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1042:22:21"},"returnParameters":{"id":5454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5451,"mutability":"mutable","name":"high","nameLocation":"1096:4:21","nodeType":"VariableDeclaration","scope":5457,"src":"1088:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5450,"name":"uint256","nodeType":"ElementaryTypeName","src":"1088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5453,"mutability":"mutable","name":"low","nameLocation":"1110:3:21","nodeType":"VariableDeclaration","scope":5457,"src":"1102:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1102:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1087:27:21"},"scope":7038,"src":"1027:550:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5491,"nodeType":"Block","src":"1784:149:21","statements":[{"id":5490,"nodeType":"UncheckedBlock","src":"1794:133:21","statements":[{"assignments":[5470],"declarations":[{"constant":false,"id":5470,"mutability":"mutable","name":"c","nameLocation":"1826:1:21","nodeType":"VariableDeclaration","scope":5490,"src":"1818:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5469,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5474,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5471,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"1830:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5472,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5462,"src":"1834:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1830:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1818:17:21"},{"expression":{"id":5479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5475,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"1849:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5476,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"1859:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":5477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5460,"src":"1864:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1859:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1849:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5480,"nodeType":"ExpressionStatement","src":"1849:16:21"},{"expression":{"id":5488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5481,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5467,"src":"1879:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5482,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5470,"src":"1888:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5485,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5465,"src":"1908:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5483,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"1892:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":5484,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1901:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"1892:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5486,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1892:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1888:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5489,"nodeType":"ExpressionStatement","src":"1879:37:21"}]}]},"documentation":{"id":5458,"nodeType":"StructuredDocumentation","src":"1583:105:21","text":" @dev Returns the addition of two unsigned integers, with a success flag (no overflow)."},"id":5492,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"1702:6:21","nodeType":"FunctionDefinition","parameters":{"id":5463,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5460,"mutability":"mutable","name":"a","nameLocation":"1717:1:21","nodeType":"VariableDeclaration","scope":5492,"src":"1709:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1709:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5462,"mutability":"mutable","name":"b","nameLocation":"1728:1:21","nodeType":"VariableDeclaration","scope":5492,"src":"1720:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5461,"name":"uint256","nodeType":"ElementaryTypeName","src":"1720:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1708:22:21"},"returnParameters":{"id":5468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5465,"mutability":"mutable","name":"success","nameLocation":"1759:7:21","nodeType":"VariableDeclaration","scope":5492,"src":"1754:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5464,"name":"bool","nodeType":"ElementaryTypeName","src":"1754:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5467,"mutability":"mutable","name":"result","nameLocation":"1776:6:21","nodeType":"VariableDeclaration","scope":5492,"src":"1768:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1768:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1753:30:21"},"scope":7038,"src":"1693:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5526,"nodeType":"Block","src":"2143:149:21","statements":[{"id":5525,"nodeType":"UncheckedBlock","src":"2153:133:21","statements":[{"assignments":[5505],"declarations":[{"constant":false,"id":5505,"mutability":"mutable","name":"c","nameLocation":"2185:1:21","nodeType":"VariableDeclaration","scope":5525,"src":"2177:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5504,"name":"uint256","nodeType":"ElementaryTypeName","src":"2177:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5509,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5506,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"2189:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5507,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5497,"src":"2193:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2189:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2177:17:21"},{"expression":{"id":5514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5510,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"2208:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5511,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2218:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5512,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5495,"src":"2223:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2218:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2208:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5515,"nodeType":"ExpressionStatement","src":"2208:16:21"},{"expression":{"id":5523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5516,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5502,"src":"2238:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5517,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5505,"src":"2247:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5520,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5500,"src":"2267:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5518,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"2251:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":5519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2260:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"2251:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2251:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2247:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2238:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5524,"nodeType":"ExpressionStatement","src":"2238:37:21"}]}]},"documentation":{"id":5493,"nodeType":"StructuredDocumentation","src":"1939:108:21","text":" @dev Returns the subtraction of two unsigned integers, with a success flag (no overflow)."},"id":5527,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"2061:6:21","nodeType":"FunctionDefinition","parameters":{"id":5498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5495,"mutability":"mutable","name":"a","nameLocation":"2076:1:21","nodeType":"VariableDeclaration","scope":5527,"src":"2068:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2068:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5497,"mutability":"mutable","name":"b","nameLocation":"2087:1:21","nodeType":"VariableDeclaration","scope":5527,"src":"2079:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2079:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2067:22:21"},"returnParameters":{"id":5503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5500,"mutability":"mutable","name":"success","nameLocation":"2118:7:21","nodeType":"VariableDeclaration","scope":5527,"src":"2113:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5499,"name":"bool","nodeType":"ElementaryTypeName","src":"2113:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5502,"mutability":"mutable","name":"result","nameLocation":"2135:6:21","nodeType":"VariableDeclaration","scope":5527,"src":"2127:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2112:30:21"},"scope":7038,"src":"2052:240:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5556,"nodeType":"Block","src":"2505:391:21","statements":[{"id":5555,"nodeType":"UncheckedBlock","src":"2515:375:21","statements":[{"assignments":[5540],"declarations":[{"constant":false,"id":5540,"mutability":"mutable","name":"c","nameLocation":"2547:1:21","nodeType":"VariableDeclaration","scope":5555,"src":"2539:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5539,"name":"uint256","nodeType":"ElementaryTypeName","src":"2539:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5544,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5541,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5530,"src":"2551:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5542,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5532,"src":"2555:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2539:17:21"},{"AST":{"nodeType":"YulBlock","src":"2595:188:21","statements":[{"nodeType":"YulAssignment","src":"2727:42:21","value":{"arguments":[{"arguments":[{"arguments":[{"name":"c","nodeType":"YulIdentifier","src":"2748:1:21"},{"name":"a","nodeType":"YulIdentifier","src":"2751:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"2744:3:21"},"nodeType":"YulFunctionCall","src":"2744:9:21"},{"name":"b","nodeType":"YulIdentifier","src":"2755:1:21"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2741:2:21"},"nodeType":"YulFunctionCall","src":"2741:16:21"},{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"2766:1:21"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2759:6:21"},"nodeType":"YulFunctionCall","src":"2759:9:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2738:2:21"},"nodeType":"YulFunctionCall","src":"2738:31:21"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"2727:7:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5530,"isOffset":false,"isSlot":false,"src":"2751:1:21","valueSize":1},{"declaration":5530,"isOffset":false,"isSlot":false,"src":"2766:1:21","valueSize":1},{"declaration":5532,"isOffset":false,"isSlot":false,"src":"2755:1:21","valueSize":1},{"declaration":5540,"isOffset":false,"isSlot":false,"src":"2748:1:21","valueSize":1},{"declaration":5535,"isOffset":false,"isSlot":false,"src":"2727:7:21","valueSize":1}],"flags":["memory-safe"],"id":5545,"nodeType":"InlineAssembly","src":"2570:213:21"},{"expression":{"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5546,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5537,"src":"2842:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5540,"src":"2851:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5550,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5535,"src":"2871:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5548,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"2855:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":5549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2864:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"2855:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2855:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2851:28:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2842:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5554,"nodeType":"ExpressionStatement","src":"2842:37:21"}]}]},"documentation":{"id":5528,"nodeType":"StructuredDocumentation","src":"2298:111:21","text":" @dev Returns the multiplication of two unsigned integers, with a success flag (no overflow)."},"id":5557,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"2423:6:21","nodeType":"FunctionDefinition","parameters":{"id":5533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5530,"mutability":"mutable","name":"a","nameLocation":"2438:1:21","nodeType":"VariableDeclaration","scope":5557,"src":"2430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5532,"mutability":"mutable","name":"b","nameLocation":"2449:1:21","nodeType":"VariableDeclaration","scope":5557,"src":"2441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5531,"name":"uint256","nodeType":"ElementaryTypeName","src":"2441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2429:22:21"},"returnParameters":{"id":5538,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5535,"mutability":"mutable","name":"success","nameLocation":"2480:7:21","nodeType":"VariableDeclaration","scope":5557,"src":"2475:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5534,"name":"bool","nodeType":"ElementaryTypeName","src":"2475:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5537,"mutability":"mutable","name":"result","nameLocation":"2497:6:21","nodeType":"VariableDeclaration","scope":5557,"src":"2489:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5536,"name":"uint256","nodeType":"ElementaryTypeName","src":"2489:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2474:30:21"},"scope":7038,"src":"2414:482:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5577,"nodeType":"Block","src":"3111:231:21","statements":[{"id":5576,"nodeType":"UncheckedBlock","src":"3121:215:21","statements":[{"expression":{"id":5573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5569,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5565,"src":"3145:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5570,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5562,"src":"3155:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5571,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3159:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3155:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3145:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5574,"nodeType":"ExpressionStatement","src":"3145:15:21"},{"AST":{"nodeType":"YulBlock","src":"3199:127:21","statements":[{"nodeType":"YulAssignment","src":"3293:19:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3307:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"3310:1:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3303:3:21"},"nodeType":"YulFunctionCall","src":"3303:9:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3293:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5560,"isOffset":false,"isSlot":false,"src":"3307:1:21","valueSize":1},{"declaration":5562,"isOffset":false,"isSlot":false,"src":"3310:1:21","valueSize":1},{"declaration":5567,"isOffset":false,"isSlot":false,"src":"3293:6:21","valueSize":1}],"flags":["memory-safe"],"id":5575,"nodeType":"InlineAssembly","src":"3174:152:21"}]}]},"documentation":{"id":5558,"nodeType":"StructuredDocumentation","src":"2902:113:21","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":5578,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"3029:6:21","nodeType":"FunctionDefinition","parameters":{"id":5563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5560,"mutability":"mutable","name":"a","nameLocation":"3044:1:21","nodeType":"VariableDeclaration","scope":5578,"src":"3036:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5559,"name":"uint256","nodeType":"ElementaryTypeName","src":"3036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5562,"mutability":"mutable","name":"b","nameLocation":"3055:1:21","nodeType":"VariableDeclaration","scope":5578,"src":"3047:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5561,"name":"uint256","nodeType":"ElementaryTypeName","src":"3047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3035:22:21"},"returnParameters":{"id":5568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5565,"mutability":"mutable","name":"success","nameLocation":"3086:7:21","nodeType":"VariableDeclaration","scope":5578,"src":"3081:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5564,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5567,"mutability":"mutable","name":"result","nameLocation":"3103:6:21","nodeType":"VariableDeclaration","scope":5578,"src":"3095:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5566,"name":"uint256","nodeType":"ElementaryTypeName","src":"3095:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3080:30:21"},"scope":7038,"src":"3020:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5598,"nodeType":"Block","src":"3567:231:21","statements":[{"id":5597,"nodeType":"UncheckedBlock","src":"3577:215:21","statements":[{"expression":{"id":5594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5590,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5586,"src":"3601:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5583,"src":"3611:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3615:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3611:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3601:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5595,"nodeType":"ExpressionStatement","src":"3601:15:21"},{"AST":{"nodeType":"YulBlock","src":"3655:127:21","statements":[{"nodeType":"YulAssignment","src":"3749:19:21","value":{"arguments":[{"name":"a","nodeType":"YulIdentifier","src":"3763:1:21"},{"name":"b","nodeType":"YulIdentifier","src":"3766:1:21"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"3759:3:21"},"nodeType":"YulFunctionCall","src":"3759:9:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3749:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5581,"isOffset":false,"isSlot":false,"src":"3763:1:21","valueSize":1},{"declaration":5583,"isOffset":false,"isSlot":false,"src":"3766:1:21","valueSize":1},{"declaration":5588,"isOffset":false,"isSlot":false,"src":"3749:6:21","valueSize":1}],"flags":["memory-safe"],"id":5596,"nodeType":"InlineAssembly","src":"3630:152:21"}]}]},"documentation":{"id":5579,"nodeType":"StructuredDocumentation","src":"3348:123:21","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":5599,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"3485:6:21","nodeType":"FunctionDefinition","parameters":{"id":5584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5581,"mutability":"mutable","name":"a","nameLocation":"3500:1:21","nodeType":"VariableDeclaration","scope":5599,"src":"3492:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3492:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5583,"mutability":"mutable","name":"b","nameLocation":"3511:1:21","nodeType":"VariableDeclaration","scope":5599,"src":"3503:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5582,"name":"uint256","nodeType":"ElementaryTypeName","src":"3503:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3491:22:21"},"returnParameters":{"id":5589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5586,"mutability":"mutable","name":"success","nameLocation":"3542:7:21","nodeType":"VariableDeclaration","scope":5599,"src":"3537:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5585,"name":"bool","nodeType":"ElementaryTypeName","src":"3537:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5588,"mutability":"mutable","name":"result","nameLocation":"3559:6:21","nodeType":"VariableDeclaration","scope":5599,"src":"3551:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5587,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3536:30:21"},"scope":7038,"src":"3476:322:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5628,"nodeType":"Block","src":"3989:122:21","statements":[{"assignments":[5610,5612],"declarations":[{"constant":false,"id":5610,"mutability":"mutable","name":"success","nameLocation":"4005:7:21","nodeType":"VariableDeclaration","scope":5628,"src":"4000:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5609,"name":"bool","nodeType":"ElementaryTypeName","src":"4000:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5612,"mutability":"mutable","name":"result","nameLocation":"4022:6:21","nodeType":"VariableDeclaration","scope":5628,"src":"4014:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5611,"name":"uint256","nodeType":"ElementaryTypeName","src":"4014:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5617,"initialValue":{"arguments":[{"id":5614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5602,"src":"4039:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5604,"src":"4042:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5613,"name":"tryAdd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5492,"src":"4032:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5616,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4032:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3999:45:21"},{"expression":{"arguments":[{"id":5619,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5610,"src":"4069:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5620,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5612,"src":"4078:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5623,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4091:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5622,"name":"uint256","nodeType":"ElementaryTypeName","src":"4091:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5621,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4086:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4086:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5625,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4100:3:21","memberName":"max","nodeType":"MemberAccess","src":"4086:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"4061:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4061:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5608,"id":5627,"nodeType":"Return","src":"4054:50:21"}]},"documentation":{"id":5600,"nodeType":"StructuredDocumentation","src":"3804:103:21","text":" @dev Unsigned saturating addition, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5629,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingAdd","nameLocation":"3921:13:21","nodeType":"FunctionDefinition","parameters":{"id":5605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5602,"mutability":"mutable","name":"a","nameLocation":"3943:1:21","nodeType":"VariableDeclaration","scope":5629,"src":"3935:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5601,"name":"uint256","nodeType":"ElementaryTypeName","src":"3935:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5604,"mutability":"mutable","name":"b","nameLocation":"3954:1:21","nodeType":"VariableDeclaration","scope":5629,"src":"3946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5603,"name":"uint256","nodeType":"ElementaryTypeName","src":"3946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3934:22:21"},"returnParameters":{"id":5608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5607,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5629,"src":"3980:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5606,"name":"uint256","nodeType":"ElementaryTypeName","src":"3980:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3979:9:21"},"scope":7038,"src":"3912:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5648,"nodeType":"Block","src":"4294:73:21","statements":[{"assignments":[null,5640],"declarations":[null,{"constant":false,"id":5640,"mutability":"mutable","name":"result","nameLocation":"4315:6:21","nodeType":"VariableDeclaration","scope":5648,"src":"4307:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5639,"name":"uint256","nodeType":"ElementaryTypeName","src":"4307:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5645,"initialValue":{"arguments":[{"id":5642,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5632,"src":"4332:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5643,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5634,"src":"4335:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5641,"name":"trySub","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5527,"src":"4325:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4325:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4304:33:21"},{"expression":{"id":5646,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5640,"src":"4354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5638,"id":5647,"nodeType":"Return","src":"4347:13:21"}]},"documentation":{"id":5630,"nodeType":"StructuredDocumentation","src":"4117:95:21","text":" @dev Unsigned saturating subtraction, bounds to zero instead of overflowing."},"id":5649,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingSub","nameLocation":"4226:13:21","nodeType":"FunctionDefinition","parameters":{"id":5635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5632,"mutability":"mutable","name":"a","nameLocation":"4248:1:21","nodeType":"VariableDeclaration","scope":5649,"src":"4240:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5631,"name":"uint256","nodeType":"ElementaryTypeName","src":"4240:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5634,"mutability":"mutable","name":"b","nameLocation":"4259:1:21","nodeType":"VariableDeclaration","scope":5649,"src":"4251:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4251:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4239:22:21"},"returnParameters":{"id":5638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5637,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5649,"src":"4285:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5636,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4284:9:21"},"scope":7038,"src":"4217:150:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"4564:122:21","statements":[{"assignments":[5660,5662],"declarations":[{"constant":false,"id":5660,"mutability":"mutable","name":"success","nameLocation":"4580:7:21","nodeType":"VariableDeclaration","scope":5678,"src":"4575:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5659,"name":"bool","nodeType":"ElementaryTypeName","src":"4575:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5662,"mutability":"mutable","name":"result","nameLocation":"4597:6:21","nodeType":"VariableDeclaration","scope":5678,"src":"4589:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5661,"name":"uint256","nodeType":"ElementaryTypeName","src":"4589:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5667,"initialValue":{"arguments":[{"id":5664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5652,"src":"4614:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"4617:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5663,"name":"tryMul","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5557,"src":"4607:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (bool,uint256)"}},"id":5666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4607:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"4574:45:21"},{"expression":{"arguments":[{"id":5669,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5660,"src":"4644:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5670,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5662,"src":"4653:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"arguments":[{"id":5673,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4666:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5672,"name":"uint256","nodeType":"ElementaryTypeName","src":"4666:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":5671,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4661:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4661:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":5675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4675:3:21","memberName":"max","nodeType":"MemberAccess","src":"4661:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5668,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"4636:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4636:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"4629:50:21"}]},"documentation":{"id":5650,"nodeType":"StructuredDocumentation","src":"4373:109:21","text":" @dev Unsigned saturating multiplication, bounds to `2²⁵⁶ - 1` instead of overflowing."},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"saturatingMul","nameLocation":"4496:13:21","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5652,"mutability":"mutable","name":"a","nameLocation":"4518:1:21","nodeType":"VariableDeclaration","scope":5679,"src":"4510:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5651,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5654,"mutability":"mutable","name":"b","nameLocation":"4529:1:21","nodeType":"VariableDeclaration","scope":5679,"src":"4521:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"4521:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4509:22:21"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"4555:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5656,"name":"uint256","nodeType":"ElementaryTypeName","src":"4555:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4554:9:21"},"scope":7038,"src":"4487:199:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5705,"nodeType":"Block","src":"5158:207:21","statements":[{"id":5704,"nodeType":"UncheckedBlock","src":"5168:191:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"5306:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5692,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5684,"src":"5312:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5693,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5686,"src":"5316:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5312:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5695,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5311:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":5698,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"5337:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5696,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"5321:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5330:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"5321:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5321:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5311:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5701,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5310:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5306:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5690,"id":5703,"nodeType":"Return","src":"5299:49:21"}]}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"4692:374:21","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":5706,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"5080:7:21","nodeType":"FunctionDefinition","parameters":{"id":5687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"condition","nameLocation":"5093:9:21","nodeType":"VariableDeclaration","scope":5706,"src":"5088:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":5681,"name":"bool","nodeType":"ElementaryTypeName","src":"5088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":5684,"mutability":"mutable","name":"a","nameLocation":"5112:1:21","nodeType":"VariableDeclaration","scope":5706,"src":"5104:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5683,"name":"uint256","nodeType":"ElementaryTypeName","src":"5104:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5686,"mutability":"mutable","name":"b","nameLocation":"5123:1:21","nodeType":"VariableDeclaration","scope":5706,"src":"5115:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5685,"name":"uint256","nodeType":"ElementaryTypeName","src":"5115:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5087:38:21"},"returnParameters":{"id":5690,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5689,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5706,"src":"5149:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5688,"name":"uint256","nodeType":"ElementaryTypeName","src":"5149:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5148:9:21"},"scope":7038,"src":"5071:294:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5724,"nodeType":"Block","src":"5502:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5717,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5527:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":5718,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"5531:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5527:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5709,"src":"5534:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5721,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5711,"src":"5537:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5716,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"5519:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5519:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5715,"id":5723,"nodeType":"Return","src":"5512:27:21"}]},"documentation":{"id":5707,"nodeType":"StructuredDocumentation","src":"5371:59:21","text":" @dev Returns the largest of two numbers."},"id":5725,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"5444:3:21","nodeType":"FunctionDefinition","parameters":{"id":5712,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5709,"mutability":"mutable","name":"a","nameLocation":"5456:1:21","nodeType":"VariableDeclaration","scope":5725,"src":"5448:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5708,"name":"uint256","nodeType":"ElementaryTypeName","src":"5448:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5711,"mutability":"mutable","name":"b","nameLocation":"5467:1:21","nodeType":"VariableDeclaration","scope":5725,"src":"5459:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5710,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5447:22:21"},"returnParameters":{"id":5715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5714,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5725,"src":"5493:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5713,"name":"uint256","nodeType":"ElementaryTypeName","src":"5493:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5492:9:21"},"scope":7038,"src":"5435:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5743,"nodeType":"Block","src":"5684:44:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5736,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"5709:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5737,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"5713:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5709:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":5739,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5728,"src":"5716:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5740,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5730,"src":"5719:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5735,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"5701:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5701:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5734,"id":5742,"nodeType":"Return","src":"5694:27:21"}]},"documentation":{"id":5726,"nodeType":"StructuredDocumentation","src":"5552:60:21","text":" @dev Returns the smallest of two numbers."},"id":5744,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"5626:3:21","nodeType":"FunctionDefinition","parameters":{"id":5731,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5728,"mutability":"mutable","name":"a","nameLocation":"5638:1:21","nodeType":"VariableDeclaration","scope":5744,"src":"5630:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5727,"name":"uint256","nodeType":"ElementaryTypeName","src":"5630:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5730,"mutability":"mutable","name":"b","nameLocation":"5649:1:21","nodeType":"VariableDeclaration","scope":5744,"src":"5641:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5729,"name":"uint256","nodeType":"ElementaryTypeName","src":"5641:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5629:22:21"},"returnParameters":{"id":5734,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5733,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5744,"src":"5675:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5732,"name":"uint256","nodeType":"ElementaryTypeName","src":"5675:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5674:9:21"},"scope":7038,"src":"5617:111:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5766,"nodeType":"Block","src":"5912:82:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5754,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"5967:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":5755,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"5971:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5967:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5966:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5758,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5747,"src":"5977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":5759,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5749,"src":"5981:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5977:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5761,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5976:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":5762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"5976:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5966:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5753,"id":5765,"nodeType":"Return","src":"5959:28:21"}]},"documentation":{"id":5745,"nodeType":"StructuredDocumentation","src":"5734:102:21","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":5767,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"5850:7:21","nodeType":"FunctionDefinition","parameters":{"id":5750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5747,"mutability":"mutable","name":"a","nameLocation":"5866:1:21","nodeType":"VariableDeclaration","scope":5767,"src":"5858:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5746,"name":"uint256","nodeType":"ElementaryTypeName","src":"5858:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5749,"mutability":"mutable","name":"b","nameLocation":"5877:1:21","nodeType":"VariableDeclaration","scope":5767,"src":"5869:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5869:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5857:22:21"},"returnParameters":{"id":5753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5752,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5767,"src":"5903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5751,"name":"uint256","nodeType":"ElementaryTypeName","src":"5903:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5902:9:21"},"scope":7038,"src":"5841:153:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5807,"nodeType":"Block","src":"6286:633:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5777,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"6300:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6305:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6300:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5788,"nodeType":"IfStatement","src":"6296:150:21","trueBody":{"id":5787,"nodeType":"Block","src":"6308:138:21","statements":[{"expression":{"arguments":[{"expression":{"id":5783,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"6412:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":5784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6418:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"6412:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5780,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"6400:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":5782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6406:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"6400:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5785,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6400:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5786,"nodeType":"ExpressionStatement","src":"6400:35:21"}]}},{"id":5806,"nodeType":"UncheckedBlock","src":"6829:84:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5791,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"6876:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6880:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6876:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5789,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"6860:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":5790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6869:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"6860:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6860:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5795,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5770,"src":"6887:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":5796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6887:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5798,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6886:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5799,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5772,"src":"6896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6886:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":5801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6900:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6886:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5803,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6885:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6860:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5776,"id":5805,"nodeType":"Return","src":"6853:49:21"}]}]},"documentation":{"id":5768,"nodeType":"StructuredDocumentation","src":"6000:210:21","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":5808,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"6224:7:21","nodeType":"FunctionDefinition","parameters":{"id":5773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5770,"mutability":"mutable","name":"a","nameLocation":"6240:1:21","nodeType":"VariableDeclaration","scope":5808,"src":"6232:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5769,"name":"uint256","nodeType":"ElementaryTypeName","src":"6232:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5772,"mutability":"mutable","name":"b","nameLocation":"6251:1:21","nodeType":"VariableDeclaration","scope":5808,"src":"6243:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5771,"name":"uint256","nodeType":"ElementaryTypeName","src":"6243:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6231:22:21"},"returnParameters":{"id":5776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5775,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5808,"src":"6277:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5774,"name":"uint256","nodeType":"ElementaryTypeName","src":"6277:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6276:9:21"},"scope":7038,"src":"6215:704:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5943,"nodeType":"Block","src":"7340:3585:21","statements":[{"id":5942,"nodeType":"UncheckedBlock","src":"7350:3569:21","statements":[{"assignments":[5821,5823],"declarations":[{"constant":false,"id":5821,"mutability":"mutable","name":"high","nameLocation":"7383:4:21","nodeType":"VariableDeclaration","scope":5942,"src":"7375:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5820,"name":"uint256","nodeType":"ElementaryTypeName","src":"7375:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5823,"mutability":"mutable","name":"low","nameLocation":"7397:3:21","nodeType":"VariableDeclaration","scope":5942,"src":"7389:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5822,"name":"uint256","nodeType":"ElementaryTypeName","src":"7389:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5828,"initialValue":{"arguments":[{"id":5825,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5811,"src":"7411:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5826,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"7414:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5824,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"7404:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7404:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"7374:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5829,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"7498:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7506:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7498:9:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5837,"nodeType":"IfStatement","src":"7494:365:21","trueBody":{"id":5836,"nodeType":"Block","src":"7509:350:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5832,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"7827:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5833,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"7833:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7827:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5819,"id":5835,"nodeType":"Return","src":"7820:24:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5838,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"7969:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5839,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"7984:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7969:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5856,"nodeType":"IfStatement","src":"7965:142:21","trueBody":{"id":5855,"nodeType":"Block","src":"7990:117:21","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5845,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"8028:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":5846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8043:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8028:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":5848,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"8046:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":5849,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8052:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"8046:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":5850,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"8070:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":5851,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8076:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3688,"src":"8070:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5844,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"8020:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":5852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8020:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5841,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"8008:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":5843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8014:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"8008:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8008:84:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5854,"nodeType":"ExpressionStatement","src":"8008:84:21"}]}},{"assignments":[5858],"declarations":[{"constant":false,"id":5858,"mutability":"mutable","name":"remainder","nameLocation":"8367:9:21","nodeType":"VariableDeclaration","scope":5942,"src":"8359:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5857,"name":"uint256","nodeType":"ElementaryTypeName","src":"8359:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5859,"nodeType":"VariableDeclarationStatement","src":"8359:17:21"},{"AST":{"nodeType":"YulBlock","src":"8415:283:21","statements":[{"nodeType":"YulAssignment","src":"8484:38:21","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8504:1:21"},{"name":"y","nodeType":"YulIdentifier","src":"8507:1:21"},{"name":"denominator","nodeType":"YulIdentifier","src":"8510:11:21"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"8497:6:21"},"nodeType":"YulFunctionCall","src":"8497:25:21"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"8484:9:21"}]},{"nodeType":"YulAssignment","src":"8604:37:21","value":{"arguments":[{"name":"high","nodeType":"YulIdentifier","src":"8616:4:21"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"8625:9:21"},{"name":"low","nodeType":"YulIdentifier","src":"8636:3:21"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8622:2:21"},"nodeType":"YulFunctionCall","src":"8622:18:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8612:3:21"},"nodeType":"YulFunctionCall","src":"8612:29:21"},"variableNames":[{"name":"high","nodeType":"YulIdentifier","src":"8604:4:21"}]},{"nodeType":"YulAssignment","src":"8658:26:21","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"8669:3:21"},{"name":"remainder","nodeType":"YulIdentifier","src":"8674:9:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8665:3:21"},"nodeType":"YulFunctionCall","src":"8665:19:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"8658:3:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5815,"isOffset":false,"isSlot":false,"src":"8510:11:21","valueSize":1},{"declaration":5821,"isOffset":false,"isSlot":false,"src":"8604:4:21","valueSize":1},{"declaration":5821,"isOffset":false,"isSlot":false,"src":"8616:4:21","valueSize":1},{"declaration":5823,"isOffset":false,"isSlot":false,"src":"8636:3:21","valueSize":1},{"declaration":5823,"isOffset":false,"isSlot":false,"src":"8658:3:21","valueSize":1},{"declaration":5823,"isOffset":false,"isSlot":false,"src":"8669:3:21","valueSize":1},{"declaration":5858,"isOffset":false,"isSlot":false,"src":"8484:9:21","valueSize":1},{"declaration":5858,"isOffset":false,"isSlot":false,"src":"8625:9:21","valueSize":1},{"declaration":5858,"isOffset":false,"isSlot":false,"src":"8674:9:21","valueSize":1},{"declaration":5811,"isOffset":false,"isSlot":false,"src":"8504:1:21","valueSize":1},{"declaration":5813,"isOffset":false,"isSlot":false,"src":"8507:1:21","valueSize":1}],"flags":["memory-safe"],"id":5860,"nodeType":"InlineAssembly","src":"8390:308:21"},{"assignments":[5862],"declarations":[{"constant":false,"id":5862,"mutability":"mutable","name":"twos","nameLocation":"8910:4:21","nodeType":"VariableDeclaration","scope":5942,"src":"8902:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5861,"name":"uint256","nodeType":"ElementaryTypeName","src":"8902:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5869,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5868,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5863,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"8917:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":5864,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8932:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5865,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"8936:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8932:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5867,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8931:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8917:31:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8902:46:21"},{"AST":{"nodeType":"YulBlock","src":"8987:359:21","statements":[{"nodeType":"YulAssignment","src":"9052:37:21","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"9071:11:21"},{"name":"twos","nodeType":"YulIdentifier","src":"9084:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9067:3:21"},"nodeType":"YulFunctionCall","src":"9067:22:21"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"9052:11:21"}]},{"nodeType":"YulAssignment","src":"9153:21:21","value":{"arguments":[{"name":"low","nodeType":"YulIdentifier","src":"9164:3:21"},{"name":"twos","nodeType":"YulIdentifier","src":"9169:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9160:3:21"},"nodeType":"YulFunctionCall","src":"9160:14:21"},"variableNames":[{"name":"low","nodeType":"YulIdentifier","src":"9153:3:21"}]},{"nodeType":"YulAssignment","src":"9293:39:21","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9313:1:21","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"9316:4:21"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9309:3:21"},"nodeType":"YulFunctionCall","src":"9309:12:21"},{"name":"twos","nodeType":"YulIdentifier","src":"9323:4:21"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"9305:3:21"},"nodeType":"YulFunctionCall","src":"9305:23:21"},{"kind":"number","nodeType":"YulLiteral","src":"9330:1:21","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9301:3:21"},"nodeType":"YulFunctionCall","src":"9301:31:21"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"9293:4:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":5815,"isOffset":false,"isSlot":false,"src":"9052:11:21","valueSize":1},{"declaration":5815,"isOffset":false,"isSlot":false,"src":"9071:11:21","valueSize":1},{"declaration":5823,"isOffset":false,"isSlot":false,"src":"9153:3:21","valueSize":1},{"declaration":5823,"isOffset":false,"isSlot":false,"src":"9164:3:21","valueSize":1},{"declaration":5862,"isOffset":false,"isSlot":false,"src":"9084:4:21","valueSize":1},{"declaration":5862,"isOffset":false,"isSlot":false,"src":"9169:4:21","valueSize":1},{"declaration":5862,"isOffset":false,"isSlot":false,"src":"9293:4:21","valueSize":1},{"declaration":5862,"isOffset":false,"isSlot":false,"src":"9316:4:21","valueSize":1},{"declaration":5862,"isOffset":false,"isSlot":false,"src":"9323:4:21","valueSize":1}],"flags":["memory-safe"],"id":5870,"nodeType":"InlineAssembly","src":"8962:384:21"},{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5871,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"9409:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5872,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5821,"src":"9416:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5873,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5862,"src":"9423:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9416:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9409:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5876,"nodeType":"ExpressionStatement","src":"9409:18:21"},{"assignments":[5878],"declarations":[{"constant":false,"id":5878,"mutability":"mutable","name":"inverse","nameLocation":"9770:7:21","nodeType":"VariableDeclaration","scope":5942,"src":"9762:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5877,"name":"uint256","nodeType":"ElementaryTypeName","src":"9762:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5885,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":5879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9781:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5880,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"9785:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9781:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5882,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9780:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":5883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9780:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9762:39:21"},{"expression":{"id":5892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5886,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10018:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10029:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5888,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"10033:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5889,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10047:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10033:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10029:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10018:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5893,"nodeType":"ExpressionStatement","src":"10018:36:21"},{"expression":{"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5894,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10088:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10099:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5896,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"10103:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5897,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10117:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10103:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10099:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10088:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5901,"nodeType":"ExpressionStatement","src":"10088:36:21"},{"expression":{"id":5908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5902,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10160:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10171:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5904,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"10175:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5905,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10189:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10175:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10171:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10160:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5909,"nodeType":"ExpressionStatement","src":"10160:36:21"},{"expression":{"id":5916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5910,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10231:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10242:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5912,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"10246:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5913,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10260:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10246:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10242:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10231:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5917,"nodeType":"ExpressionStatement","src":"10231:36:21"},{"expression":{"id":5924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5918,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10304:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10315:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5920,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"10319:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5921,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10333:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10319:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10315:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10304:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5925,"nodeType":"ExpressionStatement","src":"10304:36:21"},{"expression":{"id":5932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5926,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10378:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":5927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10389:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5928,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5815,"src":"10393:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5929,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10407:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10393:21:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10389:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10378:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5933,"nodeType":"ExpressionStatement","src":"10378:36:21"},{"expression":{"id":5938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5934,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"10859:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5935,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5823,"src":"10868:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5936,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5878,"src":"10874:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10868:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10859:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5939,"nodeType":"ExpressionStatement","src":"10859:22:21"},{"expression":{"id":5940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5818,"src":"10902:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5819,"id":5941,"nodeType":"Return","src":"10895:13:21"}]}]},"documentation":{"id":5809,"nodeType":"StructuredDocumentation","src":"6925:312:21","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":5944,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"7251:6:21","nodeType":"FunctionDefinition","parameters":{"id":5816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5811,"mutability":"mutable","name":"x","nameLocation":"7266:1:21","nodeType":"VariableDeclaration","scope":5944,"src":"7258:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5810,"name":"uint256","nodeType":"ElementaryTypeName","src":"7258:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5813,"mutability":"mutable","name":"y","nameLocation":"7277:1:21","nodeType":"VariableDeclaration","scope":5944,"src":"7269:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5812,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5815,"mutability":"mutable","name":"denominator","nameLocation":"7288:11:21","nodeType":"VariableDeclaration","scope":5944,"src":"7280:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5814,"name":"uint256","nodeType":"ElementaryTypeName","src":"7280:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7257:43:21"},"returnParameters":{"id":5819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5818,"mutability":"mutable","name":"result","nameLocation":"7332:6:21","nodeType":"VariableDeclaration","scope":5944,"src":"7324:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5817,"name":"uint256","nodeType":"ElementaryTypeName","src":"7324:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7323:16:21"},"scope":7038,"src":"7242:3683:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5980,"nodeType":"Block","src":"11164:128:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5960,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"11188:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5961,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"11191:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5962,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"11194:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5959,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[5944,5981],"referencedDeclaration":5944,"src":"11181:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5963,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11181:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5967,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5954,"src":"11242:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":5966,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"11225:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5429_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":5968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11225:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5970,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5947,"src":"11262:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5971,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5949,"src":"11265:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5972,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5951,"src":"11268:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5969,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"11255:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":5973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11255:25:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":5974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11283:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11255:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11225:59:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":5964,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"11209:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":5965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11218:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"11209:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":5977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11209:76:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11181:104:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5958,"id":5979,"nodeType":"Return","src":"11174:111:21"}]},"documentation":{"id":5945,"nodeType":"StructuredDocumentation","src":"10931:118:21","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":5981,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"11063:6:21","nodeType":"FunctionDefinition","parameters":{"id":5955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5947,"mutability":"mutable","name":"x","nameLocation":"11078:1:21","nodeType":"VariableDeclaration","scope":5981,"src":"11070:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5946,"name":"uint256","nodeType":"ElementaryTypeName","src":"11070:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5949,"mutability":"mutable","name":"y","nameLocation":"11089:1:21","nodeType":"VariableDeclaration","scope":5981,"src":"11081:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5948,"name":"uint256","nodeType":"ElementaryTypeName","src":"11081:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5951,"mutability":"mutable","name":"denominator","nameLocation":"11100:11:21","nodeType":"VariableDeclaration","scope":5981,"src":"11092:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5950,"name":"uint256","nodeType":"ElementaryTypeName","src":"11092:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5954,"mutability":"mutable","name":"rounding","nameLocation":"11122:8:21","nodeType":"VariableDeclaration","scope":5981,"src":"11113:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":5953,"nodeType":"UserDefinedTypeName","pathNode":{"id":5952,"name":"Rounding","nameLocations":["11113:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"11113:8:21"},"referencedDeclaration":5429,"src":"11113:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11069:62:21"},"returnParameters":{"id":5958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5981,"src":"11155:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5956,"name":"uint256","nodeType":"ElementaryTypeName","src":"11155:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11154:9:21"},"scope":7038,"src":"11054:238:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6030,"nodeType":"Block","src":"11500:245:21","statements":[{"id":6029,"nodeType":"UncheckedBlock","src":"11510:229:21","statements":[{"assignments":[5994,5996],"declarations":[{"constant":false,"id":5994,"mutability":"mutable","name":"high","nameLocation":"11543:4:21","nodeType":"VariableDeclaration","scope":6029,"src":"11535:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5993,"name":"uint256","nodeType":"ElementaryTypeName","src":"11535:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5996,"mutability":"mutable","name":"low","nameLocation":"11557:3:21","nodeType":"VariableDeclaration","scope":6029,"src":"11549:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5995,"name":"uint256","nodeType":"ElementaryTypeName","src":"11549:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6001,"initialValue":{"arguments":[{"id":5998,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5984,"src":"11571:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5999,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5986,"src":"11574:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5997,"name":"mul512","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5457,"src":"11564:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256,uint256)"}},"id":6000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11564:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"11534:42:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6002,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"11594:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11602:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6004,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"11607:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11602:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11594:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6015,"nodeType":"IfStatement","src":"11590:86:21","trueBody":{"id":6014,"nodeType":"Block","src":"11610:66:21","statements":[{"expression":{"arguments":[{"expression":{"id":6010,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"11640:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":6011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11646:14:21","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":3688,"src":"11640:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6007,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"11628:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11634:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"11628:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6012,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11628:33:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6013,"nodeType":"ExpressionStatement","src":"11628:33:21"}]}},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6016,"name":"high","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5994,"src":"11697:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint16","typeString":"uint16"},"id":6019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"323536","id":6017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11706:3:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":6018,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"11712:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11706:7:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}}],"id":6020,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11705:9:21","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"11697:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6022,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11696:19:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6023,"name":"low","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5996,"src":"11719:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6024,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5988,"src":"11726:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11719:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6026,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11718:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11696:32:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5992,"id":6028,"nodeType":"Return","src":"11689:39:21"}]}]},"documentation":{"id":5982,"nodeType":"StructuredDocumentation","src":"11298:111:21","text":" @dev Calculates floor(x * y >> n) with full precision. Throws if result overflows a uint256."},"id":6031,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11423:6:21","nodeType":"FunctionDefinition","parameters":{"id":5989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5984,"mutability":"mutable","name":"x","nameLocation":"11438:1:21","nodeType":"VariableDeclaration","scope":6031,"src":"11430:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5983,"name":"uint256","nodeType":"ElementaryTypeName","src":"11430:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5986,"mutability":"mutable","name":"y","nameLocation":"11449:1:21","nodeType":"VariableDeclaration","scope":6031,"src":"11441:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5985,"name":"uint256","nodeType":"ElementaryTypeName","src":"11441:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":5988,"mutability":"mutable","name":"n","nameLocation":"11458:1:21","nodeType":"VariableDeclaration","scope":6031,"src":"11452:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5987,"name":"uint8","nodeType":"ElementaryTypeName","src":"11452:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"11429:31:21"},"returnParameters":{"id":5992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5991,"mutability":"mutable","name":"result","nameLocation":"11492:6:21","nodeType":"VariableDeclaration","scope":6031,"src":"11484:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5990,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:16:21"},"scope":7038,"src":"11414:331:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"11963:113:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6047,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"11987:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6048,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"11990:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6049,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"11993:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":6046,"name":"mulShr","nodeType":"Identifier","overloadedDeclarations":[6031,6070],"referencedDeclaration":6031,"src":"11980:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint8_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint8) pure returns (uint256)"}},"id":6050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11980:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6054,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6041,"src":"12031:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":6053,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"12014:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5429_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12014:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6057,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6034,"src":"12051:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6058,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6036,"src":"12054:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6059,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12057:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6060,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6038,"src":"12062:1:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6056,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"12044:6:21","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":6062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12044:20:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12067:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12044:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12014:54:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6051,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"11998:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12007:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"11998:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11998:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11980:89:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6045,"id":6068,"nodeType":"Return","src":"11973:96:21"}]},"documentation":{"id":6032,"nodeType":"StructuredDocumentation","src":"11751:109:21","text":" @dev Calculates x * y >> n with full precision, following the selected rounding direction."},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"mulShr","nameLocation":"11874:6:21","nodeType":"FunctionDefinition","parameters":{"id":6042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6034,"mutability":"mutable","name":"x","nameLocation":"11889:1:21","nodeType":"VariableDeclaration","scope":6070,"src":"11881:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6033,"name":"uint256","nodeType":"ElementaryTypeName","src":"11881:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6036,"mutability":"mutable","name":"y","nameLocation":"11900:1:21","nodeType":"VariableDeclaration","scope":6070,"src":"11892:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6035,"name":"uint256","nodeType":"ElementaryTypeName","src":"11892:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6038,"mutability":"mutable","name":"n","nameLocation":"11909:1:21","nodeType":"VariableDeclaration","scope":6070,"src":"11903:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":6037,"name":"uint8","nodeType":"ElementaryTypeName","src":"11903:5:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":6041,"mutability":"mutable","name":"rounding","nameLocation":"11921:8:21","nodeType":"VariableDeclaration","scope":6070,"src":"11912:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":6040,"nodeType":"UserDefinedTypeName","pathNode":{"id":6039,"name":"Rounding","nameLocations":["11912:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"11912:8:21"},"referencedDeclaration":5429,"src":"11912:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"11880:50:21"},"returnParameters":{"id":6045,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6044,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6070,"src":"11954:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6043,"name":"uint256","nodeType":"ElementaryTypeName","src":"11954:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11953:9:21"},"scope":7038,"src":"11865:211:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6166,"nodeType":"Block","src":"12710:1849:21","statements":[{"id":6165,"nodeType":"UncheckedBlock","src":"12720:1833:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6080,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"12748:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12753:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12748:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6085,"nodeType":"IfStatement","src":"12744:20:21","trueBody":{"expression":{"hexValue":"30","id":6083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12763:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6079,"id":6084,"nodeType":"Return","src":"12756:8:21"}},{"assignments":[6087],"declarations":[{"constant":false,"id":6087,"mutability":"mutable","name":"remainder","nameLocation":"13243:9:21","nodeType":"VariableDeclaration","scope":6165,"src":"13235:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6086,"name":"uint256","nodeType":"ElementaryTypeName","src":"13235:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6091,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6088,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"13255:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":6089,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"13259:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13255:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13235:25:21"},{"assignments":[6093],"declarations":[{"constant":false,"id":6093,"mutability":"mutable","name":"gcd","nameLocation":"13282:3:21","nodeType":"VariableDeclaration","scope":6165,"src":"13274:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6092,"name":"uint256","nodeType":"ElementaryTypeName","src":"13274:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6095,"initialValue":{"id":6094,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"13288:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13274:15:21"},{"assignments":[6097],"declarations":[{"constant":false,"id":6097,"mutability":"mutable","name":"x","nameLocation":"13432:1:21","nodeType":"VariableDeclaration","scope":6165,"src":"13425:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6096,"name":"int256","nodeType":"ElementaryTypeName","src":"13425:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6099,"initialValue":{"hexValue":"30","id":6098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13436:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13425:12:21"},{"assignments":[6101],"declarations":[{"constant":false,"id":6101,"mutability":"mutable","name":"y","nameLocation":"13458:1:21","nodeType":"VariableDeclaration","scope":6165,"src":"13451:8:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6100,"name":"int256","nodeType":"ElementaryTypeName","src":"13451:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6103,"initialValue":{"hexValue":"31","id":6102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13462:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"13451:12:21"},{"body":{"id":6140,"nodeType":"Block","src":"13501:882:21","statements":[{"assignments":[6108],"declarations":[{"constant":false,"id":6108,"mutability":"mutable","name":"quotient","nameLocation":"13527:8:21","nodeType":"VariableDeclaration","scope":6140,"src":"13519:16:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6107,"name":"uint256","nodeType":"ElementaryTypeName","src":"13519:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6112,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6109,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"13538:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6110,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13544:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13538:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"13519:34:21"},{"expression":{"id":6123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6113,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"13573:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6114,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13578:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6115,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13572:16:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6116,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13678:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6117,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"13923:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6118,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13929:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6119,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"13941:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13929:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13923:26:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6122,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13591:376:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13572:395:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6124,"nodeType":"ExpressionStatement","src":"13572:395:21"},{"expression":{"id":6138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":6125,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"13987:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6126,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"13990:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6127,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13986:6:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":6128,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"14072:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6129,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"14326:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6130,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6101,"src":"14330:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":6133,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6108,"src":"14341:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14334:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6131,"name":"int256","nodeType":"ElementaryTypeName","src":"14334:6:21","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14334:16:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14330:20:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"14326:24:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6137,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13995:373:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"13986:382:21","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6139,"nodeType":"ExpressionStatement","src":"13986:382:21"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6104,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6087,"src":"13485:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13498:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13485:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6141,"nodeType":"WhileStatement","src":"13478:905:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6142,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6093,"src":"14401:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":6143,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14408:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14401:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6147,"nodeType":"IfStatement","src":"14397:22:21","trueBody":{"expression":{"hexValue":"30","id":6145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14418:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":6079,"id":6146,"nodeType":"Return","src":"14411:8:21"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6149,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"14470:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":6150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14474:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14470:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6152,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6075,"src":"14477:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":6156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"14489:2:21","subExpression":{"id":6155,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"14490:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14481:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6153,"name":"uint256","nodeType":"ElementaryTypeName","src":"14481:7:21","typeDescriptions":{}}},"id":6157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14481:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14477:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":6161,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6097,"src":"14502:1:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14494:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6159,"name":"uint256","nodeType":"ElementaryTypeName","src":"14494:7:21","typeDescriptions":{}}},"id":6162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14494:10:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6148,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5706,"src":"14462:7:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":6163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14462:43:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6079,"id":6164,"nodeType":"Return","src":"14455:50:21"}]}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"12082:553:21","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":6167,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"12649:6:21","nodeType":"FunctionDefinition","parameters":{"id":6076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"a","nameLocation":"12664:1:21","nodeType":"VariableDeclaration","scope":6167,"src":"12656:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6072,"name":"uint256","nodeType":"ElementaryTypeName","src":"12656:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6075,"mutability":"mutable","name":"n","nameLocation":"12675:1:21","nodeType":"VariableDeclaration","scope":6167,"src":"12667:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6074,"name":"uint256","nodeType":"ElementaryTypeName","src":"12667:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:22:21"},"returnParameters":{"id":6079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6078,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6167,"src":"12701:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6077,"name":"uint256","nodeType":"ElementaryTypeName","src":"12701:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12700:9:21"},"scope":7038,"src":"12640:1919:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6187,"nodeType":"Block","src":"15159:82:21","statements":[{"id":6186,"nodeType":"UncheckedBlock","src":"15169:66:21","statements":[{"expression":{"arguments":[{"id":6179,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6170,"src":"15212:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6180,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"15215:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":6181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"15215:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6183,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6172,"src":"15222:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6177,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7038,"src":"15200:4:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$7038_$","typeString":"type(library Math)"}},"id":6178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15205:6:21","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":6224,"src":"15200:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":6184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15200:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6176,"id":6185,"nodeType":"Return","src":"15193:31:21"}]}]},"documentation":{"id":6168,"nodeType":"StructuredDocumentation","src":"14565:514:21","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":6188,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"15093:11:21","nodeType":"FunctionDefinition","parameters":{"id":6173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6170,"mutability":"mutable","name":"a","nameLocation":"15113:1:21","nodeType":"VariableDeclaration","scope":6188,"src":"15105:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6169,"name":"uint256","nodeType":"ElementaryTypeName","src":"15105:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6172,"mutability":"mutable","name":"p","nameLocation":"15124:1:21","nodeType":"VariableDeclaration","scope":6188,"src":"15116:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6171,"name":"uint256","nodeType":"ElementaryTypeName","src":"15116:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15104:22:21"},"returnParameters":{"id":6176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6188,"src":"15150:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6174,"name":"uint256","nodeType":"ElementaryTypeName","src":"15150:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15149:9:21"},"scope":7038,"src":"15084:157:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6223,"nodeType":"Block","src":"16011:174:21","statements":[{"assignments":[6201,6203],"declarations":[{"constant":false,"id":6201,"mutability":"mutable","name":"success","nameLocation":"16027:7:21","nodeType":"VariableDeclaration","scope":6223,"src":"16022:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6200,"name":"bool","nodeType":"ElementaryTypeName","src":"16022:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6203,"mutability":"mutable","name":"result","nameLocation":"16044:6:21","nodeType":"VariableDeclaration","scope":6223,"src":"16036:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6202,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6209,"initialValue":{"arguments":[{"id":6205,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6191,"src":"16064:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6206,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6193,"src":"16067:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6207,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6195,"src":"16070:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6204,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6248,6330],"referencedDeclaration":6248,"src":"16054:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":6208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16054:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"16021:51:21"},{"condition":{"id":6211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16086:8:21","subExpression":{"id":6210,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6201,"src":"16087:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6220,"nodeType":"IfStatement","src":"16082:74:21","trueBody":{"id":6219,"nodeType":"Block","src":"16096:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":6215,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16122:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":6216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16128:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"16122:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6212,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"16110:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":6214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16116:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"16110:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16110:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6218,"nodeType":"ExpressionStatement","src":"16110:35:21"}]}},{"expression":{"id":6221,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"16172:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6199,"id":6222,"nodeType":"Return","src":"16165:13:21"}]},"documentation":{"id":6189,"nodeType":"StructuredDocumentation","src":"15247:678:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":6224,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"15939:6:21","nodeType":"FunctionDefinition","parameters":{"id":6196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6191,"mutability":"mutable","name":"b","nameLocation":"15954:1:21","nodeType":"VariableDeclaration","scope":6224,"src":"15946:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6190,"name":"uint256","nodeType":"ElementaryTypeName","src":"15946:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6193,"mutability":"mutable","name":"e","nameLocation":"15965:1:21","nodeType":"VariableDeclaration","scope":6224,"src":"15957:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6192,"name":"uint256","nodeType":"ElementaryTypeName","src":"15957:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6195,"mutability":"mutable","name":"m","nameLocation":"15976:1:21","nodeType":"VariableDeclaration","scope":6224,"src":"15968:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6194,"name":"uint256","nodeType":"ElementaryTypeName","src":"15968:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15945:33:21"},"returnParameters":{"id":6199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6198,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6224,"src":"16002:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6197,"name":"uint256","nodeType":"ElementaryTypeName","src":"16002:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16001:9:21"},"scope":7038,"src":"15930:255:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6247,"nodeType":"Block","src":"17039:1493:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6238,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6231,"src":"17053:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":6239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17058:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17053:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6245,"nodeType":"IfStatement","src":"17049:29:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6241,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17069:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":6242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17076:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":6243,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"17068:10:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":6237,"id":6244,"nodeType":"Return","src":"17061:17:21"}},{"AST":{"nodeType":"YulBlock","src":"17113:1413:21","statements":[{"nodeType":"YulVariableDeclaration","src":"17127:22:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17144:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17138:5:21"},"nodeType":"YulFunctionCall","src":"17138:11:21"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"17131:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18057:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18062:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18050:6:21"},"nodeType":"YulFunctionCall","src":"18050:17:21"},"nodeType":"YulExpressionStatement","src":"18050:17:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18091:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18096:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18087:3:21"},"nodeType":"YulFunctionCall","src":"18087:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"18103:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18080:6:21"},"nodeType":"YulFunctionCall","src":"18080:28:21"},"nodeType":"YulExpressionStatement","src":"18080:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18132:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18137:4:21","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18128:3:21"},"nodeType":"YulFunctionCall","src":"18128:14:21"},{"kind":"number","nodeType":"YulLiteral","src":"18144:4:21","type":"","value":"0x20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18121:6:21"},"nodeType":"YulFunctionCall","src":"18121:28:21"},"nodeType":"YulExpressionStatement","src":"18121:28:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18173:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18178:4:21","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18169:3:21"},"nodeType":"YulFunctionCall","src":"18169:14:21"},{"name":"b","nodeType":"YulIdentifier","src":"18185:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18162:6:21"},"nodeType":"YulFunctionCall","src":"18162:25:21"},"nodeType":"YulExpressionStatement","src":"18162:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18211:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18216:4:21","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18207:3:21"},"nodeType":"YulFunctionCall","src":"18207:14:21"},{"name":"e","nodeType":"YulIdentifier","src":"18223:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18200:6:21"},"nodeType":"YulFunctionCall","src":"18200:25:21"},"nodeType":"YulExpressionStatement","src":"18200:25:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18249:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18254:4:21","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18245:3:21"},"nodeType":"YulFunctionCall","src":"18245:14:21"},{"name":"m","nodeType":"YulIdentifier","src":"18261:1:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18238:6:21"},"nodeType":"YulFunctionCall","src":"18238:25:21"},"nodeType":"YulExpressionStatement","src":"18238:25:21"},{"nodeType":"YulAssignment","src":"18425:57:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"18447:3:21"},"nodeType":"YulFunctionCall","src":"18447:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"18454:4:21","type":"","value":"0x05"},{"name":"ptr","nodeType":"YulIdentifier","src":"18460:3:21"},{"kind":"number","nodeType":"YulLiteral","src":"18465:4:21","type":"","value":"0xc0"},{"kind":"number","nodeType":"YulLiteral","src":"18471:4:21","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:21","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"18436:10:21"},"nodeType":"YulFunctionCall","src":"18436:46:21"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"18425:7:21"}]},{"nodeType":"YulAssignment","src":"18495:21:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18511:4:21","type":"","value":"0x00"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18505:5:21"},"nodeType":"YulFunctionCall","src":"18505:11:21"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"18495:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6227,"isOffset":false,"isSlot":false,"src":"18185:1:21","valueSize":1},{"declaration":6229,"isOffset":false,"isSlot":false,"src":"18223:1:21","valueSize":1},{"declaration":6231,"isOffset":false,"isSlot":false,"src":"18261:1:21","valueSize":1},{"declaration":6236,"isOffset":false,"isSlot":false,"src":"18495:6:21","valueSize":1},{"declaration":6234,"isOffset":false,"isSlot":false,"src":"18425:7:21","valueSize":1}],"flags":["memory-safe"],"id":6246,"nodeType":"InlineAssembly","src":"17088:1438:21"}]},"documentation":{"id":6225,"nodeType":"StructuredDocumentation","src":"16191:738:21","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":6248,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16943:9:21","nodeType":"FunctionDefinition","parameters":{"id":6232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6227,"mutability":"mutable","name":"b","nameLocation":"16961:1:21","nodeType":"VariableDeclaration","scope":6248,"src":"16953:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6226,"name":"uint256","nodeType":"ElementaryTypeName","src":"16953:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6229,"mutability":"mutable","name":"e","nameLocation":"16972:1:21","nodeType":"VariableDeclaration","scope":6248,"src":"16964:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6228,"name":"uint256","nodeType":"ElementaryTypeName","src":"16964:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6231,"mutability":"mutable","name":"m","nameLocation":"16983:1:21","nodeType":"VariableDeclaration","scope":6248,"src":"16975:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6230,"name":"uint256","nodeType":"ElementaryTypeName","src":"16975:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16952:33:21"},"returnParameters":{"id":6237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6234,"mutability":"mutable","name":"success","nameLocation":"17014:7:21","nodeType":"VariableDeclaration","scope":6248,"src":"17009:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6233,"name":"bool","nodeType":"ElementaryTypeName","src":"17009:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6236,"mutability":"mutable","name":"result","nameLocation":"17031:6:21","nodeType":"VariableDeclaration","scope":6248,"src":"17023:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6235,"name":"uint256","nodeType":"ElementaryTypeName","src":"17023:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17008:30:21"},"scope":7038,"src":"16934:1598:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6283,"nodeType":"Block","src":"18729:179:21","statements":[{"assignments":[6261,6263],"declarations":[{"constant":false,"id":6261,"mutability":"mutable","name":"success","nameLocation":"18745:7:21","nodeType":"VariableDeclaration","scope":6283,"src":"18740:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6260,"name":"bool","nodeType":"ElementaryTypeName","src":"18740:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6263,"mutability":"mutable","name":"result","nameLocation":"18767:6:21","nodeType":"VariableDeclaration","scope":6283,"src":"18754:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6262,"name":"bytes","nodeType":"ElementaryTypeName","src":"18754:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":6269,"initialValue":{"arguments":[{"id":6265,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6251,"src":"18787:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6266,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6253,"src":"18790:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6267,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"18793:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6264,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[6248,6330],"referencedDeclaration":6330,"src":"18777:9:21","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":6268,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18777:18:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"18739:56:21"},{"condition":{"id":6271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"18809:8:21","subExpression":{"id":6270,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6261,"src":"18810:7:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6280,"nodeType":"IfStatement","src":"18805:74:21","trueBody":{"id":6279,"nodeType":"Block","src":"18819:60:21","statements":[{"expression":{"arguments":[{"expression":{"id":6275,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"18845:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":6276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"18851:16:21","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":3692,"src":"18845:22:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":6272,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3725,"src":"18833:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$3725_$","typeString":"type(library Panic)"}},"id":6274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"18839:5:21","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":3724,"src":"18833:11:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":6277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18833:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6278,"nodeType":"ExpressionStatement","src":"18833:35:21"}]}},{"expression":{"id":6281,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6263,"src":"18895:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":6259,"id":6282,"nodeType":"Return","src":"18888:13:21"}]},"documentation":{"id":6249,"nodeType":"StructuredDocumentation","src":"18538:85:21","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":6284,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"18637:6:21","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6251,"mutability":"mutable","name":"b","nameLocation":"18657:1:21","nodeType":"VariableDeclaration","scope":6284,"src":"18644:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6250,"name":"bytes","nodeType":"ElementaryTypeName","src":"18644:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6253,"mutability":"mutable","name":"e","nameLocation":"18673:1:21","nodeType":"VariableDeclaration","scope":6284,"src":"18660:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6252,"name":"bytes","nodeType":"ElementaryTypeName","src":"18660:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6255,"mutability":"mutable","name":"m","nameLocation":"18689:1:21","nodeType":"VariableDeclaration","scope":6284,"src":"18676:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6254,"name":"bytes","nodeType":"ElementaryTypeName","src":"18676:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18643:48:21"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6284,"src":"18715:12:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6257,"name":"bytes","nodeType":"ElementaryTypeName","src":"18715:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"18714:14:21"},"scope":7038,"src":"18628:280:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6329,"nodeType":"Block","src":"19162:771:21","statements":[{"condition":{"arguments":[{"id":6299,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"19187:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6298,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6363,"src":"19176:10:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":6300,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19176:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6308,"nodeType":"IfStatement","src":"19172:47:21","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":6301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"19199:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":6304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19216:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":6303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"19206:9:21","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":6302,"name":"bytes","nodeType":"ElementaryTypeName","src":"19210:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":6305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19206:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":6306,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19198:21:21","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":6297,"id":6307,"nodeType":"Return","src":"19191:28:21"}},{"assignments":[6310],"declarations":[{"constant":false,"id":6310,"mutability":"mutable","name":"mLen","nameLocation":"19238:4:21","nodeType":"VariableDeclaration","scope":6329,"src":"19230:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6309,"name":"uint256","nodeType":"ElementaryTypeName","src":"19230:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6313,"initialValue":{"expression":{"id":6311,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"19245:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19247:6:21","memberName":"length","nodeType":"MemberAccess","src":"19245:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19230:23:21"},{"expression":{"id":6326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6314,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6296,"src":"19335:6:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":6317,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"19361:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19363:6:21","memberName":"length","nodeType":"MemberAccess","src":"19361:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":6319,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"19371:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"19373:6:21","memberName":"length","nodeType":"MemberAccess","src":"19371:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6321,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"19381:4:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6322,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6287,"src":"19387:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6323,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6289,"src":"19390:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":6324,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6291,"src":"19393:1:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":6315,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"19344:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":6316,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"19348:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"19344:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19344:51:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"19335:60:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6327,"nodeType":"ExpressionStatement","src":"19335:60:21"},{"AST":{"nodeType":"YulBlock","src":"19431:496:21","statements":[{"nodeType":"YulVariableDeclaration","src":"19445:32:21","value":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19464:6:21"},{"kind":"number","nodeType":"YulLiteral","src":"19472:4:21","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19460:3:21"},"nodeType":"YulFunctionCall","src":"19460:17:21"},"variables":[{"name":"dataPtr","nodeType":"YulTypedName","src":"19449:7:21","type":""}]},{"nodeType":"YulAssignment","src":"19567:73:21","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"19589:3:21"},"nodeType":"YulFunctionCall","src":"19589:5:21"},{"kind":"number","nodeType":"YulLiteral","src":"19596:4:21","type":"","value":"0x05"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19602:7:21"},{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19617:6:21"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19611:5:21"},"nodeType":"YulFunctionCall","src":"19611:13:21"},{"name":"dataPtr","nodeType":"YulIdentifier","src":"19626:7:21"},{"name":"mLen","nodeType":"YulIdentifier","src":"19635:4:21"}],"functionName":{"name":"staticcall","nodeType":"YulIdentifier","src":"19578:10:21"},"nodeType":"YulFunctionCall","src":"19578:62:21"},"variableNames":[{"name":"success","nodeType":"YulIdentifier","src":"19567:7:21"}]},{"expression":{"arguments":[{"name":"result","nodeType":"YulIdentifier","src":"19796:6:21"},{"name":"mLen","nodeType":"YulIdentifier","src":"19804:4:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19789:6:21"},"nodeType":"YulFunctionCall","src":"19789:20:21"},"nodeType":"YulExpressionStatement","src":"19789:20:21"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19892:4:21","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nodeType":"YulIdentifier","src":"19902:7:21"},{"name":"mLen","nodeType":"YulIdentifier","src":"19911:4:21"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19898:3:21"},"nodeType":"YulFunctionCall","src":"19898:18:21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19885:6:21"},"nodeType":"YulFunctionCall","src":"19885:32:21"},"nodeType":"YulExpressionStatement","src":"19885:32:21"}]},"evmVersion":"paris","externalReferences":[{"declaration":6310,"isOffset":false,"isSlot":false,"src":"19635:4:21","valueSize":1},{"declaration":6310,"isOffset":false,"isSlot":false,"src":"19804:4:21","valueSize":1},{"declaration":6310,"isOffset":false,"isSlot":false,"src":"19911:4:21","valueSize":1},{"declaration":6296,"isOffset":false,"isSlot":false,"src":"19464:6:21","valueSize":1},{"declaration":6296,"isOffset":false,"isSlot":false,"src":"19617:6:21","valueSize":1},{"declaration":6296,"isOffset":false,"isSlot":false,"src":"19796:6:21","valueSize":1},{"declaration":6294,"isOffset":false,"isSlot":false,"src":"19567:7:21","valueSize":1}],"flags":["memory-safe"],"id":6328,"nodeType":"InlineAssembly","src":"19406:521:21"}]},"documentation":{"id":6285,"nodeType":"StructuredDocumentation","src":"18914:88:21","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"19016:9:21","nodeType":"FunctionDefinition","parameters":{"id":6292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6287,"mutability":"mutable","name":"b","nameLocation":"19048:1:21","nodeType":"VariableDeclaration","scope":6330,"src":"19035:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6286,"name":"bytes","nodeType":"ElementaryTypeName","src":"19035:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6289,"mutability":"mutable","name":"e","nameLocation":"19072:1:21","nodeType":"VariableDeclaration","scope":6330,"src":"19059:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6288,"name":"bytes","nodeType":"ElementaryTypeName","src":"19059:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6291,"mutability":"mutable","name":"m","nameLocation":"19096:1:21","nodeType":"VariableDeclaration","scope":6330,"src":"19083:14:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6290,"name":"bytes","nodeType":"ElementaryTypeName","src":"19083:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19025:78:21"},"returnParameters":{"id":6297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6294,"mutability":"mutable","name":"success","nameLocation":"19132:7:21","nodeType":"VariableDeclaration","scope":6330,"src":"19127:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6293,"name":"bool","nodeType":"ElementaryTypeName","src":"19127:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6296,"mutability":"mutable","name":"result","nameLocation":"19154:6:21","nodeType":"VariableDeclaration","scope":6330,"src":"19141:19:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6295,"name":"bytes","nodeType":"ElementaryTypeName","src":"19141:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19126:35:21"},"scope":7038,"src":"19007:926:21","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":6362,"nodeType":"Block","src":"20088:176:21","statements":[{"body":{"id":6358,"nodeType":"Block","src":"20145:92:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":6353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6349,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"20163:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6351,"indexExpression":{"id":6350,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"20173:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"20163:12:21","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":6352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20179:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"20163:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6357,"nodeType":"IfStatement","src":"20159:68:21","trueBody":{"id":6356,"nodeType":"Block","src":"20182:45:21","statements":[{"expression":{"hexValue":"66616c7365","id":6354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20207:5:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":6337,"id":6355,"nodeType":"Return","src":"20200:12:21"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6342,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"20118:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":6343,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"20122:9:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":6344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"20132:6:21","memberName":"length","nodeType":"MemberAccess","src":"20122:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20118:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6359,"initializationExpression":{"assignments":[6339],"declarations":[{"constant":false,"id":6339,"mutability":"mutable","name":"i","nameLocation":"20111:1:21","nodeType":"VariableDeclaration","scope":6359,"src":"20103:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6338,"name":"uint256","nodeType":"ElementaryTypeName","src":"20103:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6341,"initialValue":{"hexValue":"30","id":6340,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20115:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"20103:13:21"},"loopExpression":{"expression":{"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"20140:3:21","subExpression":{"id":6346,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6339,"src":"20142:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6348,"nodeType":"ExpressionStatement","src":"20140:3:21"},"nodeType":"ForStatement","src":"20098:139:21"},{"expression":{"hexValue":"74727565","id":6360,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"20253:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":6337,"id":6361,"nodeType":"Return","src":"20246:11:21"}]},"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"19939:72:21","text":" @dev Returns whether the provided byte array is zero."},"id":6363,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"20025:10:21","nodeType":"FunctionDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"byteArray","nameLocation":"20049:9:21","nodeType":"VariableDeclaration","scope":6363,"src":"20036:22:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6332,"name":"bytes","nodeType":"ElementaryTypeName","src":"20036:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"20035:24:21"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6363,"src":"20082:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6335,"name":"bool","nodeType":"ElementaryTypeName","src":"20082:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"20081:6:21"},"scope":7038,"src":"20016:248:21","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":6581,"nodeType":"Block","src":"20624:5124:21","statements":[{"id":6580,"nodeType":"UncheckedBlock","src":"20634:5108:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"20728:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":6372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20733:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20728:6:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6377,"nodeType":"IfStatement","src":"20724:53:21","trueBody":{"id":6376,"nodeType":"Block","src":"20736:41:21","statements":[{"expression":{"id":6374,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"20761:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6370,"id":6375,"nodeType":"Return","src":"20754:8:21"}]}},{"assignments":[6379],"declarations":[{"constant":false,"id":6379,"mutability":"mutable","name":"aa","nameLocation":"21712:2:21","nodeType":"VariableDeclaration","scope":6580,"src":"21704:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6378,"name":"uint256","nodeType":"ElementaryTypeName","src":"21704:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6381,"initialValue":{"id":6380,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"21717:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"21704:14:21"},{"assignments":[6383],"declarations":[{"constant":false,"id":6383,"mutability":"mutable","name":"xn","nameLocation":"21740:2:21","nodeType":"VariableDeclaration","scope":6580,"src":"21732:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6382,"name":"uint256","nodeType":"ElementaryTypeName","src":"21732:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6385,"initialValue":{"hexValue":"31","id":6384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21745:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"21732:14:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6386,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"21765:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":6389,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21772:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":6388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21777:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21772:8:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":6390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21771:10:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"21765:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6401,"nodeType":"IfStatement","src":"21761:92:21","trueBody":{"id":6400,"nodeType":"Block","src":"21783:70:21","statements":[{"expression":{"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6392,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"21801:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":6393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21808:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"21801:10:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6395,"nodeType":"ExpressionStatement","src":"21801:10:21"},{"expression":{"id":6398,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6396,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"21829:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":6397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21836:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21829:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6399,"nodeType":"ExpressionStatement","src":"21829:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6407,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6402,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"21870:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":6405,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21877:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":6404,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21882:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21877:7:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":6406,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21876:9:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"21870:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6417,"nodeType":"IfStatement","src":"21866:90:21","trueBody":{"id":6416,"nodeType":"Block","src":"21887:69:21","statements":[{"expression":{"id":6410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6408,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"21905:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":6409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21912:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"21905:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6411,"nodeType":"ExpressionStatement","src":"21905:9:21"},{"expression":{"id":6414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6412,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"21932:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":6413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21939:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21932:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6415,"nodeType":"ExpressionStatement","src":"21932:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6418,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"21973:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":6421,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21980:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":6420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21985:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"21980:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":6422,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"21979:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"21973:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6433,"nodeType":"IfStatement","src":"21969:90:21","trueBody":{"id":6432,"nodeType":"Block","src":"21990:69:21","statements":[{"expression":{"id":6426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6424,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22008:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":6425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22015:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"22008:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6427,"nodeType":"ExpressionStatement","src":"22008:9:21"},{"expression":{"id":6430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6428,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22035:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":6429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22042:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22035:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6431,"nodeType":"ExpressionStatement","src":"22035:9:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6439,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6434,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22076:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":6437,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22083:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":6436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22088:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22083:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":6438,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22082:9:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"22076:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6449,"nodeType":"IfStatement","src":"22072:89:21","trueBody":{"id":6448,"nodeType":"Block","src":"22093:68:21","statements":[{"expression":{"id":6442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6440,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22111:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":6441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22118:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"22111:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6443,"nodeType":"ExpressionStatement","src":"22111:9:21"},{"expression":{"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6444,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22138:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":6445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22145:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22138:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6447,"nodeType":"ExpressionStatement","src":"22138:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6450,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22178:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":6453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22185:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":6452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22190:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22185:6:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":6454,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22184:8:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"22178:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6465,"nodeType":"IfStatement","src":"22174:87:21","trueBody":{"id":6464,"nodeType":"Block","src":"22194:67:21","statements":[{"expression":{"id":6458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6456,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22212:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":6457,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22219:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"22212:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6459,"nodeType":"ExpressionStatement","src":"22212:8:21"},{"expression":{"id":6462,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6460,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22238:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":6461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22245:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22238:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6463,"nodeType":"ExpressionStatement","src":"22238:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6466,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22278:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":6469,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22285:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22290:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22285:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":6470,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22284:8:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"22278:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6481,"nodeType":"IfStatement","src":"22274:87:21","trueBody":{"id":6480,"nodeType":"Block","src":"22294:67:21","statements":[{"expression":{"id":6474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6472,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22312:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":6473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"22312:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6475,"nodeType":"ExpressionStatement","src":"22312:8:21"},{"expression":{"id":6478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6476,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22338:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":6477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22345:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22338:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6479,"nodeType":"ExpressionStatement","src":"22338:8:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6482,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6379,"src":"22378:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":6485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22390:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"22385:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":6486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"22384:8:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"22378:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6493,"nodeType":"IfStatement","src":"22374:61:21","trueBody":{"id":6492,"nodeType":"Block","src":"22394:41:21","statements":[{"expression":{"id":6490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6488,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22412:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":6489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22419:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22412:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6491,"nodeType":"ExpressionStatement","src":"22412:8:21"}]}},{"expression":{"id":6501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6494,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22855:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":6495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22861:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6496,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"22865:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22861:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6498,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22860:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22872:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22860:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22855:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6502,"nodeType":"ExpressionStatement","src":"22855:18:21"},{"expression":{"id":6512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6503,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24760:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6504,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24766:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6505,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"24771:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6506,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24775:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24771:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24766:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24765:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24782:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24765:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24760:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6513,"nodeType":"ExpressionStatement","src":"24760:23:21"},{"expression":{"id":6523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6514,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24869:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6515,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24875:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"24880:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6517,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24884:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24880:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24875:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6520,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24874:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24891:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24874:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24869:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6524,"nodeType":"ExpressionStatement","src":"24869:23:21"},{"expression":{"id":6534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6525,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24980:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6526,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24986:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6527,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"24991:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6528,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"24995:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6531,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"24985:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25002:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24985:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24980:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6535,"nodeType":"ExpressionStatement","src":"24980:23:21"},{"expression":{"id":6545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6536,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25089:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6537,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25095:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6538,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"25100:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6539,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25104:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25100:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25095:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6542,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25094:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25111:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25094:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25089:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6546,"nodeType":"ExpressionStatement","src":"25089:23:21"},{"expression":{"id":6556,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6547,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25199:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6548,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25205:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6549,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"25210:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6550,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25214:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25210:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25205:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6553,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25204:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6554,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25221:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25204:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25199:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6557,"nodeType":"ExpressionStatement","src":"25199:23:21"},{"expression":{"id":6567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6558,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25309:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6559,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25315:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"25320:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6561,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25324:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25320:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25315:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6564,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"25314:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25331:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"25314:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25309:23:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6568,"nodeType":"ExpressionStatement","src":"25309:23:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6569,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25698:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6572,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25719:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6573,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6366,"src":"25724:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":6574,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6383,"src":"25728:2:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25724:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25719:11:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6570,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"25703:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25712:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"25703:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25703:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25698:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6370,"id":6579,"nodeType":"Return","src":"25691:40:21"}]}]},"documentation":{"id":6364,"nodeType":"StructuredDocumentation","src":"20270:292:21","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":6582,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"20576:4:21","nodeType":"FunctionDefinition","parameters":{"id":6367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6366,"mutability":"mutable","name":"a","nameLocation":"20589:1:21","nodeType":"VariableDeclaration","scope":6582,"src":"20581:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6365,"name":"uint256","nodeType":"ElementaryTypeName","src":"20581:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20580:11:21"},"returnParameters":{"id":6370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6582,"src":"20615:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6368,"name":"uint256","nodeType":"ElementaryTypeName","src":"20615:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20614:9:21"},"scope":7038,"src":"20567:5181:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6615,"nodeType":"Block","src":"25921:171:21","statements":[{"id":6614,"nodeType":"UncheckedBlock","src":"25931:155:21","statements":[{"assignments":[6594],"declarations":[{"constant":false,"id":6594,"mutability":"mutable","name":"result","nameLocation":"25963:6:21","nodeType":"VariableDeclaration","scope":6614,"src":"25955:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6593,"name":"uint256","nodeType":"ElementaryTypeName","src":"25955:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6598,"initialValue":{"arguments":[{"id":6596,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"25977:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6595,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[6582,6616],"referencedDeclaration":6582,"src":"25972:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25972:7:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25955:24:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6599,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"26000:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6603,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6588,"src":"26042:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":6602,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"26025:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5429_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26025:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6605,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"26055:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":6606,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6594,"src":"26064:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6608,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6585,"src":"26073:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26055:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26025:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6600,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26009:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26018:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26009:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6611,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26009:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26000:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6592,"id":6613,"nodeType":"Return","src":"25993:82:21"}]}]},"documentation":{"id":6583,"nodeType":"StructuredDocumentation","src":"25754:86:21","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":6616,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"25854:4:21","nodeType":"FunctionDefinition","parameters":{"id":6589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6585,"mutability":"mutable","name":"a","nameLocation":"25867:1:21","nodeType":"VariableDeclaration","scope":6616,"src":"25859:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6584,"name":"uint256","nodeType":"ElementaryTypeName","src":"25859:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6588,"mutability":"mutable","name":"rounding","nameLocation":"25879:8:21","nodeType":"VariableDeclaration","scope":6616,"src":"25870:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":6587,"nodeType":"UserDefinedTypeName","pathNode":{"id":6586,"name":"Rounding","nameLocations":["25870:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"25870:8:21"},"referencedDeclaration":5429,"src":"25870:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"25858:30:21"},"returnParameters":{"id":6592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6591,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6616,"src":"25912:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6590,"name":"uint256","nodeType":"ElementaryTypeName","src":"25912:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25911:9:21"},"scope":7038,"src":"25845:247:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6706,"nodeType":"Block","src":"26281:2334:21","statements":[{"expression":{"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6624,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26363:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6627,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26383:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6628,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26387:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"26383:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6625,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26367:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26376:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26367:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26367:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26426:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"26367:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26363:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6634,"nodeType":"ExpressionStatement","src":"26363:64:21"},{"expression":{"id":6647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6635,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26503:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6638,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26525:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6639,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26530:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26525:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6641,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26524:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26535:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"26524:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6636,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26508:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26517:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26508:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26508:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26558:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"26508:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26503:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6648,"nodeType":"ExpressionStatement","src":"26503:56:21"},{"expression":{"id":6661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6649,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26634:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6652,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26656:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6653,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26661:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26656:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6655,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26655:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26666:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"26655:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6650,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26639:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26648:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26639:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26639:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"26639:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26634:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6662,"nodeType":"ExpressionStatement","src":"26634:48:21"},{"expression":{"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6663,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26757:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6666,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26779:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6667,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26784:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26779:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6669,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26778:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26789:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"26778:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6664,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26762:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26771:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26762:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26762:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26800:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"26762:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26757:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6676,"nodeType":"ExpressionStatement","src":"26757:44:21"},{"expression":{"id":6689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6677,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26874:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6680,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"26896:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6681,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26901:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26896:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6683,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"26895:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6684,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26906:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"26895:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6678,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26879:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26888:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26879:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26879:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":6687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26915:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"26879:37:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26874:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6690,"nodeType":"ExpressionStatement","src":"26874:42:21"},{"expression":{"id":6703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6691,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"26988:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6694,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6619,"src":"27010:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6695,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6622,"src":"27015:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27010:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"27009:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27020:3:21","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"27009:14:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6692,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"26993:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27002:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"26993:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26993:31:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":6701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27028:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26993:36:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26988:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6704,"nodeType":"ExpressionStatement","src":"26988:41:21"},{"AST":{"nodeType":"YulBlock","src":"28490:119:21","statements":[{"nodeType":"YulAssignment","src":"28504:95:21","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28512:1:21"},{"arguments":[{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"28524:1:21"},{"name":"x","nodeType":"YulIdentifier","src":"28527:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"28520:3:21"},"nodeType":"YulFunctionCall","src":"28520:9:21"},{"kind":"number","nodeType":"YulLiteral","src":"28531:66:21","type":"","value":"0x0000010102020202030303030303030300000000000000000000000000000000"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"28515:4:21"},"nodeType":"YulFunctionCall","src":"28515:83:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28509:2:21"},"nodeType":"YulFunctionCall","src":"28509:90:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"28504:1:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6622,"isOffset":false,"isSlot":false,"src":"28504:1:21","valueSize":1},{"declaration":6622,"isOffset":false,"isSlot":false,"src":"28512:1:21","valueSize":1},{"declaration":6622,"isOffset":false,"isSlot":false,"src":"28524:1:21","valueSize":1},{"declaration":6619,"isOffset":false,"isSlot":false,"src":"28527:1:21","valueSize":1}],"flags":["memory-safe"],"id":6705,"nodeType":"InlineAssembly","src":"28465:144:21"}]},"documentation":{"id":6617,"nodeType":"StructuredDocumentation","src":"26098:119:21","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6707,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"26231:4:21","nodeType":"FunctionDefinition","parameters":{"id":6620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6619,"mutability":"mutable","name":"x","nameLocation":"26244:1:21","nodeType":"VariableDeclaration","scope":6707,"src":"26236:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6618,"name":"uint256","nodeType":"ElementaryTypeName","src":"26236:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26235:11:21"},"returnParameters":{"id":6623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6622,"mutability":"mutable","name":"r","nameLocation":"26278:1:21","nodeType":"VariableDeclaration","scope":6707,"src":"26270:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6621,"name":"uint256","nodeType":"ElementaryTypeName","src":"26270:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26269:11:21"},"scope":7038,"src":"26222:2393:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6740,"nodeType":"Block","src":"28848:175:21","statements":[{"id":6739,"nodeType":"UncheckedBlock","src":"28858:159:21","statements":[{"assignments":[6719],"declarations":[{"constant":false,"id":6719,"mutability":"mutable","name":"result","nameLocation":"28890:6:21","nodeType":"VariableDeclaration","scope":6739,"src":"28882:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6718,"name":"uint256","nodeType":"ElementaryTypeName","src":"28882:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6723,"initialValue":{"arguments":[{"id":6721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"28904:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6720,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[6707,6741],"referencedDeclaration":6707,"src":"28899:4:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28899:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"28882:28:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6724,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"28931:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6728,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6713,"src":"28973:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":6727,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"28956:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5429_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6729,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28956:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":6730,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28986:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":6731,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6719,"src":"28991:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6710,"src":"29000:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28986:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"28956:49:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6725,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"28940:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"28949:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"28940:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28940:66:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28931:75:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6717,"id":6738,"nodeType":"Return","src":"28924:82:21"}]}]},"documentation":{"id":6708,"nodeType":"StructuredDocumentation","src":"28621:142:21","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6741,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"28777:4:21","nodeType":"FunctionDefinition","parameters":{"id":6714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6710,"mutability":"mutable","name":"value","nameLocation":"28790:5:21","nodeType":"VariableDeclaration","scope":6741,"src":"28782:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6709,"name":"uint256","nodeType":"ElementaryTypeName","src":"28782:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6713,"mutability":"mutable","name":"rounding","nameLocation":"28806:8:21","nodeType":"VariableDeclaration","scope":6741,"src":"28797:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":6712,"nodeType":"UserDefinedTypeName","pathNode":{"id":6711,"name":"Rounding","nameLocations":["28797:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"28797:8:21"},"referencedDeclaration":5429,"src":"28797:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28781:34:21"},"returnParameters":{"id":6717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6716,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6741,"src":"28839:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6715,"name":"uint256","nodeType":"ElementaryTypeName","src":"28839:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28838:9:21"},"scope":7038,"src":"28768:255:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6869,"nodeType":"Block","src":"29216:854:21","statements":[{"assignments":[6750],"declarations":[{"constant":false,"id":6750,"mutability":"mutable","name":"result","nameLocation":"29234:6:21","nodeType":"VariableDeclaration","scope":6869,"src":"29226:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6749,"name":"uint256","nodeType":"ElementaryTypeName","src":"29226:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6752,"initialValue":{"hexValue":"30","id":6751,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29243:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"29226:18:21"},{"id":6866,"nodeType":"UncheckedBlock","src":"29254:787:21","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29282:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6756,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29291:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29297:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29291:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29282:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6769,"nodeType":"IfStatement","src":"29278:103:21","trueBody":{"id":6768,"nodeType":"Block","src":"29301:80:21","statements":[{"expression":{"id":6762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6758,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29319:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":6761,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29328:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":6760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29334:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29328:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"29319:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6763,"nodeType":"ExpressionStatement","src":"29319:17:21"},{"expression":{"id":6766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6764,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"29354:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":6765,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29364:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"29354:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6767,"nodeType":"ExpressionStatement","src":"29354:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29398:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6773,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6771,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29407:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29413:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29407:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29398:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6786,"nodeType":"IfStatement","src":"29394:103:21","trueBody":{"id":6785,"nodeType":"Block","src":"29417:80:21","statements":[{"expression":{"id":6779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6775,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29435:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":6778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":6777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29450:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29444:8:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"29435:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6780,"nodeType":"ExpressionStatement","src":"29435:17:21"},{"expression":{"id":6783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6781,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"29470:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":6782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29480:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"29470:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6784,"nodeType":"ExpressionStatement","src":"29470:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6787,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29514:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29523:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6789,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29529:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29523:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29514:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6803,"nodeType":"IfStatement","src":"29510:103:21","trueBody":{"id":6802,"nodeType":"Block","src":"29533:80:21","statements":[{"expression":{"id":6796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6792,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29551:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":6795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29560:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":6794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29566:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29560:8:21","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"29551:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6797,"nodeType":"ExpressionStatement","src":"29551:17:21"},{"expression":{"id":6800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6798,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"29586:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":6799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29596:2:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"29586:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6801,"nodeType":"ExpressionStatement","src":"29586:12:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6808,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29630:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29639:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29645:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29639:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29630:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6820,"nodeType":"IfStatement","src":"29626:100:21","trueBody":{"id":6819,"nodeType":"Block","src":"29648:78:21","statements":[{"expression":{"id":6813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29666:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":6812,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29675:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":6811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29681:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29675:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"29666:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6814,"nodeType":"ExpressionStatement","src":"29666:16:21"},{"expression":{"id":6817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"29700:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":6816,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29710:1:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"29700:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6818,"nodeType":"ExpressionStatement","src":"29700:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29743:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29752:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29758:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29752:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29743:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6837,"nodeType":"IfStatement","src":"29739:100:21","trueBody":{"id":6836,"nodeType":"Block","src":"29761:78:21","statements":[{"expression":{"id":6830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29779:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":6829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6827,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29788:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":6828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29794:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29788:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"29779:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6831,"nodeType":"ExpressionStatement","src":"29779:16:21"},{"expression":{"id":6834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6832,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"29813:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":6833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29823:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"29813:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6835,"nodeType":"ExpressionStatement","src":"29813:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29856:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29865:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6840,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29871:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29865:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29856:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6854,"nodeType":"IfStatement","src":"29852:100:21","trueBody":{"id":6853,"nodeType":"Block","src":"29874:78:21","statements":[{"expression":{"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6843,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29892:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":6846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29901:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":6845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29907:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29901:7:21","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"29892:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6848,"nodeType":"ExpressionStatement","src":"29892:16:21"},{"expression":{"id":6851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6849,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"29926:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":6850,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29936:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"29926:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6852,"nodeType":"ExpressionStatement","src":"29926:11:21"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6859,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6855,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6744,"src":"29969:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":6858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6856,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29978:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":6857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29984:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"29978:7:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"29969:16:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6865,"nodeType":"IfStatement","src":"29965:66:21","trueBody":{"id":6864,"nodeType":"Block","src":"29987:44:21","statements":[{"expression":{"id":6862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6860,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30005:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":6861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30015:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"30005:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6863,"nodeType":"ExpressionStatement","src":"30005:11:21"}]}}]},{"expression":{"id":6867,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6750,"src":"30057:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6748,"id":6868,"nodeType":"Return","src":"30050:13:21"}]},"documentation":{"id":6742,"nodeType":"StructuredDocumentation","src":"29029:120:21","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":6870,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"29163:5:21","nodeType":"FunctionDefinition","parameters":{"id":6745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6744,"mutability":"mutable","name":"value","nameLocation":"29177:5:21","nodeType":"VariableDeclaration","scope":6870,"src":"29169:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6743,"name":"uint256","nodeType":"ElementaryTypeName","src":"29169:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29168:15:21"},"returnParameters":{"id":6748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6870,"src":"29207:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6746,"name":"uint256","nodeType":"ElementaryTypeName","src":"29207:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29206:9:21"},"scope":7038,"src":"29154:916:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6903,"nodeType":"Block","src":"30305:177:21","statements":[{"id":6902,"nodeType":"UncheckedBlock","src":"30315:161:21","statements":[{"assignments":[6882],"declarations":[{"constant":false,"id":6882,"mutability":"mutable","name":"result","nameLocation":"30347:6:21","nodeType":"VariableDeclaration","scope":6902,"src":"30339:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6881,"name":"uint256","nodeType":"ElementaryTypeName","src":"30339:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6886,"initialValue":{"arguments":[{"id":6884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"30362:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6883,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[6870,6904],"referencedDeclaration":6870,"src":"30356:5:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30356:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"30339:29:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6887,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"30389:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":6898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6891,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6876,"src":"30431:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":6890,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"30414:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5429_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":6892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30414:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":6893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30444:2:21","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":6894,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6882,"src":"30450:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:12:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6896,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6873,"src":"30459:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30444:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"30414:50:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6888,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"30398:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30407:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"30398:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30398:67:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30389:76:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6880,"id":6901,"nodeType":"Return","src":"30382:83:21"}]}]},"documentation":{"id":6871,"nodeType":"StructuredDocumentation","src":"30076:143:21","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":6904,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"30233:5:21","nodeType":"FunctionDefinition","parameters":{"id":6877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6873,"mutability":"mutable","name":"value","nameLocation":"30247:5:21","nodeType":"VariableDeclaration","scope":6904,"src":"30239:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6872,"name":"uint256","nodeType":"ElementaryTypeName","src":"30239:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6876,"mutability":"mutable","name":"rounding","nameLocation":"30263:8:21","nodeType":"VariableDeclaration","scope":6904,"src":"30254:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":6875,"nodeType":"UserDefinedTypeName","pathNode":{"id":6874,"name":"Rounding","nameLocations":["30254:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"30254:8:21"},"referencedDeclaration":5429,"src":"30254:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"30238:34:21"},"returnParameters":{"id":6880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6904,"src":"30296:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6878,"name":"uint256","nodeType":"ElementaryTypeName","src":"30296:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30295:9:21"},"scope":7038,"src":"30224:258:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6980,"nodeType":"Block","src":"30800:675:21","statements":[{"expression":{"id":6921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6912,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"30882:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6915,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"30902:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666666666666666666666666666666666666666666666666666","id":6916,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30906:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"value":"0xffffffffffffffffffffffffffffffff"},"src":"30902:38:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6913,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"30886:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6914,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"30895:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"30886:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30886:55:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"37","id":6919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30945:1:21","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"30886:60:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"30882:64:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6922,"nodeType":"ExpressionStatement","src":"30882:64:21"},{"expression":{"id":6935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6923,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31022:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6928,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6926,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"31044:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6927,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31049:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31044:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6929,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31043:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666666666666666666666666666","id":6930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31054:18:21","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"value":"0xffffffffffffffff"},"src":"31043:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6924,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"31027:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6925,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31036:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"31027:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31027:46:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"36","id":6933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31077:1:21","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"31027:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31022:56:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6936,"nodeType":"ExpressionStatement","src":"31022:56:21"},{"expression":{"id":6949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6937,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31153:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6940,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"31175:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6941,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31180:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31175:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31174:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666666666666666","id":6944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31185:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"value":"0xffffffff"},"src":"31174:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6938,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"31158:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31167:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"31158:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31158:38:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"35","id":6947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31200:1:21","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"31158:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31153:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6950,"nodeType":"ExpressionStatement","src":"31153:48:21"},{"expression":{"id":6963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6951,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31276:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6954,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"31298:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6955,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31303:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31298:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6957,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31297:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307866666666","id":6958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31308:6:21","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"value":"0xffff"},"src":"31297:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6952,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"31281:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31290:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"31281:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6960,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31281:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":6961,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31319:1:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"31281:39:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31276:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6964,"nodeType":"ExpressionStatement","src":"31276:44:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6965,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31426:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"33","id":6966,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31431:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31426:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6968,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31425:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6971,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6907,"src":"31453:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"id":6972,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6910,"src":"31458:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31453:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":6974,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31452:8:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30786666","id":6975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31463:4:21","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xff"},"src":"31452:15:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6969,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"31436:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":6970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31445:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"31436:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31436:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31425:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6911,"id":6979,"nodeType":"Return","src":"31418:50:21"}]},"documentation":{"id":6905,"nodeType":"StructuredDocumentation","src":"30488:246:21","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":6981,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"30748:6:21","nodeType":"FunctionDefinition","parameters":{"id":6908,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6907,"mutability":"mutable","name":"x","nameLocation":"30763:1:21","nodeType":"VariableDeclaration","scope":6981,"src":"30755:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6906,"name":"uint256","nodeType":"ElementaryTypeName","src":"30755:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30754:11:21"},"returnParameters":{"id":6911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6910,"mutability":"mutable","name":"r","nameLocation":"30797:1:21","nodeType":"VariableDeclaration","scope":6981,"src":"30789:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6909,"name":"uint256","nodeType":"ElementaryTypeName","src":"30789:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30788:11:21"},"scope":7038,"src":"30739:736:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7017,"nodeType":"Block","src":"31712:184:21","statements":[{"id":7016,"nodeType":"UncheckedBlock","src":"31722:168:21","statements":[{"assignments":[6993],"declarations":[{"constant":false,"id":6993,"mutability":"mutable","name":"result","nameLocation":"31754:6:21","nodeType":"VariableDeclaration","scope":7016,"src":"31746:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6992,"name":"uint256","nodeType":"ElementaryTypeName","src":"31746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6997,"initialValue":{"arguments":[{"id":6995,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"31770:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6994,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[6981,7018],"referencedDeclaration":6981,"src":"31763:6:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31763:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"31746:30:21"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6998,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"31797:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":7012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7002,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6987,"src":"31839:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":7001,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7037,"src":"31822:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$5429_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":7003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31822:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":7004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31852:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7005,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6993,"src":"31858:6:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":7006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31868:1:21","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"31858:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":7008,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"31857:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:18:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7010,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6984,"src":"31873:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31852:26:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"31822:56:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6999,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"31806:8:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":7000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"31815:6:21","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"31806:15:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":7013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31806:73:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"31797:82:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6991,"id":7015,"nodeType":"Return","src":"31790:89:21"}]}]},"documentation":{"id":6982,"nodeType":"StructuredDocumentation","src":"31481:144:21","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":7018,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"31639:6:21","nodeType":"FunctionDefinition","parameters":{"id":6988,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6984,"mutability":"mutable","name":"value","nameLocation":"31654:5:21","nodeType":"VariableDeclaration","scope":7018,"src":"31646:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6983,"name":"uint256","nodeType":"ElementaryTypeName","src":"31646:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6987,"mutability":"mutable","name":"rounding","nameLocation":"31670:8:21","nodeType":"VariableDeclaration","scope":7018,"src":"31661:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":6986,"nodeType":"UserDefinedTypeName","pathNode":{"id":6985,"name":"Rounding","nameLocations":["31661:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"31661:8:21"},"referencedDeclaration":5429,"src":"31661:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"31645:34:21"},"returnParameters":{"id":6991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6990,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7018,"src":"31703:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6989,"name":"uint256","nodeType":"ElementaryTypeName","src":"31703:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"31702:9:21"},"scope":7038,"src":"31630:266:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7036,"nodeType":"Block","src":"32094:48:21","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":7032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":7029,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7022,"src":"32117:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}],"id":7028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32111:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7027,"name":"uint8","nodeType":"ElementaryTypeName","src":"32111:5:21","typeDescriptions":{}}},"id":7030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32111:15:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":7031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32129:1:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"32111:19:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32134:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"32111:24:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7026,"id":7035,"nodeType":"Return","src":"32104:31:21"}]},"documentation":{"id":7019,"nodeType":"StructuredDocumentation","src":"31902:113:21","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":7037,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"32029:16:21","nodeType":"FunctionDefinition","parameters":{"id":7023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7022,"mutability":"mutable","name":"rounding","nameLocation":"32055:8:21","nodeType":"VariableDeclaration","scope":7037,"src":"32046:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"},"typeName":{"id":7021,"nodeType":"UserDefinedTypeName","pathNode":{"id":7020,"name":"Rounding","nameLocations":["32046:8:21"],"nodeType":"IdentifierPath","referencedDeclaration":5429,"src":"32046:8:21"},"referencedDeclaration":5429,"src":"32046:8:21","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$5429","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"32045:19:21"},"returnParameters":{"id":7026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7025,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7037,"src":"32088:4:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7024,"name":"bool","nodeType":"ElementaryTypeName","src":"32088:4:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"32087:6:21"},"scope":7038,"src":"32020:122:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":7039,"src":"281:31863:21","usedErrors":[],"usedEvents":[]}],"src":"103:32042:21"},"id":21},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[8803]},"id":8804,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":7040,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:22"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":7041,"nodeType":"StructuredDocumentation","src":"218:550:22","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":8803,"linearizedBaseContracts":[8803],"name":"SafeCast","nameLocation":"777:8:22","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7042,"nodeType":"StructuredDocumentation","src":"792:68:22","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":7048,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:22","nodeType":"ErrorDefinition","parameters":{"id":7047,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7044,"mutability":"mutable","name":"bits","nameLocation":"908:4:22","nodeType":"VariableDeclaration","scope":7048,"src":"902:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7043,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7046,"mutability":"mutable","name":"value","nameLocation":"922:5:22","nodeType":"VariableDeclaration","scope":7048,"src":"914:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7045,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:22"},"src":"865:64:22"},{"documentation":{"id":7049,"nodeType":"StructuredDocumentation","src":"935:75:22","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":7053,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:22","nodeType":"ErrorDefinition","parameters":{"id":7052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7051,"mutability":"mutable","name":"value","nameLocation":"1056:5:22","nodeType":"VariableDeclaration","scope":7053,"src":"1049:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7050,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:22"},"src":"1015:48:22"},{"documentation":{"id":7054,"nodeType":"StructuredDocumentation","src":"1069:67:22","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":7060,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:22","nodeType":"ErrorDefinition","parameters":{"id":7059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7056,"mutability":"mutable","name":"bits","nameLocation":"1183:4:22","nodeType":"VariableDeclaration","scope":7060,"src":"1177:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7055,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":7058,"mutability":"mutable","name":"value","nameLocation":"1196:5:22","nodeType":"VariableDeclaration","scope":7060,"src":"1189:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7057,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:22"},"src":"1141:62:22"},{"documentation":{"id":7061,"nodeType":"StructuredDocumentation","src":"1209:75:22","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":7065,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:22","nodeType":"ErrorDefinition","parameters":{"id":7064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"value","nameLocation":"1331:5:22","nodeType":"VariableDeclaration","scope":7065,"src":"1323:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:22"},"src":"1289:49:22"},{"body":{"id":7092,"nodeType":"Block","src":"1695:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"1709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7075,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":7074,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":7078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:22","memberName":"max","nodeType":"MemberAccess","src":"1717:17:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7086,"nodeType":"IfStatement","src":"1705:105:22","trueBody":{"id":7085,"nodeType":"Block","src":"1736:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"1793:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7080,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"1757:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7083,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7084,"nodeType":"RevertStatement","src":"1750:49:22"}]}},{"expression":{"arguments":[{"id":7089,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7068,"src":"1834:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7088,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":7087,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:22","typeDescriptions":{}}},"id":7090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":7072,"id":7091,"nodeType":"Return","src":"1819:21:22"}]},"documentation":{"id":7066,"nodeType":"StructuredDocumentation","src":"1344:280:22","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7093,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:22","nodeType":"FunctionDefinition","parameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"value","nameLocation":"1656:5:22","nodeType":"VariableDeclaration","scope":7093,"src":"1648:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7067,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:22"},"returnParameters":{"id":7072,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7071,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7093,"src":"1686:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":7070,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:22","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:22"},"scope":8803,"src":"1629:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7120,"nodeType":"Block","src":"2204:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7101,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"2218:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7103,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":7102,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":7106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:22","memberName":"max","nodeType":"MemberAccess","src":"2226:17:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7114,"nodeType":"IfStatement","src":"2214:105:22","trueBody":{"id":7113,"nodeType":"Block","src":"2245:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":7109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":7110,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"2302:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7108,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"2266:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7111,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7112,"nodeType":"RevertStatement","src":"2259:49:22"}]}},{"expression":{"arguments":[{"id":7117,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7096,"src":"2343:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":7115,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:22","typeDescriptions":{}}},"id":7118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":7100,"id":7119,"nodeType":"Return","src":"2328:21:22"}]},"documentation":{"id":7094,"nodeType":"StructuredDocumentation","src":"1853:280:22","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":7121,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:22","nodeType":"FunctionDefinition","parameters":{"id":7097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7096,"mutability":"mutable","name":"value","nameLocation":"2165:5:22","nodeType":"VariableDeclaration","scope":7121,"src":"2157:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7095,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:22"},"returnParameters":{"id":7100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7099,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7121,"src":"2195:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":7098,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:22","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:22"},"scope":8803,"src":"2138:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7148,"nodeType":"Block","src":"2713:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7129,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"2727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7131,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":7130,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":7134,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:22","memberName":"max","nodeType":"MemberAccess","src":"2735:17:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7142,"nodeType":"IfStatement","src":"2723:105:22","trueBody":{"id":7141,"nodeType":"Block","src":"2754:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":7137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":7138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"2811:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7136,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"2775:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7140,"nodeType":"RevertStatement","src":"2768:49:22"}]}},{"expression":{"arguments":[{"id":7145,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7124,"src":"2852:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7144,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":7143,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:22","typeDescriptions":{}}},"id":7146,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":7128,"id":7147,"nodeType":"Return","src":"2837:21:22"}]},"documentation":{"id":7122,"nodeType":"StructuredDocumentation","src":"2362:280:22","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":7149,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:22","nodeType":"FunctionDefinition","parameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"mutability":"mutable","name":"value","nameLocation":"2674:5:22","nodeType":"VariableDeclaration","scope":7149,"src":"2666:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:22"},"returnParameters":{"id":7128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7149,"src":"2704:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":7126,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:22","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:22"},"scope":8803,"src":"2647:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7176,"nodeType":"Block","src":"3222:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7157,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"3236:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7159,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":7158,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":7162,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:22","memberName":"max","nodeType":"MemberAccess","src":"3244:17:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7170,"nodeType":"IfStatement","src":"3232:105:22","trueBody":{"id":7169,"nodeType":"Block","src":"3263:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":7165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":7166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"3320:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7164,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"3284:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7168,"nodeType":"RevertStatement","src":"3277:49:22"}]}},{"expression":{"arguments":[{"id":7173,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7152,"src":"3361:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7172,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":7171,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:22","typeDescriptions":{}}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":7156,"id":7175,"nodeType":"Return","src":"3346:21:22"}]},"documentation":{"id":7150,"nodeType":"StructuredDocumentation","src":"2871:280:22","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":7177,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:22","nodeType":"FunctionDefinition","parameters":{"id":7153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7152,"mutability":"mutable","name":"value","nameLocation":"3183:5:22","nodeType":"VariableDeclaration","scope":7177,"src":"3175:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7151,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:22"},"returnParameters":{"id":7156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7155,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7177,"src":"3213:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":7154,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:22"},"scope":8803,"src":"3156:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7204,"nodeType":"Block","src":"3731:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3745:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7187,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":7186,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:22","memberName":"max","nodeType":"MemberAccess","src":"3753:17:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7198,"nodeType":"IfStatement","src":"3741:105:22","trueBody":{"id":7197,"nodeType":"Block","src":"3772:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":7193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":7194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3829:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7192,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"3793:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7196,"nodeType":"RevertStatement","src":"3786:49:22"}]}},{"expression":{"arguments":[{"id":7201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7180,"src":"3870:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":7199,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:22","typeDescriptions":{}}},"id":7202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":7184,"id":7203,"nodeType":"Return","src":"3855:21:22"}]},"documentation":{"id":7178,"nodeType":"StructuredDocumentation","src":"3380:280:22","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":7205,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:22","nodeType":"FunctionDefinition","parameters":{"id":7181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7180,"mutability":"mutable","name":"value","nameLocation":"3692:5:22","nodeType":"VariableDeclaration","scope":7205,"src":"3684:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7179,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:22"},"returnParameters":{"id":7184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7205,"src":"3722:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":7182,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:22","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:22"},"scope":8803,"src":"3665:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7232,"nodeType":"Block","src":"4240:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7219,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"4254:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7215,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":7214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":7218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:22","memberName":"max","nodeType":"MemberAccess","src":"4262:17:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7226,"nodeType":"IfStatement","src":"4250:105:22","trueBody":{"id":7225,"nodeType":"Block","src":"4281:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":7221,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":7222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"4338:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7220,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"4302:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7224,"nodeType":"RevertStatement","src":"4295:49:22"}]}},{"expression":{"arguments":[{"id":7229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7208,"src":"4379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7228,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":7227,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:22","typeDescriptions":{}}},"id":7230,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":7212,"id":7231,"nodeType":"Return","src":"4364:21:22"}]},"documentation":{"id":7206,"nodeType":"StructuredDocumentation","src":"3889:280:22","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":7233,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:22","nodeType":"FunctionDefinition","parameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"value","nameLocation":"4201:5:22","nodeType":"VariableDeclaration","scope":7233,"src":"4193:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7207,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:22"},"returnParameters":{"id":7212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7233,"src":"4231:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":7210,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:22","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:22"},"scope":8803,"src":"4174:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7260,"nodeType":"Block","src":"4749:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"4763:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7243,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":7242,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":7246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:22","memberName":"max","nodeType":"MemberAccess","src":"4771:17:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7254,"nodeType":"IfStatement","src":"4759:105:22","trueBody":{"id":7253,"nodeType":"Block","src":"4790:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":7249,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":7250,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"4847:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7248,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"4811:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7252,"nodeType":"RevertStatement","src":"4804:49:22"}]}},{"expression":{"arguments":[{"id":7257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7236,"src":"4888:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7256,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":7255,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:22","typeDescriptions":{}}},"id":7258,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":7240,"id":7259,"nodeType":"Return","src":"4873:21:22"}]},"documentation":{"id":7234,"nodeType":"StructuredDocumentation","src":"4398:280:22","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":7261,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:22","nodeType":"FunctionDefinition","parameters":{"id":7237,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7236,"mutability":"mutable","name":"value","nameLocation":"4710:5:22","nodeType":"VariableDeclaration","scope":7261,"src":"4702:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7235,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:22"},"returnParameters":{"id":7240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7239,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7261,"src":"4740:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":7238,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:22","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:22"},"scope":8803,"src":"4683:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7288,"nodeType":"Block","src":"5258:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7269,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"5272:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7271,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":7270,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":7274,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:22","memberName":"max","nodeType":"MemberAccess","src":"5280:17:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7282,"nodeType":"IfStatement","src":"5268:105:22","trueBody":{"id":7281,"nodeType":"Block","src":"5299:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":7277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":7278,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"5356:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7276,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"5320:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7280,"nodeType":"RevertStatement","src":"5313:49:22"}]}},{"expression":{"arguments":[{"id":7285,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7264,"src":"5397:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":7283,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:22","typeDescriptions":{}}},"id":7286,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":7268,"id":7287,"nodeType":"Return","src":"5382:21:22"}]},"documentation":{"id":7262,"nodeType":"StructuredDocumentation","src":"4907:280:22","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":7289,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:22","nodeType":"FunctionDefinition","parameters":{"id":7265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7264,"mutability":"mutable","name":"value","nameLocation":"5219:5:22","nodeType":"VariableDeclaration","scope":7289,"src":"5211:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7263,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:22"},"returnParameters":{"id":7268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7267,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7289,"src":"5249:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":7266,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:22","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:22"},"scope":8803,"src":"5192:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7316,"nodeType":"Block","src":"5767:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"5781:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7299,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":7298,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":7302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:22","memberName":"max","nodeType":"MemberAccess","src":"5789:17:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7310,"nodeType":"IfStatement","src":"5777:105:22","trueBody":{"id":7309,"nodeType":"Block","src":"5808:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":7305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":7306,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"5865:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7304,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"5829:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7308,"nodeType":"RevertStatement","src":"5822:49:22"}]}},{"expression":{"arguments":[{"id":7313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7292,"src":"5906:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7312,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":7311,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:22","typeDescriptions":{}}},"id":7314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":7296,"id":7315,"nodeType":"Return","src":"5891:21:22"}]},"documentation":{"id":7290,"nodeType":"StructuredDocumentation","src":"5416:280:22","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":7317,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:22","nodeType":"FunctionDefinition","parameters":{"id":7293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7292,"mutability":"mutable","name":"value","nameLocation":"5728:5:22","nodeType":"VariableDeclaration","scope":7317,"src":"5720:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7291,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:22"},"returnParameters":{"id":7296,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7295,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7317,"src":"5758:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":7294,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:22","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:22"},"scope":8803,"src":"5701:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7344,"nodeType":"Block","src":"6276:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7325,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"6290:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7327,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":7326,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":7330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:22","memberName":"max","nodeType":"MemberAccess","src":"6298:17:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7338,"nodeType":"IfStatement","src":"6286:105:22","trueBody":{"id":7337,"nodeType":"Block","src":"6317:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":7333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":7334,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"6374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7332,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"6338:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7336,"nodeType":"RevertStatement","src":"6331:49:22"}]}},{"expression":{"arguments":[{"id":7341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7320,"src":"6415:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":7339,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:22","typeDescriptions":{}}},"id":7342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":7324,"id":7343,"nodeType":"Return","src":"6400:21:22"}]},"documentation":{"id":7318,"nodeType":"StructuredDocumentation","src":"5925:280:22","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":7345,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:22","nodeType":"FunctionDefinition","parameters":{"id":7321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7320,"mutability":"mutable","name":"value","nameLocation":"6237:5:22","nodeType":"VariableDeclaration","scope":7345,"src":"6229:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7319,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:22"},"returnParameters":{"id":7324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7323,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7345,"src":"6267:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":7322,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:22","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:22"},"scope":8803,"src":"6210:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7372,"nodeType":"Block","src":"6785:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"6799:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7355,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":7354,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7357,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":7358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:22","memberName":"max","nodeType":"MemberAccess","src":"6807:17:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7366,"nodeType":"IfStatement","src":"6795:105:22","trueBody":{"id":7365,"nodeType":"Block","src":"6826:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":7361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":7362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"6883:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7360,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"6847:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7364,"nodeType":"RevertStatement","src":"6840:49:22"}]}},{"expression":{"arguments":[{"id":7369,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7348,"src":"6924:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7368,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":7367,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:22","typeDescriptions":{}}},"id":7370,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":7352,"id":7371,"nodeType":"Return","src":"6909:21:22"}]},"documentation":{"id":7346,"nodeType":"StructuredDocumentation","src":"6434:280:22","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":7373,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:22","nodeType":"FunctionDefinition","parameters":{"id":7349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7348,"mutability":"mutable","name":"value","nameLocation":"6746:5:22","nodeType":"VariableDeclaration","scope":7373,"src":"6738:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7347,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:22"},"returnParameters":{"id":7352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7373,"src":"6776:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":7350,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:22","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:22"},"scope":8803,"src":"6719:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7400,"nodeType":"Block","src":"7294:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7381,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"7308:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7383,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":7382,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7385,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":7386,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:22","memberName":"max","nodeType":"MemberAccess","src":"7316:17:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7394,"nodeType":"IfStatement","src":"7304:105:22","trueBody":{"id":7393,"nodeType":"Block","src":"7335:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":7389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":7390,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"7392:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7388,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"7356:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7392,"nodeType":"RevertStatement","src":"7349:49:22"}]}},{"expression":{"arguments":[{"id":7397,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7376,"src":"7433:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":7395,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:22","typeDescriptions":{}}},"id":7398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":7380,"id":7399,"nodeType":"Return","src":"7418:21:22"}]},"documentation":{"id":7374,"nodeType":"StructuredDocumentation","src":"6943:280:22","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":7401,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:22","nodeType":"FunctionDefinition","parameters":{"id":7377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7376,"mutability":"mutable","name":"value","nameLocation":"7255:5:22","nodeType":"VariableDeclaration","scope":7401,"src":"7247:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7375,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:22"},"returnParameters":{"id":7380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7379,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7401,"src":"7285:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":7378,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:22","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:22"},"scope":8803,"src":"7228:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7428,"nodeType":"Block","src":"7803:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"7817:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7411,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":7410,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":7414,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:22","memberName":"max","nodeType":"MemberAccess","src":"7825:17:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7422,"nodeType":"IfStatement","src":"7813:105:22","trueBody":{"id":7421,"nodeType":"Block","src":"7844:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":7417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":7418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"7901:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7416,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"7865:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7420,"nodeType":"RevertStatement","src":"7858:49:22"}]}},{"expression":{"arguments":[{"id":7425,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7404,"src":"7942:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":7423,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:22","typeDescriptions":{}}},"id":7426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":7408,"id":7427,"nodeType":"Return","src":"7927:21:22"}]},"documentation":{"id":7402,"nodeType":"StructuredDocumentation","src":"7452:280:22","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":7429,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:22","nodeType":"FunctionDefinition","parameters":{"id":7405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7404,"mutability":"mutable","name":"value","nameLocation":"7764:5:22","nodeType":"VariableDeclaration","scope":7429,"src":"7756:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7403,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:22"},"returnParameters":{"id":7408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7407,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7429,"src":"7794:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":7406,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:22","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:22"},"scope":8803,"src":"7737:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7456,"nodeType":"Block","src":"8312:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7437,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"8326:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7439,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":7438,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":7442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:22","memberName":"max","nodeType":"MemberAccess","src":"8334:17:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7450,"nodeType":"IfStatement","src":"8322:105:22","trueBody":{"id":7449,"nodeType":"Block","src":"8353:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":7445,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":7446,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"8410:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7444,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"8374:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7448,"nodeType":"RevertStatement","src":"8367:49:22"}]}},{"expression":{"arguments":[{"id":7453,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7432,"src":"8451:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":7451,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:22","typeDescriptions":{}}},"id":7454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":7436,"id":7455,"nodeType":"Return","src":"8436:21:22"}]},"documentation":{"id":7430,"nodeType":"StructuredDocumentation","src":"7961:280:22","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":7457,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:22","nodeType":"FunctionDefinition","parameters":{"id":7433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7432,"mutability":"mutable","name":"value","nameLocation":"8273:5:22","nodeType":"VariableDeclaration","scope":7457,"src":"8265:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7431,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:22"},"returnParameters":{"id":7436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7457,"src":"8303:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":7434,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:22","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:22"},"scope":8803,"src":"8246:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7484,"nodeType":"Block","src":"8821:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7465,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"8835:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7467,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":7466,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":7470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:22","memberName":"max","nodeType":"MemberAccess","src":"8843:17:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7478,"nodeType":"IfStatement","src":"8831:105:22","trueBody":{"id":7477,"nodeType":"Block","src":"8862:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":7473,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":7474,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"8919:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7472,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"8883:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7476,"nodeType":"RevertStatement","src":"8876:49:22"}]}},{"expression":{"arguments":[{"id":7481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7460,"src":"8960:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":7479,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:22","typeDescriptions":{}}},"id":7482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":7464,"id":7483,"nodeType":"Return","src":"8945:21:22"}]},"documentation":{"id":7458,"nodeType":"StructuredDocumentation","src":"8470:280:22","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":7485,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:22","nodeType":"FunctionDefinition","parameters":{"id":7461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7460,"mutability":"mutable","name":"value","nameLocation":"8782:5:22","nodeType":"VariableDeclaration","scope":7485,"src":"8774:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7459,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:22"},"returnParameters":{"id":7464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7463,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7485,"src":"8812:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":7462,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:22","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:22"},"scope":8803,"src":"8755:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7512,"nodeType":"Block","src":"9330:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7493,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"9344:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7495,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":7494,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":7498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:22","memberName":"max","nodeType":"MemberAccess","src":"9352:17:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7506,"nodeType":"IfStatement","src":"9340:105:22","trueBody":{"id":7505,"nodeType":"Block","src":"9371:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":7501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":7502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"9428:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7500,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"9392:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7503,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7504,"nodeType":"RevertStatement","src":"9385:49:22"}]}},{"expression":{"arguments":[{"id":7509,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7488,"src":"9469:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":7507,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:22","typeDescriptions":{}}},"id":7510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":7492,"id":7511,"nodeType":"Return","src":"9454:21:22"}]},"documentation":{"id":7486,"nodeType":"StructuredDocumentation","src":"8979:280:22","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":7513,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:22","nodeType":"FunctionDefinition","parameters":{"id":7489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7488,"mutability":"mutable","name":"value","nameLocation":"9291:5:22","nodeType":"VariableDeclaration","scope":7513,"src":"9283:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7487,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:22"},"returnParameters":{"id":7492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7513,"src":"9321:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":7490,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:22","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:22"},"scope":8803,"src":"9264:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7540,"nodeType":"Block","src":"9839:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7521,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"9853:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7523,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":7522,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7525,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":7526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:22","memberName":"max","nodeType":"MemberAccess","src":"9861:17:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7534,"nodeType":"IfStatement","src":"9849:105:22","trueBody":{"id":7533,"nodeType":"Block","src":"9880:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":7529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":7530,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"9937:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7528,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"9901:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7532,"nodeType":"RevertStatement","src":"9894:49:22"}]}},{"expression":{"arguments":[{"id":7537,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7516,"src":"9978:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7536,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":7535,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:22","typeDescriptions":{}}},"id":7538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":7520,"id":7539,"nodeType":"Return","src":"9963:21:22"}]},"documentation":{"id":7514,"nodeType":"StructuredDocumentation","src":"9488:280:22","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":7541,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:22","nodeType":"FunctionDefinition","parameters":{"id":7517,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7516,"mutability":"mutable","name":"value","nameLocation":"9800:5:22","nodeType":"VariableDeclaration","scope":7541,"src":"9792:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7515,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:22"},"returnParameters":{"id":7520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7541,"src":"9830:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":7518,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:22","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:22"},"scope":8803,"src":"9773:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7568,"nodeType":"Block","src":"10348:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"10362:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7551,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":7550,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":7554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:22","memberName":"max","nodeType":"MemberAccess","src":"10370:17:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7562,"nodeType":"IfStatement","src":"10358:105:22","trueBody":{"id":7561,"nodeType":"Block","src":"10389:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":7557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":7558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"10446:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7556,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10410:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7560,"nodeType":"RevertStatement","src":"10403:49:22"}]}},{"expression":{"arguments":[{"id":7565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7544,"src":"10487:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":7563,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:22","typeDescriptions":{}}},"id":7566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":7548,"id":7567,"nodeType":"Return","src":"10472:21:22"}]},"documentation":{"id":7542,"nodeType":"StructuredDocumentation","src":"9997:280:22","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":7569,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:22","nodeType":"FunctionDefinition","parameters":{"id":7545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7544,"mutability":"mutable","name":"value","nameLocation":"10309:5:22","nodeType":"VariableDeclaration","scope":7569,"src":"10301:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7543,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:22"},"returnParameters":{"id":7548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7547,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7569,"src":"10339:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":7546,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:22","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:22"},"scope":8803,"src":"10282:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7596,"nodeType":"Block","src":"10857:152:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7577,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"10871:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7579,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":7578,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":7582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:22","memberName":"max","nodeType":"MemberAccess","src":"10879:17:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7590,"nodeType":"IfStatement","src":"10867:105:22","trueBody":{"id":7589,"nodeType":"Block","src":"10898:74:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":7585,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":7586,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"10955:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7584,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"10919:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7588,"nodeType":"RevertStatement","src":"10912:49:22"}]}},{"expression":{"arguments":[{"id":7593,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7572,"src":"10996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7592,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":7591,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:22","typeDescriptions":{}}},"id":7594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":7576,"id":7595,"nodeType":"Return","src":"10981:21:22"}]},"documentation":{"id":7570,"nodeType":"StructuredDocumentation","src":"10506:280:22","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":7597,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:22","nodeType":"FunctionDefinition","parameters":{"id":7573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7572,"mutability":"mutable","name":"value","nameLocation":"10818:5:22","nodeType":"VariableDeclaration","scope":7597,"src":"10810:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7571,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:22"},"returnParameters":{"id":7576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7575,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7597,"src":"10848:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":7574,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:22","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:22"},"scope":8803,"src":"10791:218:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7624,"nodeType":"Block","src":"11360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7605,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"11374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7607,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":7606,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":7610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:22","memberName":"max","nodeType":"MemberAccess","src":"11382:16:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7618,"nodeType":"IfStatement","src":"11370:103:22","trueBody":{"id":7617,"nodeType":"Block","src":"11400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":7613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":7614,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"11456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7612,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"11421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7615,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7616,"nodeType":"RevertStatement","src":"11414:48:22"}]}},{"expression":{"arguments":[{"id":7621,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7600,"src":"11496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":7619,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:22","typeDescriptions":{}}},"id":7622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":7604,"id":7623,"nodeType":"Return","src":"11482:20:22"}]},"documentation":{"id":7598,"nodeType":"StructuredDocumentation","src":"11015:276:22","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":7625,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:22","nodeType":"FunctionDefinition","parameters":{"id":7601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7600,"mutability":"mutable","name":"value","nameLocation":"11322:5:22","nodeType":"VariableDeclaration","scope":7625,"src":"11314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7599,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:22"},"returnParameters":{"id":7604,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7603,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7625,"src":"11352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":7602,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:22","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:22"},"scope":8803,"src":"11296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7652,"nodeType":"Block","src":"11860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7633,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"11874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7635,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":7634,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":7638,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:22","memberName":"max","nodeType":"MemberAccess","src":"11882:16:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7646,"nodeType":"IfStatement","src":"11870:103:22","trueBody":{"id":7645,"nodeType":"Block","src":"11900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":7641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":7642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"11956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7640,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"11921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7644,"nodeType":"RevertStatement","src":"11914:48:22"}]}},{"expression":{"arguments":[{"id":7649,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7628,"src":"11996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":7647,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:22","typeDescriptions":{}}},"id":7650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":7632,"id":7651,"nodeType":"Return","src":"11982:20:22"}]},"documentation":{"id":7626,"nodeType":"StructuredDocumentation","src":"11515:276:22","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":7653,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:22","nodeType":"FunctionDefinition","parameters":{"id":7629,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7628,"mutability":"mutable","name":"value","nameLocation":"11822:5:22","nodeType":"VariableDeclaration","scope":7653,"src":"11814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7627,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:22"},"returnParameters":{"id":7632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7631,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7653,"src":"11852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":7630,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:22","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:22"},"scope":8803,"src":"11796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7680,"nodeType":"Block","src":"12360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7661,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"12374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7663,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":7662,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":7666,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:22","memberName":"max","nodeType":"MemberAccess","src":"12382:16:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7674,"nodeType":"IfStatement","src":"12370:103:22","trueBody":{"id":7673,"nodeType":"Block","src":"12400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":7669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":7670,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"12456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7668,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"12421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7671,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7672,"nodeType":"RevertStatement","src":"12414:48:22"}]}},{"expression":{"arguments":[{"id":7677,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7656,"src":"12496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7676,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":7675,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:22","typeDescriptions":{}}},"id":7678,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":7660,"id":7679,"nodeType":"Return","src":"12482:20:22"}]},"documentation":{"id":7654,"nodeType":"StructuredDocumentation","src":"12015:276:22","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":7681,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:22","nodeType":"FunctionDefinition","parameters":{"id":7657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7656,"mutability":"mutable","name":"value","nameLocation":"12322:5:22","nodeType":"VariableDeclaration","scope":7681,"src":"12314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7655,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:22"},"returnParameters":{"id":7660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7681,"src":"12352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":7658,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:22","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:22"},"scope":8803,"src":"12296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7708,"nodeType":"Block","src":"12860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7695,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"12874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7691,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":7690,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":7694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:22","memberName":"max","nodeType":"MemberAccess","src":"12882:16:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7702,"nodeType":"IfStatement","src":"12870:103:22","trueBody":{"id":7701,"nodeType":"Block","src":"12900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":7697,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":7698,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"12956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7696,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"12921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7700,"nodeType":"RevertStatement","src":"12914:48:22"}]}},{"expression":{"arguments":[{"id":7705,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7684,"src":"12996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":7703,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:22","typeDescriptions":{}}},"id":7706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":7688,"id":7707,"nodeType":"Return","src":"12982:20:22"}]},"documentation":{"id":7682,"nodeType":"StructuredDocumentation","src":"12515:276:22","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":7709,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:22","nodeType":"FunctionDefinition","parameters":{"id":7685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7684,"mutability":"mutable","name":"value","nameLocation":"12822:5:22","nodeType":"VariableDeclaration","scope":7709,"src":"12814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7683,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:22"},"returnParameters":{"id":7688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7709,"src":"12852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":7686,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:22","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:22"},"scope":8803,"src":"12796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7736,"nodeType":"Block","src":"13360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7717,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"13374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7719,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":7718,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":7722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:22","memberName":"max","nodeType":"MemberAccess","src":"13382:16:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7730,"nodeType":"IfStatement","src":"13370:103:22","trueBody":{"id":7729,"nodeType":"Block","src":"13400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":7725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":7726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"13456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7724,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"13421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7728,"nodeType":"RevertStatement","src":"13414:48:22"}]}},{"expression":{"arguments":[{"id":7733,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7712,"src":"13496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":7731,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:22","typeDescriptions":{}}},"id":7734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":7716,"id":7735,"nodeType":"Return","src":"13482:20:22"}]},"documentation":{"id":7710,"nodeType":"StructuredDocumentation","src":"13015:276:22","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":7737,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:22","nodeType":"FunctionDefinition","parameters":{"id":7713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7712,"mutability":"mutable","name":"value","nameLocation":"13322:5:22","nodeType":"VariableDeclaration","scope":7737,"src":"13314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7711,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:22"},"returnParameters":{"id":7716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7737,"src":"13352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":7714,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:22","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:22"},"scope":8803,"src":"13296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7764,"nodeType":"Block","src":"13860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7745,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"13874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7747,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":7746,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":7750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:22","memberName":"max","nodeType":"MemberAccess","src":"13882:16:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7758,"nodeType":"IfStatement","src":"13870:103:22","trueBody":{"id":7757,"nodeType":"Block","src":"13900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":7753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":7754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"13956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7752,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"13921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7756,"nodeType":"RevertStatement","src":"13914:48:22"}]}},{"expression":{"arguments":[{"id":7761,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7740,"src":"13996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7760,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":7759,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:22","typeDescriptions":{}}},"id":7762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":7744,"id":7763,"nodeType":"Return","src":"13982:20:22"}]},"documentation":{"id":7738,"nodeType":"StructuredDocumentation","src":"13515:276:22","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":7765,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:22","nodeType":"FunctionDefinition","parameters":{"id":7741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7740,"mutability":"mutable","name":"value","nameLocation":"13822:5:22","nodeType":"VariableDeclaration","scope":7765,"src":"13814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7739,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:22"},"returnParameters":{"id":7744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7743,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7765,"src":"13852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":7742,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:22","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:22"},"scope":8803,"src":"13796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7792,"nodeType":"Block","src":"14360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7773,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"14374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7776,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7775,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":7774,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":7778,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:22","memberName":"max","nodeType":"MemberAccess","src":"14382:16:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7786,"nodeType":"IfStatement","src":"14370:103:22","trueBody":{"id":7785,"nodeType":"Block","src":"14400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":7781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":7782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"14456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7780,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"14421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7784,"nodeType":"RevertStatement","src":"14414:48:22"}]}},{"expression":{"arguments":[{"id":7789,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7768,"src":"14496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7788,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":7787,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:22","typeDescriptions":{}}},"id":7790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":7772,"id":7791,"nodeType":"Return","src":"14482:20:22"}]},"documentation":{"id":7766,"nodeType":"StructuredDocumentation","src":"14015:276:22","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":7793,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:22","nodeType":"FunctionDefinition","parameters":{"id":7769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7768,"mutability":"mutable","name":"value","nameLocation":"14322:5:22","nodeType":"VariableDeclaration","scope":7793,"src":"14314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7767,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:22"},"returnParameters":{"id":7772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7793,"src":"14352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":7770,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:22","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:22"},"scope":8803,"src":"14296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7820,"nodeType":"Block","src":"14860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7801,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7796,"src":"14874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7804,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7803,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":7802,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7805,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":7806,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:22","memberName":"max","nodeType":"MemberAccess","src":"14882:16:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7814,"nodeType":"IfStatement","src":"14870:103:22","trueBody":{"id":7813,"nodeType":"Block","src":"14900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":7809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":7810,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7796,"src":"14956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7808,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"14921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7812,"nodeType":"RevertStatement","src":"14914:48:22"}]}},{"expression":{"arguments":[{"id":7817,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7796,"src":"14996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":7815,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:22","typeDescriptions":{}}},"id":7818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":7800,"id":7819,"nodeType":"Return","src":"14982:20:22"}]},"documentation":{"id":7794,"nodeType":"StructuredDocumentation","src":"14515:276:22","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":7821,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:22","nodeType":"FunctionDefinition","parameters":{"id":7797,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7796,"mutability":"mutable","name":"value","nameLocation":"14822:5:22","nodeType":"VariableDeclaration","scope":7821,"src":"14814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7795,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:22"},"returnParameters":{"id":7800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7799,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7821,"src":"14852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":7798,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:22","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:22"},"scope":8803,"src":"14796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7848,"nodeType":"Block","src":"15360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"15374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7831,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":7830,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":7834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:22","memberName":"max","nodeType":"MemberAccess","src":"15382:16:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7842,"nodeType":"IfStatement","src":"15370:103:22","trueBody":{"id":7841,"nodeType":"Block","src":"15400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":7837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":7838,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"15456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7836,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"15421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7840,"nodeType":"RevertStatement","src":"15414:48:22"}]}},{"expression":{"arguments":[{"id":7845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7824,"src":"15496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":7843,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:22","typeDescriptions":{}}},"id":7846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":7828,"id":7847,"nodeType":"Return","src":"15482:20:22"}]},"documentation":{"id":7822,"nodeType":"StructuredDocumentation","src":"15015:276:22","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":7849,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:22","nodeType":"FunctionDefinition","parameters":{"id":7825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7824,"mutability":"mutable","name":"value","nameLocation":"15322:5:22","nodeType":"VariableDeclaration","scope":7849,"src":"15314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7823,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:22"},"returnParameters":{"id":7828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7849,"src":"15352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":7826,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:22","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:22"},"scope":8803,"src":"15296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7876,"nodeType":"Block","src":"15860:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7857,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"15874:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7859,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":7858,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":7862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:22","memberName":"max","nodeType":"MemberAccess","src":"15882:16:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7870,"nodeType":"IfStatement","src":"15870:103:22","trueBody":{"id":7869,"nodeType":"Block","src":"15900:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":7865,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":7866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"15956:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7864,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"15921:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7868,"nodeType":"RevertStatement","src":"15914:48:22"}]}},{"expression":{"arguments":[{"id":7873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7852,"src":"15996:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":7871,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:22","typeDescriptions":{}}},"id":7874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":7856,"id":7875,"nodeType":"Return","src":"15982:20:22"}]},"documentation":{"id":7850,"nodeType":"StructuredDocumentation","src":"15515:276:22","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":7877,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:22","nodeType":"FunctionDefinition","parameters":{"id":7853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7852,"mutability":"mutable","name":"value","nameLocation":"15822:5:22","nodeType":"VariableDeclaration","scope":7877,"src":"15814:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7851,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:22"},"returnParameters":{"id":7856,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7855,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7877,"src":"15852:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":7854,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:22","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:22"},"scope":8803,"src":"15796:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7904,"nodeType":"Block","src":"16360:149:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7885,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"16374:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7887,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":7886,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":7890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:22","memberName":"max","nodeType":"MemberAccess","src":"16382:16:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7898,"nodeType":"IfStatement","src":"16370:103:22","trueBody":{"id":7897,"nodeType":"Block","src":"16400:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":7893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":7894,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"16456:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7892,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"16421:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7896,"nodeType":"RevertStatement","src":"16414:48:22"}]}},{"expression":{"arguments":[{"id":7901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7880,"src":"16496:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":7899,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:22","typeDescriptions":{}}},"id":7902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":7884,"id":7903,"nodeType":"Return","src":"16482:20:22"}]},"documentation":{"id":7878,"nodeType":"StructuredDocumentation","src":"16015:276:22","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":7905,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:22","nodeType":"FunctionDefinition","parameters":{"id":7881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7880,"mutability":"mutable","name":"value","nameLocation":"16322:5:22","nodeType":"VariableDeclaration","scope":7905,"src":"16314:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7879,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:22"},"returnParameters":{"id":7884,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7883,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7905,"src":"16352:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":7882,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:22"},"scope":8803,"src":"16296:213:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7932,"nodeType":"Block","src":"16854:146:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7913,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"16868:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":7916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7915,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":7914,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":7917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":7918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:22","memberName":"max","nodeType":"MemberAccess","src":"16876:15:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7926,"nodeType":"IfStatement","src":"16864:101:22","trueBody":{"id":7925,"nodeType":"Block","src":"16893:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":7921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":7922,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"16948:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7920,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7048,"src":"16914:30:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$__$","typeString":"function (uint8,uint256) pure"}},"id":7923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7924,"nodeType":"RevertStatement","src":"16907:47:22"}]}},{"expression":{"arguments":[{"id":7929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7908,"src":"16987:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":7928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":7927,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:22","typeDescriptions":{}}},"id":7930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":7912,"id":7931,"nodeType":"Return","src":"16974:19:22"}]},"documentation":{"id":7906,"nodeType":"StructuredDocumentation","src":"16515:272:22","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":7933,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:22","nodeType":"FunctionDefinition","parameters":{"id":7909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7908,"mutability":"mutable","name":"value","nameLocation":"16817:5:22","nodeType":"VariableDeclaration","scope":7933,"src":"16809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7907,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:22"},"returnParameters":{"id":7912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7911,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7933,"src":"16847:5:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":7910,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:22"},"scope":8803,"src":"16792:208:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7955,"nodeType":"Block","src":"17236:128:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7941,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"17250:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":7942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7949,"nodeType":"IfStatement","src":"17246:81:22","trueBody":{"id":7948,"nodeType":"Block","src":"17261:66:22","statements":[{"errorCall":{"arguments":[{"id":7945,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"17310:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7944,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7053,"src":"17282:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$__$","typeString":"function (int256) pure"}},"id":7946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7947,"nodeType":"RevertStatement","src":"17275:41:22"}]}},{"expression":{"arguments":[{"id":7952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7936,"src":"17351:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":7950,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:22","typeDescriptions":{}}},"id":7953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7940,"id":7954,"nodeType":"Return","src":"17336:21:22"}]},"documentation":{"id":7934,"nodeType":"StructuredDocumentation","src":"17006:160:22","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":7956,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:22","nodeType":"FunctionDefinition","parameters":{"id":7937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7936,"mutability":"mutable","name":"value","nameLocation":"17197:5:22","nodeType":"VariableDeclaration","scope":7956,"src":"17190:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7935,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:22"},"returnParameters":{"id":7940,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7939,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7956,"src":"17227:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7938,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:22"},"scope":8803,"src":"17171:193:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":7981,"nodeType":"Block","src":"17761:150:22","statements":[{"expression":{"id":7969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7964,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"17771:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7967,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"17791:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7966,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":7965,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:22","typeDescriptions":{}}},"id":7968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":7970,"nodeType":"ExpressionStatement","src":"17771:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7971,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7962,"src":"17811:10:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7972,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"17825:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7980,"nodeType":"IfStatement","src":"17807:98:22","trueBody":{"id":7979,"nodeType":"Block","src":"17832:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":7975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:22","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":7976,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7959,"src":"17888:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7974,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"17853:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":7977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7978,"nodeType":"RevertStatement","src":"17846:48:22"}]}}]},"documentation":{"id":7957,"nodeType":"StructuredDocumentation","src":"17370:312:22","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":7982,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:22","nodeType":"FunctionDefinition","parameters":{"id":7960,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7959,"mutability":"mutable","name":"value","nameLocation":"17712:5:22","nodeType":"VariableDeclaration","scope":7982,"src":"17705:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7958,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:22"},"returnParameters":{"id":7963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7962,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:22","nodeType":"VariableDeclaration","scope":7982,"src":"17742:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":7961,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:22","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:22"},"scope":8803,"src":"17687:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8007,"nodeType":"Block","src":"18308:150:22","statements":[{"expression":{"id":7995,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7990,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"18318:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":7993,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"18338:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":7992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":7991,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:22","typeDescriptions":{}}},"id":7994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":7996,"nodeType":"ExpressionStatement","src":"18318:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":7999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7997,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7988,"src":"18358:10:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"18372:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8006,"nodeType":"IfStatement","src":"18354:98:22","trueBody":{"id":8005,"nodeType":"Block","src":"18379:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":8001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:22","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":8002,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7985,"src":"18435:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8000,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"18400:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8003,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8004,"nodeType":"RevertStatement","src":"18393:48:22"}]}}]},"documentation":{"id":7983,"nodeType":"StructuredDocumentation","src":"17917:312:22","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":8008,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:22","nodeType":"FunctionDefinition","parameters":{"id":7986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7985,"mutability":"mutable","name":"value","nameLocation":"18259:5:22","nodeType":"VariableDeclaration","scope":8008,"src":"18252:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":7984,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:22"},"returnParameters":{"id":7989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7988,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:22","nodeType":"VariableDeclaration","scope":8008,"src":"18289:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":7987,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:22","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:22"},"scope":8803,"src":"18234:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8033,"nodeType":"Block","src":"18855:150:22","statements":[{"expression":{"id":8021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8016,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"18865:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8019,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"18885:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":8017,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:22","typeDescriptions":{}}},"id":8020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":8022,"nodeType":"ExpressionStatement","src":"18865:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8023,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8014,"src":"18905:10:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"18919:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8032,"nodeType":"IfStatement","src":"18901:98:22","trueBody":{"id":8031,"nodeType":"Block","src":"18926:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":8027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:22","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":8028,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8011,"src":"18982:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8026,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"18947:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8030,"nodeType":"RevertStatement","src":"18940:48:22"}]}}]},"documentation":{"id":8009,"nodeType":"StructuredDocumentation","src":"18464:312:22","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":8034,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:22","nodeType":"FunctionDefinition","parameters":{"id":8012,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8011,"mutability":"mutable","name":"value","nameLocation":"18806:5:22","nodeType":"VariableDeclaration","scope":8034,"src":"18799:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8010,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:22"},"returnParameters":{"id":8015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8014,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:22","nodeType":"VariableDeclaration","scope":8034,"src":"18836:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":8013,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:22","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:22"},"scope":8803,"src":"18781:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8059,"nodeType":"Block","src":"19402:150:22","statements":[{"expression":{"id":8047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8042,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"19412:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8045,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"19432:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":8043,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:22","typeDescriptions":{}}},"id":8046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":8048,"nodeType":"ExpressionStatement","src":"19412:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8040,"src":"19452:10:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"19466:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8058,"nodeType":"IfStatement","src":"19448:98:22","trueBody":{"id":8057,"nodeType":"Block","src":"19473:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":8053,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:22","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":8054,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8037,"src":"19529:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8052,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"19494:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8055,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8056,"nodeType":"RevertStatement","src":"19487:48:22"}]}}]},"documentation":{"id":8035,"nodeType":"StructuredDocumentation","src":"19011:312:22","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":8060,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:22","nodeType":"FunctionDefinition","parameters":{"id":8038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8037,"mutability":"mutable","name":"value","nameLocation":"19353:5:22","nodeType":"VariableDeclaration","scope":8060,"src":"19346:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8036,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:22"},"returnParameters":{"id":8041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8040,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:22","nodeType":"VariableDeclaration","scope":8060,"src":"19383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":8039,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:22","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:22"},"scope":8803,"src":"19328:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8085,"nodeType":"Block","src":"19949:150:22","statements":[{"expression":{"id":8073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8068,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"19959:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"19979:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":8069,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:22","typeDescriptions":{}}},"id":8072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":8074,"nodeType":"ExpressionStatement","src":"19959:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8075,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8066,"src":"19999:10:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8076,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"20013:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8084,"nodeType":"IfStatement","src":"19995:98:22","trueBody":{"id":8083,"nodeType":"Block","src":"20020:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":8079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:22","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":8080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8063,"src":"20076:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8078,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"20041:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8082,"nodeType":"RevertStatement","src":"20034:48:22"}]}}]},"documentation":{"id":8061,"nodeType":"StructuredDocumentation","src":"19558:312:22","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":8086,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:22","nodeType":"FunctionDefinition","parameters":{"id":8064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8063,"mutability":"mutable","name":"value","nameLocation":"19900:5:22","nodeType":"VariableDeclaration","scope":8086,"src":"19893:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8062,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:22"},"returnParameters":{"id":8067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8066,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:22","nodeType":"VariableDeclaration","scope":8086,"src":"19930:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":8065,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:22","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:22"},"scope":8803,"src":"19875:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8111,"nodeType":"Block","src":"20496:150:22","statements":[{"expression":{"id":8099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8094,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"20506:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8097,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"20526:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":8095,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:22","typeDescriptions":{}}},"id":8098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":8100,"nodeType":"ExpressionStatement","src":"20506:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8101,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8092,"src":"20546:10:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8102,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"20560:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8110,"nodeType":"IfStatement","src":"20542:98:22","trueBody":{"id":8109,"nodeType":"Block","src":"20567:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":8105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:22","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":8106,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8089,"src":"20623:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8104,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"20588:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8107,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8108,"nodeType":"RevertStatement","src":"20581:48:22"}]}}]},"documentation":{"id":8087,"nodeType":"StructuredDocumentation","src":"20105:312:22","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":8112,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:22","nodeType":"FunctionDefinition","parameters":{"id":8090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8089,"mutability":"mutable","name":"value","nameLocation":"20447:5:22","nodeType":"VariableDeclaration","scope":8112,"src":"20440:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8088,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:22"},"returnParameters":{"id":8093,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8092,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:22","nodeType":"VariableDeclaration","scope":8112,"src":"20477:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":8091,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:22","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:22"},"scope":8803,"src":"20422:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8137,"nodeType":"Block","src":"21043:150:22","statements":[{"expression":{"id":8125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8120,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"21053:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8123,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"21073:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":8121,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:22","typeDescriptions":{}}},"id":8124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":8126,"nodeType":"ExpressionStatement","src":"21053:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8127,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8118,"src":"21093:10:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8128,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"21107:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8136,"nodeType":"IfStatement","src":"21089:98:22","trueBody":{"id":8135,"nodeType":"Block","src":"21114:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":8131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:22","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":8132,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8115,"src":"21170:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8130,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"21135:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8134,"nodeType":"RevertStatement","src":"21128:48:22"}]}}]},"documentation":{"id":8113,"nodeType":"StructuredDocumentation","src":"20652:312:22","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":8138,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:22","nodeType":"FunctionDefinition","parameters":{"id":8116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8115,"mutability":"mutable","name":"value","nameLocation":"20994:5:22","nodeType":"VariableDeclaration","scope":8138,"src":"20987:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8114,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:22"},"returnParameters":{"id":8119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8118,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:22","nodeType":"VariableDeclaration","scope":8138,"src":"21024:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":8117,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:22","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:22"},"scope":8803,"src":"20969:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8163,"nodeType":"Block","src":"21590:150:22","statements":[{"expression":{"id":8151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8146,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"21600:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8149,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"21620:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8148,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":8147,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:22","typeDescriptions":{}}},"id":8150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":8152,"nodeType":"ExpressionStatement","src":"21600:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8153,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8144,"src":"21640:10:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"21654:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8162,"nodeType":"IfStatement","src":"21636:98:22","trueBody":{"id":8161,"nodeType":"Block","src":"21661:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":8157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:22","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":8158,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8141,"src":"21717:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8156,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"21682:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8160,"nodeType":"RevertStatement","src":"21675:48:22"}]}}]},"documentation":{"id":8139,"nodeType":"StructuredDocumentation","src":"21199:312:22","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":8164,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:22","nodeType":"FunctionDefinition","parameters":{"id":8142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8141,"mutability":"mutable","name":"value","nameLocation":"21541:5:22","nodeType":"VariableDeclaration","scope":8164,"src":"21534:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8140,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:22"},"returnParameters":{"id":8145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8144,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:22","nodeType":"VariableDeclaration","scope":8164,"src":"21571:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":8143,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:22","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:22"},"scope":8803,"src":"21516:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8189,"nodeType":"Block","src":"22137:150:22","statements":[{"expression":{"id":8177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8172,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8170,"src":"22147:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8175,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8167,"src":"22167:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":8173,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:22","typeDescriptions":{}}},"id":8176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":8178,"nodeType":"ExpressionStatement","src":"22147:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8170,"src":"22187:10:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8180,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8167,"src":"22201:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8188,"nodeType":"IfStatement","src":"22183:98:22","trueBody":{"id":8187,"nodeType":"Block","src":"22208:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":8183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:22","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":8184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8167,"src":"22264:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8182,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"22229:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8186,"nodeType":"RevertStatement","src":"22222:48:22"}]}}]},"documentation":{"id":8165,"nodeType":"StructuredDocumentation","src":"21746:312:22","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":8190,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:22","nodeType":"FunctionDefinition","parameters":{"id":8168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8167,"mutability":"mutable","name":"value","nameLocation":"22088:5:22","nodeType":"VariableDeclaration","scope":8190,"src":"22081:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8166,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:22"},"returnParameters":{"id":8171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8170,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:22","nodeType":"VariableDeclaration","scope":8190,"src":"22118:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":8169,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:22","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:22"},"scope":8803,"src":"22063:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8215,"nodeType":"Block","src":"22684:150:22","statements":[{"expression":{"id":8203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8198,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"22694:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8201,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"22714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":8199,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:22","typeDescriptions":{}}},"id":8202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":8204,"nodeType":"ExpressionStatement","src":"22694:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8205,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8196,"src":"22734:10:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8206,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"22748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8214,"nodeType":"IfStatement","src":"22730:98:22","trueBody":{"id":8213,"nodeType":"Block","src":"22755:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":8209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:22","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":8210,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8193,"src":"22811:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8208,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"22776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8212,"nodeType":"RevertStatement","src":"22769:48:22"}]}}]},"documentation":{"id":8191,"nodeType":"StructuredDocumentation","src":"22293:312:22","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":8216,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:22","nodeType":"FunctionDefinition","parameters":{"id":8194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8193,"mutability":"mutable","name":"value","nameLocation":"22635:5:22","nodeType":"VariableDeclaration","scope":8216,"src":"22628:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8192,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:22"},"returnParameters":{"id":8197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8196,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:22","nodeType":"VariableDeclaration","scope":8216,"src":"22665:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":8195,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:22","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:22"},"scope":8803,"src":"22610:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8241,"nodeType":"Block","src":"23231:150:22","statements":[{"expression":{"id":8229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8224,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"23241:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"23261:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":8225,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:22","typeDescriptions":{}}},"id":8228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":8230,"nodeType":"ExpressionStatement","src":"23241:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8233,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8231,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8222,"src":"23281:10:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8232,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"23295:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8240,"nodeType":"IfStatement","src":"23277:98:22","trueBody":{"id":8239,"nodeType":"Block","src":"23302:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":8235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:22","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":8236,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8219,"src":"23358:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8234,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"23323:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8238,"nodeType":"RevertStatement","src":"23316:48:22"}]}}]},"documentation":{"id":8217,"nodeType":"StructuredDocumentation","src":"22840:312:22","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":8242,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:22","nodeType":"FunctionDefinition","parameters":{"id":8220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8219,"mutability":"mutable","name":"value","nameLocation":"23182:5:22","nodeType":"VariableDeclaration","scope":8242,"src":"23175:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8218,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:22"},"returnParameters":{"id":8223,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8222,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:22","nodeType":"VariableDeclaration","scope":8242,"src":"23212:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":8221,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:22","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:22"},"scope":8803,"src":"23157:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8267,"nodeType":"Block","src":"23778:150:22","statements":[{"expression":{"id":8255,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8250,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"23788:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8253,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"23808:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8252,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":8251,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:22","typeDescriptions":{}}},"id":8254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":8256,"nodeType":"ExpressionStatement","src":"23788:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8257,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8248,"src":"23828:10:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8258,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"23842:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8266,"nodeType":"IfStatement","src":"23824:98:22","trueBody":{"id":8265,"nodeType":"Block","src":"23849:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":8261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:22","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":8262,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8245,"src":"23905:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8260,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"23870:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8264,"nodeType":"RevertStatement","src":"23863:48:22"}]}}]},"documentation":{"id":8243,"nodeType":"StructuredDocumentation","src":"23387:312:22","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":8268,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:22","nodeType":"FunctionDefinition","parameters":{"id":8246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8245,"mutability":"mutable","name":"value","nameLocation":"23729:5:22","nodeType":"VariableDeclaration","scope":8268,"src":"23722:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8244,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:22"},"returnParameters":{"id":8249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8248,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:22","nodeType":"VariableDeclaration","scope":8268,"src":"23759:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":8247,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:22","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:22"},"scope":8803,"src":"23704:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8293,"nodeType":"Block","src":"24325:150:22","statements":[{"expression":{"id":8281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8276,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"24335:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"24355:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":8277,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:22","typeDescriptions":{}}},"id":8280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":8282,"nodeType":"ExpressionStatement","src":"24335:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8283,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8274,"src":"24375:10:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"24389:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8292,"nodeType":"IfStatement","src":"24371:98:22","trueBody":{"id":8291,"nodeType":"Block","src":"24396:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":8287,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:22","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":8288,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8271,"src":"24452:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8286,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24417:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8289,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8290,"nodeType":"RevertStatement","src":"24410:48:22"}]}}]},"documentation":{"id":8269,"nodeType":"StructuredDocumentation","src":"23934:312:22","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":8294,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:22","nodeType":"FunctionDefinition","parameters":{"id":8272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8271,"mutability":"mutable","name":"value","nameLocation":"24276:5:22","nodeType":"VariableDeclaration","scope":8294,"src":"24269:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8270,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:22"},"returnParameters":{"id":8275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8274,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:22","nodeType":"VariableDeclaration","scope":8294,"src":"24306:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":8273,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:22","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:22"},"scope":8803,"src":"24251:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8319,"nodeType":"Block","src":"24872:150:22","statements":[{"expression":{"id":8307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"24882:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8305,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"24902:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":8303,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:22","typeDescriptions":{}}},"id":8306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":8308,"nodeType":"ExpressionStatement","src":"24882:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8309,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8300,"src":"24922:10:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"24936:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8318,"nodeType":"IfStatement","src":"24918:98:22","trueBody":{"id":8317,"nodeType":"Block","src":"24943:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":8313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:22","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":8314,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8297,"src":"24999:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8312,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"24964:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8316,"nodeType":"RevertStatement","src":"24957:48:22"}]}}]},"documentation":{"id":8295,"nodeType":"StructuredDocumentation","src":"24481:312:22","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":8320,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:22","nodeType":"FunctionDefinition","parameters":{"id":8298,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8297,"mutability":"mutable","name":"value","nameLocation":"24823:5:22","nodeType":"VariableDeclaration","scope":8320,"src":"24816:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8296,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:22"},"returnParameters":{"id":8301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8300,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:22","nodeType":"VariableDeclaration","scope":8320,"src":"24853:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":8299,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:22","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:22"},"scope":8803,"src":"24798:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8345,"nodeType":"Block","src":"25419:150:22","statements":[{"expression":{"id":8333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8328,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"25429:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8331,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"25449:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8330,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":8329,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:22","typeDescriptions":{}}},"id":8332,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":8334,"nodeType":"ExpressionStatement","src":"25429:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8335,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8326,"src":"25469:10:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8336,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"25483:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8344,"nodeType":"IfStatement","src":"25465:98:22","trueBody":{"id":8343,"nodeType":"Block","src":"25490:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":8339,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:22","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":8340,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8323,"src":"25546:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8338,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"25511:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8341,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8342,"nodeType":"RevertStatement","src":"25504:48:22"}]}}]},"documentation":{"id":8321,"nodeType":"StructuredDocumentation","src":"25028:312:22","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":8346,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:22","nodeType":"FunctionDefinition","parameters":{"id":8324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8323,"mutability":"mutable","name":"value","nameLocation":"25370:5:22","nodeType":"VariableDeclaration","scope":8346,"src":"25363:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8322,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:22"},"returnParameters":{"id":8327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8326,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:22","nodeType":"VariableDeclaration","scope":8346,"src":"25400:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":8325,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:22","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:22"},"scope":8803,"src":"25345:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8371,"nodeType":"Block","src":"25966:150:22","statements":[{"expression":{"id":8359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8354,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8352,"src":"25976:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"25996:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":8355,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:22","typeDescriptions":{}}},"id":8358,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":8360,"nodeType":"ExpressionStatement","src":"25976:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8361,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8352,"src":"26016:10:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8362,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"26030:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8370,"nodeType":"IfStatement","src":"26012:98:22","trueBody":{"id":8369,"nodeType":"Block","src":"26037:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":8365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":8366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8349,"src":"26093:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8364,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"26058:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8368,"nodeType":"RevertStatement","src":"26051:48:22"}]}}]},"documentation":{"id":8347,"nodeType":"StructuredDocumentation","src":"25575:312:22","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":8372,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:22","nodeType":"FunctionDefinition","parameters":{"id":8350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8349,"mutability":"mutable","name":"value","nameLocation":"25917:5:22","nodeType":"VariableDeclaration","scope":8372,"src":"25910:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8348,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:22"},"returnParameters":{"id":8353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8352,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:22","nodeType":"VariableDeclaration","scope":8372,"src":"25947:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":8351,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:22","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:22"},"scope":8803,"src":"25892:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8397,"nodeType":"Block","src":"26513:150:22","statements":[{"expression":{"id":8385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8380,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"26523:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8383,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"26543:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":8381,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:22","typeDescriptions":{}}},"id":8384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":8386,"nodeType":"ExpressionStatement","src":"26523:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8387,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8378,"src":"26563:10:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"26577:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8396,"nodeType":"IfStatement","src":"26559:98:22","trueBody":{"id":8395,"nodeType":"Block","src":"26584:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":8391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:22","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":8392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8375,"src":"26640:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8390,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"26605:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8393,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8394,"nodeType":"RevertStatement","src":"26598:48:22"}]}}]},"documentation":{"id":8373,"nodeType":"StructuredDocumentation","src":"26122:312:22","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":8398,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:22","nodeType":"FunctionDefinition","parameters":{"id":8376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8375,"mutability":"mutable","name":"value","nameLocation":"26464:5:22","nodeType":"VariableDeclaration","scope":8398,"src":"26457:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8374,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:22"},"returnParameters":{"id":8379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8378,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:22","nodeType":"VariableDeclaration","scope":8398,"src":"26494:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":8377,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:22","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:22"},"scope":8803,"src":"26439:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8423,"nodeType":"Block","src":"27060:150:22","statements":[{"expression":{"id":8411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8406,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"27070:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8409,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"27090:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8408,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":8407,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:22","typeDescriptions":{}}},"id":8410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":8412,"nodeType":"ExpressionStatement","src":"27070:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8413,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8404,"src":"27110:10:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"27124:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8422,"nodeType":"IfStatement","src":"27106:98:22","trueBody":{"id":8421,"nodeType":"Block","src":"27131:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":8417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:22","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":8418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8401,"src":"27187:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8416,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"27152:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8419,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8420,"nodeType":"RevertStatement","src":"27145:48:22"}]}}]},"documentation":{"id":8399,"nodeType":"StructuredDocumentation","src":"26669:312:22","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":8424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:22","nodeType":"FunctionDefinition","parameters":{"id":8402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8401,"mutability":"mutable","name":"value","nameLocation":"27011:5:22","nodeType":"VariableDeclaration","scope":8424,"src":"27004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8400,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:22"},"returnParameters":{"id":8405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8404,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:22","nodeType":"VariableDeclaration","scope":8424,"src":"27041:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":8403,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:22","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:22"},"scope":8803,"src":"26986:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8449,"nodeType":"Block","src":"27607:150:22","statements":[{"expression":{"id":8437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"27617:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"27637:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":8433,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:22","typeDescriptions":{}}},"id":8436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":8438,"nodeType":"ExpressionStatement","src":"27617:26:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8439,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8430,"src":"27657:10:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8440,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"27671:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8448,"nodeType":"IfStatement","src":"27653:98:22","trueBody":{"id":8447,"nodeType":"Block","src":"27678:73:22","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":8443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:22","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":8444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8427,"src":"27734:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8442,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"27699:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8446,"nodeType":"RevertStatement","src":"27692:48:22"}]}}]},"documentation":{"id":8425,"nodeType":"StructuredDocumentation","src":"27216:312:22","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":8450,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:22","nodeType":"FunctionDefinition","parameters":{"id":8428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8427,"mutability":"mutable","name":"value","nameLocation":"27558:5:22","nodeType":"VariableDeclaration","scope":8450,"src":"27551:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8426,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:22"},"returnParameters":{"id":8431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8430,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:22","nodeType":"VariableDeclaration","scope":8450,"src":"27588:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":8429,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:22","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:22"},"scope":8803,"src":"27533:224:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8475,"nodeType":"Block","src":"28147:148:22","statements":[{"expression":{"id":8463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8458,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"28157:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8461,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"28176:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8460,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":8459,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:22","typeDescriptions":{}}},"id":8462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":8464,"nodeType":"ExpressionStatement","src":"28157:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8465,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8456,"src":"28196:10:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"28210:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8474,"nodeType":"IfStatement","src":"28192:97:22","trueBody":{"id":8473,"nodeType":"Block","src":"28217:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":8469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:22","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":8470,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8453,"src":"28272:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8468,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"28238:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8472,"nodeType":"RevertStatement","src":"28231:47:22"}]}}]},"documentation":{"id":8451,"nodeType":"StructuredDocumentation","src":"27763:307:22","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":8476,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:22","nodeType":"FunctionDefinition","parameters":{"id":8454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8453,"mutability":"mutable","name":"value","nameLocation":"28099:5:22","nodeType":"VariableDeclaration","scope":8476,"src":"28092:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8452,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:22"},"returnParameters":{"id":8457,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8456,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:22","nodeType":"VariableDeclaration","scope":8476,"src":"28129:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":8455,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:22","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:22"},"scope":8803,"src":"28075:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8501,"nodeType":"Block","src":"28685:148:22","statements":[{"expression":{"id":8489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8484,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"28695:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"28714:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8486,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":8485,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:22","typeDescriptions":{}}},"id":8488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":8490,"nodeType":"ExpressionStatement","src":"28695:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8491,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8482,"src":"28734:10:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8492,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"28748:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8500,"nodeType":"IfStatement","src":"28730:97:22","trueBody":{"id":8499,"nodeType":"Block","src":"28755:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":8495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:22","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":8496,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8479,"src":"28810:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8494,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"28776:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8498,"nodeType":"RevertStatement","src":"28769:47:22"}]}}]},"documentation":{"id":8477,"nodeType":"StructuredDocumentation","src":"28301:307:22","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":8502,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:22","nodeType":"FunctionDefinition","parameters":{"id":8480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8479,"mutability":"mutable","name":"value","nameLocation":"28637:5:22","nodeType":"VariableDeclaration","scope":8502,"src":"28630:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8478,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:22"},"returnParameters":{"id":8483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8482,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:22","nodeType":"VariableDeclaration","scope":8502,"src":"28667:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":8481,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:22","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:22"},"scope":8803,"src":"28613:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8527,"nodeType":"Block","src":"29223:148:22","statements":[{"expression":{"id":8515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8510,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"29233:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8513,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"29252:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":8511,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:22","typeDescriptions":{}}},"id":8514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":8516,"nodeType":"ExpressionStatement","src":"29233:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8517,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8508,"src":"29272:10:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8518,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"29286:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8526,"nodeType":"IfStatement","src":"29268:97:22","trueBody":{"id":8525,"nodeType":"Block","src":"29293:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":8521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:22","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":8522,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8505,"src":"29348:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8520,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"29314:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8524,"nodeType":"RevertStatement","src":"29307:47:22"}]}}]},"documentation":{"id":8503,"nodeType":"StructuredDocumentation","src":"28839:307:22","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":8528,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:22","nodeType":"FunctionDefinition","parameters":{"id":8506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8505,"mutability":"mutable","name":"value","nameLocation":"29175:5:22","nodeType":"VariableDeclaration","scope":8528,"src":"29168:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8504,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:22"},"returnParameters":{"id":8509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8508,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:22","nodeType":"VariableDeclaration","scope":8528,"src":"29205:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":8507,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:22","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:22"},"scope":8803,"src":"29151:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8553,"nodeType":"Block","src":"29761:148:22","statements":[{"expression":{"id":8541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8536,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"29771:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8539,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"29790:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":8537,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:22","typeDescriptions":{}}},"id":8540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":8542,"nodeType":"ExpressionStatement","src":"29771:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8543,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8534,"src":"29810:10:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"29824:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8552,"nodeType":"IfStatement","src":"29806:97:22","trueBody":{"id":8551,"nodeType":"Block","src":"29831:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":8547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:22","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":8548,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8531,"src":"29886:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8546,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"29852:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8549,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8550,"nodeType":"RevertStatement","src":"29845:47:22"}]}}]},"documentation":{"id":8529,"nodeType":"StructuredDocumentation","src":"29377:307:22","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":8554,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:22","nodeType":"FunctionDefinition","parameters":{"id":8532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8531,"mutability":"mutable","name":"value","nameLocation":"29713:5:22","nodeType":"VariableDeclaration","scope":8554,"src":"29706:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8530,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:22"},"returnParameters":{"id":8535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8534,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:22","nodeType":"VariableDeclaration","scope":8554,"src":"29743:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":8533,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:22","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:22"},"scope":8803,"src":"29689:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8579,"nodeType":"Block","src":"30299:148:22","statements":[{"expression":{"id":8567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8562,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8560,"src":"30309:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8565,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"30328:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8564,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":8563,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:22","typeDescriptions":{}}},"id":8566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":8568,"nodeType":"ExpressionStatement","src":"30309:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8569,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8560,"src":"30348:10:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8570,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"30362:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8578,"nodeType":"IfStatement","src":"30344:97:22","trueBody":{"id":8577,"nodeType":"Block","src":"30369:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":8573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":8574,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8557,"src":"30424:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8572,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"30390:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8576,"nodeType":"RevertStatement","src":"30383:47:22"}]}}]},"documentation":{"id":8555,"nodeType":"StructuredDocumentation","src":"29915:307:22","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":8580,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:22","nodeType":"FunctionDefinition","parameters":{"id":8558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8557,"mutability":"mutable","name":"value","nameLocation":"30251:5:22","nodeType":"VariableDeclaration","scope":8580,"src":"30244:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8556,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:22"},"returnParameters":{"id":8561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8560,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:22","nodeType":"VariableDeclaration","scope":8580,"src":"30281:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":8559,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:22","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:22"},"scope":8803,"src":"30227:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8605,"nodeType":"Block","src":"30837:148:22","statements":[{"expression":{"id":8593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8588,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"30847:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"30866:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":8589,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:22","typeDescriptions":{}}},"id":8592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":8594,"nodeType":"ExpressionStatement","src":"30847:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8595,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8586,"src":"30886:10:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"30900:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8604,"nodeType":"IfStatement","src":"30882:97:22","trueBody":{"id":8603,"nodeType":"Block","src":"30907:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":8599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:22","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":8600,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8583,"src":"30962:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8598,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"30928:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8601,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8602,"nodeType":"RevertStatement","src":"30921:47:22"}]}}]},"documentation":{"id":8581,"nodeType":"StructuredDocumentation","src":"30453:307:22","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":8606,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:22","nodeType":"FunctionDefinition","parameters":{"id":8584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8583,"mutability":"mutable","name":"value","nameLocation":"30789:5:22","nodeType":"VariableDeclaration","scope":8606,"src":"30782:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8582,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:22"},"returnParameters":{"id":8587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8586,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:22","nodeType":"VariableDeclaration","scope":8606,"src":"30819:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":8585,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:22","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:22"},"scope":8803,"src":"30765:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8631,"nodeType":"Block","src":"31375:148:22","statements":[{"expression":{"id":8619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8614,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"31385:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8617,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"31404:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8616,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":8615,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:22","typeDescriptions":{}}},"id":8618,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":8620,"nodeType":"ExpressionStatement","src":"31385:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8621,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8612,"src":"31424:10:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8622,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"31438:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8630,"nodeType":"IfStatement","src":"31420:97:22","trueBody":{"id":8629,"nodeType":"Block","src":"31445:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":8625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":8626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8609,"src":"31500:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8624,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"31466:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8628,"nodeType":"RevertStatement","src":"31459:47:22"}]}}]},"documentation":{"id":8607,"nodeType":"StructuredDocumentation","src":"30991:307:22","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":8632,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:22","nodeType":"FunctionDefinition","parameters":{"id":8610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8609,"mutability":"mutable","name":"value","nameLocation":"31327:5:22","nodeType":"VariableDeclaration","scope":8632,"src":"31320:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8608,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:22"},"returnParameters":{"id":8613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8612,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:22","nodeType":"VariableDeclaration","scope":8632,"src":"31357:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":8611,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:22","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:22"},"scope":8803,"src":"31303:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8657,"nodeType":"Block","src":"31913:148:22","statements":[{"expression":{"id":8645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8640,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"31923:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8643,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"31942:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8642,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":8641,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:22","typeDescriptions":{}}},"id":8644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":8646,"nodeType":"ExpressionStatement","src":"31923:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8638,"src":"31962:10:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"31976:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8656,"nodeType":"IfStatement","src":"31958:97:22","trueBody":{"id":8655,"nodeType":"Block","src":"31983:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":8651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:22","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":8652,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8635,"src":"32038:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8650,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"32004:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8654,"nodeType":"RevertStatement","src":"31997:47:22"}]}}]},"documentation":{"id":8633,"nodeType":"StructuredDocumentation","src":"31529:307:22","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":8658,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:22","nodeType":"FunctionDefinition","parameters":{"id":8636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8635,"mutability":"mutable","name":"value","nameLocation":"31865:5:22","nodeType":"VariableDeclaration","scope":8658,"src":"31858:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8634,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:22"},"returnParameters":{"id":8639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8638,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:22","nodeType":"VariableDeclaration","scope":8658,"src":"31895:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":8637,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:22","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:22"},"scope":8803,"src":"31841:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8683,"nodeType":"Block","src":"32451:148:22","statements":[{"expression":{"id":8671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8666,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"32461:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8669,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"32480:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":8667,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:22","typeDescriptions":{}}},"id":8670,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":8672,"nodeType":"ExpressionStatement","src":"32461:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8673,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8664,"src":"32500:10:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8674,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"32514:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8682,"nodeType":"IfStatement","src":"32496:97:22","trueBody":{"id":8681,"nodeType":"Block","src":"32521:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":8677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":8678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8661,"src":"32576:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8676,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"32542:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8680,"nodeType":"RevertStatement","src":"32535:47:22"}]}}]},"documentation":{"id":8659,"nodeType":"StructuredDocumentation","src":"32067:307:22","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":8684,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:22","nodeType":"FunctionDefinition","parameters":{"id":8662,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8661,"mutability":"mutable","name":"value","nameLocation":"32403:5:22","nodeType":"VariableDeclaration","scope":8684,"src":"32396:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8660,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:22"},"returnParameters":{"id":8665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8664,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:22","nodeType":"VariableDeclaration","scope":8684,"src":"32433:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":8663,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:22","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:22"},"scope":8803,"src":"32379:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8709,"nodeType":"Block","src":"32989:148:22","statements":[{"expression":{"id":8697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8692,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"32999:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8695,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"33018:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8694,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":8693,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:22","typeDescriptions":{}}},"id":8696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":8698,"nodeType":"ExpressionStatement","src":"32999:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8699,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8690,"src":"33038:10:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8700,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"33052:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8708,"nodeType":"IfStatement","src":"33034:97:22","trueBody":{"id":8707,"nodeType":"Block","src":"33059:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":8703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:22","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":8704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8687,"src":"33114:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8702,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"33080:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8706,"nodeType":"RevertStatement","src":"33073:47:22"}]}}]},"documentation":{"id":8685,"nodeType":"StructuredDocumentation","src":"32605:307:22","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":8710,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:22","nodeType":"FunctionDefinition","parameters":{"id":8688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8687,"mutability":"mutable","name":"value","nameLocation":"32941:5:22","nodeType":"VariableDeclaration","scope":8710,"src":"32934:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8686,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:22"},"returnParameters":{"id":8691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8690,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:22","nodeType":"VariableDeclaration","scope":8710,"src":"32971:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":8689,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:22","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:22"},"scope":8803,"src":"32917:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8735,"nodeType":"Block","src":"33527:148:22","statements":[{"expression":{"id":8723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8718,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"33537:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8721,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"33556:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":8719,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:22","typeDescriptions":{}}},"id":8722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":8724,"nodeType":"ExpressionStatement","src":"33537:25:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8725,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8716,"src":"33576:10:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8726,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"33590:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8734,"nodeType":"IfStatement","src":"33572:97:22","trueBody":{"id":8733,"nodeType":"Block","src":"33597:72:22","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":8729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":8730,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8713,"src":"33652:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8728,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"33618:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8732,"nodeType":"RevertStatement","src":"33611:47:22"}]}}]},"documentation":{"id":8711,"nodeType":"StructuredDocumentation","src":"33143:307:22","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":8736,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:22","nodeType":"FunctionDefinition","parameters":{"id":8714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8713,"mutability":"mutable","name":"value","nameLocation":"33479:5:22","nodeType":"VariableDeclaration","scope":8736,"src":"33472:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8712,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:22"},"returnParameters":{"id":8717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8716,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:22","nodeType":"VariableDeclaration","scope":8736,"src":"33509:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":8715,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:22","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:22"},"scope":8803,"src":"33455:220:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8761,"nodeType":"Block","src":"34058:146:22","statements":[{"expression":{"id":8749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8744,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"34068:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":8747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"34086:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8746,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":8745,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:22","typeDescriptions":{}}},"id":8748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":8750,"nodeType":"ExpressionStatement","src":"34068:24:22"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8751,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8742,"src":"34106:10:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":8752,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"34120:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8760,"nodeType":"IfStatement","src":"34102:96:22","trueBody":{"id":8759,"nodeType":"Block","src":"34127:71:22","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":8755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":8756,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8739,"src":"34181:5:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8754,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7060,"src":"34148:29:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$__$","typeString":"function (uint8,int256) pure"}},"id":8757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8758,"nodeType":"RevertStatement","src":"34141:46:22"}]}}]},"documentation":{"id":8737,"nodeType":"StructuredDocumentation","src":"33681:302:22","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":8762,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:22","nodeType":"FunctionDefinition","parameters":{"id":8740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8739,"mutability":"mutable","name":"value","nameLocation":"34011:5:22","nodeType":"VariableDeclaration","scope":8762,"src":"34004:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8738,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:22"},"returnParameters":{"id":8743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8742,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:22","nodeType":"VariableDeclaration","scope":8762,"src":"34041:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":8741,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:22","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:22"},"scope":8803,"src":"33988:216:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8791,"nodeType":"Block","src":"34444:250:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8770,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"34557:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":8775,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8774,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:22","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":8773,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:22","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":8776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":8777,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:22","memberName":"max","nodeType":"MemberAccess","src":"34573:16:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8772,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8771,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:22","typeDescriptions":{}}},"id":8778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":8785,"nodeType":"IfStatement","src":"34553:105:22","trueBody":{"id":8784,"nodeType":"Block","src":"34592:66:22","statements":[{"errorCall":{"arguments":[{"id":8781,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"34641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8780,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"34613:27:22","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":8782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8783,"nodeType":"RevertStatement","src":"34606:41:22"}]}},{"expression":{"arguments":[{"id":8788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8765,"src":"34681:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8786,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:22","typeDescriptions":{}}},"id":8789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8769,"id":8790,"nodeType":"Return","src":"34667:20:22"}]},"documentation":{"id":8763,"nodeType":"StructuredDocumentation","src":"34210:165:22","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":8792,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:22","nodeType":"FunctionDefinition","parameters":{"id":8766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8765,"mutability":"mutable","name":"value","nameLocation":"34406:5:22","nodeType":"VariableDeclaration","scope":8792,"src":"34398:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8764,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:22"},"returnParameters":{"id":8769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8792,"src":"34436:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8767,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:22"},"scope":8803,"src":"34380:314:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8801,"nodeType":"Block","src":"34853:87:22","statements":[{"AST":{"nodeType":"YulBlock","src":"34888:46:22","statements":[{"nodeType":"YulAssignment","src":"34902:22:22","value":{"arguments":[{"arguments":[{"name":"b","nodeType":"YulIdentifier","src":"34921:1:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34914:6:22"},"nodeType":"YulFunctionCall","src":"34914:9:22"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"34907:6:22"},"nodeType":"YulFunctionCall","src":"34907:17:22"},"variableNames":[{"name":"u","nodeType":"YulIdentifier","src":"34902:1:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":8795,"isOffset":false,"isSlot":false,"src":"34921:1:22","valueSize":1},{"declaration":8798,"isOffset":false,"isSlot":false,"src":"34902:1:22","valueSize":1}],"flags":["memory-safe"],"id":8800,"nodeType":"InlineAssembly","src":"34863:71:22"}]},"documentation":{"id":8793,"nodeType":"StructuredDocumentation","src":"34700:90:22","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":8802,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:22","nodeType":"FunctionDefinition","parameters":{"id":8796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8795,"mutability":"mutable","name":"b","nameLocation":"34816:1:22","nodeType":"VariableDeclaration","scope":8802,"src":"34811:6:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8794,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:22"},"returnParameters":{"id":8799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8798,"mutability":"mutable","name":"u","nameLocation":"34850:1:22","nodeType":"VariableDeclaration","scope":8802,"src":"34842:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8797,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:22"},"scope":8803,"src":"34795:145:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8804,"src":"769:34173:22","usedErrors":[7048,7053,7060,7065],"usedEvents":[]}],"src":"192:34751:22"},"id":22},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[8803],"SignedMath":[8947]},"id":8948,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8805,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:23"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":8807,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8948,"sourceUnit":8804,"src":"135:40:23","symbolAliases":[{"foreign":{"id":8806,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"143:8:23","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":8808,"nodeType":"StructuredDocumentation","src":"177:80:23","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":8947,"linearizedBaseContracts":[8947],"name":"SignedMath","nameLocation":"266:10:23","nodeType":"ContractDefinition","nodes":[{"body":{"id":8837,"nodeType":"Block","src":"746:215:23","statements":[{"id":8836,"nodeType":"UncheckedBlock","src":"756:199:23","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8820,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"894:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8821,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8813,"src":"900:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8822,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8815,"src":"904:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":8829,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8811,"src":"932:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":8827,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8803,"src":"916:8:23","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$8803_$","typeString":"type(library SafeCast)"}},"id":8828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:23","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":8802,"src":"916:15:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":8830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8825,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:23","typeDescriptions":{}}},"id":8831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8819,"id":8835,"nodeType":"Return","src":"887:57:23"}]}]},"documentation":{"id":8809,"nodeType":"StructuredDocumentation","src":"283:374:23","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":8838,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:23","nodeType":"FunctionDefinition","parameters":{"id":8816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8811,"mutability":"mutable","name":"condition","nameLocation":"684:9:23","nodeType":"VariableDeclaration","scope":8838,"src":"679:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":8810,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":8813,"mutability":"mutable","name":"a","nameLocation":"702:1:23","nodeType":"VariableDeclaration","scope":8838,"src":"695:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8812,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8815,"mutability":"mutable","name":"b","nameLocation":"712:1:23","nodeType":"VariableDeclaration","scope":8838,"src":"705:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8814,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:23"},"returnParameters":{"id":8819,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8818,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8838,"src":"738:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8817,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:23"},"scope":8947,"src":"662:299:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8856,"nodeType":"Block","src":"1102:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8849,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8841,"src":"1127:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":8850,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8843,"src":"1131:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8852,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8841,"src":"1134:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8853,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8843,"src":"1137:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8848,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"1119:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8847,"id":8855,"nodeType":"Return","src":"1112:27:23"}]},"documentation":{"id":8839,"nodeType":"StructuredDocumentation","src":"967:66:23","text":" @dev Returns the largest of two signed numbers."},"id":8857,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:23","nodeType":"FunctionDefinition","parameters":{"id":8844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8841,"mutability":"mutable","name":"a","nameLocation":"1058:1:23","nodeType":"VariableDeclaration","scope":8857,"src":"1051:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8840,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8843,"mutability":"mutable","name":"b","nameLocation":"1068:1:23","nodeType":"VariableDeclaration","scope":8857,"src":"1061:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8842,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:23"},"returnParameters":{"id":8847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8846,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8857,"src":"1094:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8845,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:23"},"scope":8947,"src":"1038:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8875,"nodeType":"Block","src":"1288:44:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8870,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"1313:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":8869,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"1317:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":8871,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8860,"src":"1320:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":8872,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8862,"src":"1323:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8867,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8838,"src":"1305:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":8873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8866,"id":8874,"nodeType":"Return","src":"1298:27:23"}]},"documentation":{"id":8858,"nodeType":"StructuredDocumentation","src":"1152:67:23","text":" @dev Returns the smallest of two signed numbers."},"id":8876,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:23","nodeType":"FunctionDefinition","parameters":{"id":8863,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8860,"mutability":"mutable","name":"a","nameLocation":"1244:1:23","nodeType":"VariableDeclaration","scope":8876,"src":"1237:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8859,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8862,"mutability":"mutable","name":"b","nameLocation":"1254:1:23","nodeType":"VariableDeclaration","scope":8876,"src":"1247:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8861,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:23"},"returnParameters":{"id":8866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8865,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8876,"src":"1280:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8864,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:23"},"scope":8947,"src":"1224:108:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8919,"nodeType":"Block","src":"1537:162:23","statements":[{"assignments":[8887],"declarations":[{"constant":false,"id":8887,"mutability":"mutable","name":"x","nameLocation":"1606:1:23","nodeType":"VariableDeclaration","scope":8919,"src":"1599:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8886,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8900,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8888,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"1611:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":8889,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"1615:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8891,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8892,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"1622:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8893,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"1626:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8895,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":8896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:23","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8898,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:23"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8901,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"1651:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":8909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":8906,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8887,"src":"1671:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8904,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:23","typeDescriptions":{}}},"id":8907,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":8903,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":8902,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:23","typeDescriptions":{}}},"id":8910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8911,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8879,"src":"1685:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8912,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8881,"src":"1689:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8916,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":8885,"id":8918,"nodeType":"Return","src":"1644:48:23"}]},"documentation":{"id":8877,"nodeType":"StructuredDocumentation","src":"1338:126:23","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":8920,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:23","nodeType":"FunctionDefinition","parameters":{"id":8882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8879,"mutability":"mutable","name":"a","nameLocation":"1493:1:23","nodeType":"VariableDeclaration","scope":8920,"src":"1486:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8878,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":8881,"mutability":"mutable","name":"b","nameLocation":"1503:1:23","nodeType":"VariableDeclaration","scope":8920,"src":"1496:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8880,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:23"},"returnParameters":{"id":8885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8884,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8920,"src":"1529:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8883,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:23"},"scope":8947,"src":"1469:230:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":8945,"nodeType":"Block","src":"1843:767:23","statements":[{"id":8944,"nodeType":"UncheckedBlock","src":"1853:751:23","statements":[{"assignments":[8929],"declarations":[{"constant":false,"id":8929,"mutability":"mutable","name":"mask","nameLocation":"2424:4:23","nodeType":"VariableDeclaration","scope":8944,"src":"2417:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8928,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":8933,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8932,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8930,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2431:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":8931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:23","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":8938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":8936,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8923,"src":"2576:1:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":8937,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2580:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":8939,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":8940,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8929,"src":"2588:4:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":8935,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":8934,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:23","typeDescriptions":{}}},"id":8942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":8927,"id":8943,"nodeType":"Return","src":"2560:33:23"}]}]},"documentation":{"id":8921,"nodeType":"StructuredDocumentation","src":"1705:78:23","text":" @dev Returns the absolute unsigned value of a signed value."},"id":8946,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:23","nodeType":"FunctionDefinition","parameters":{"id":8924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8923,"mutability":"mutable","name":"n","nameLocation":"1808:1:23","nodeType":"VariableDeclaration","scope":8946,"src":"1801:8:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":8922,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:23"},"returnParameters":{"id":8927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":8926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":8946,"src":"1834:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8925,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:23"},"scope":8947,"src":"1788:822:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":8948,"src":"258:2354:23","usedErrors":[],"usedEvents":[]}],"src":"109:2504:23"},"id":23},"contracts/AfterpartyEvent.sol":{"ast":{"absolutePath":"contracts/AfterpartyEvent.sol","exportedSymbols":{"AfterpartyEvent":[8986],"AttendanceToken":[9296],"Context":[3673],"ERC165":[5405],"ERC721":[2493],"ERC721Utils":[2733],"IERC165":[5417],"IERC721":[2610],"IERC721Errors":[237],"IERC721Metadata":[2656],"Ownable":[147],"Strings":[5381]},"id":8987,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8949,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:24"},{"absolutePath":"contracts/AttendanceToken.sol","file":"./AttendanceToken.sol","id":8950,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8987,"sourceUnit":9297,"src":"58:31:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8951,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":8987,"sourceUnit":148,"src":"90:52:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8953,"name":"Ownable","nameLocations":["235:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"235:7:24"},"id":8954,"nodeType":"InheritanceSpecifier","src":"235:7:24"}],"canonicalName":"AfterpartyEvent","contractDependencies":[9296],"contractKind":"contract","documentation":{"id":8952,"nodeType":"StructuredDocumentation","src":"144:63:24","text":"@title Simple event contract that issues attendance tokens"},"fullyImplemented":true,"id":8986,"linearizedBaseContracts":[8986,147,3673],"name":"AfterpartyEvent","nameLocation":"216:15:24","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"a9b5e2ea","id":8957,"mutability":"mutable","name":"attendanceToken","nameLocation":"272:15:24","nodeType":"VariableDeclaration","scope":8986,"src":"249:38:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"},"typeName":{"id":8956,"nodeType":"UserDefinedTypeName","pathNode":{"id":8955,"name":"AttendanceToken","nameLocations":["249:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":9296,"src":"249:15:24"},"referencedDeclaration":9296,"src":"249:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"}},"visibility":"public"},{"body":{"id":8972,"nodeType":"Block","src":"397:56:24","statements":[{"expression":{"id":8970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":8965,"name":"attendanceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"407:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":8968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"NewExpression","src":"425:19:24","typeDescriptions":{"typeIdentifier":"t_function_creation_nonpayable$__$returns$_t_contract$_AttendanceToken_$9296_$","typeString":"function () returns (contract AttendanceToken)"},"typeName":{"id":8967,"nodeType":"UserDefinedTypeName","pathNode":{"id":8966,"name":"AttendanceToken","nameLocations":["429:15:24"],"nodeType":"IdentifierPath","referencedDeclaration":9296,"src":"429:15:24"},"referencedDeclaration":9296,"src":"429:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"}}},"id":8969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"425:21:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"}},"src":"407:39:24","typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"}},"id":8971,"nodeType":"ExpressionStatement","src":"407:39:24"}]},"documentation":{"id":8958,"nodeType":"StructuredDocumentation","src":"294:64:24","text":"@notice Deploy a new event and accompanying attendance token"},"id":8973,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"expression":{"id":8961,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"385:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"389:6:24","memberName":"sender","nodeType":"MemberAccess","src":"385:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":8963,"kind":"baseConstructorSpecifier","modifierName":{"id":8960,"name":"Ownable","nameLocations":["377:7:24"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"377:7:24"},"nodeType":"ModifierInvocation","src":"377:19:24"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":8959,"nodeType":"ParameterList","parameters":[],"src":"374:2:24"},"returnParameters":{"id":8964,"nodeType":"ParameterList","parameters":[],"src":"397:0:24"},"scope":8986,"src":"363:90:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":8984,"nodeType":"Block","src":"541:50:24","statements":[{"expression":{"arguments":[{"expression":{"id":8980,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"573:3:24","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":8981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"577:6:24","memberName":"sender","nodeType":"MemberAccess","src":"573:10:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":8977,"name":"attendanceToken","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8957,"src":"551:15:24","typeDescriptions":{"typeIdentifier":"t_contract$_AttendanceToken_$9296","typeString":"contract AttendanceToken"}},"id":8979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"567:5:24","memberName":"claim","nodeType":"MemberAccess","referencedDeclaration":9295,"src":"551:21:24","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":8982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"551:33:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":8983,"nodeType":"ExpressionStatement","src":"551:33:24"}]},"documentation":{"id":8974,"nodeType":"StructuredDocumentation","src":"459:51:24","text":"@notice Mint an attendance token for the caller"},"functionSelector":"4e71d92d","id":8985,"implemented":true,"kind":"function","modifiers":[],"name":"claim","nameLocation":"524:5:24","nodeType":"FunctionDefinition","parameters":{"id":8975,"nodeType":"ParameterList","parameters":[],"src":"529:2:24"},"returnParameters":{"id":8976,"nodeType":"ParameterList","parameters":[],"src":"541:0:24"},"scope":8986,"src":"515:76:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":8987,"src":"207:386:24","usedErrors":[13,18],"usedEvents":[24]}],"src":"32:562:24"},"id":24},"contracts/AfterpartyEventToken.sol":{"ast":{"absolutePath":"contracts/AfterpartyEventToken.sol","exportedSymbols":{"AfterpartyEventToken":[9237],"Arrays":[3611],"Context":[3673],"ERC1155":[1201],"ERC1155Utils":[1536],"ERC165":[5405],"IERC1155":[1324],"IERC1155Errors":[284],"IERC1155MetadataURI":[1382],"IERC165":[5417],"Ownable":[147]},"id":9238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":8988,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","file":"@openzeppelin/contracts/token/ERC1155/ERC1155.sol","id":8989,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9238,"sourceUnit":1202,"src":"58:59:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":8990,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9238,"sourceUnit":148,"src":"118:52:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":8992,"name":"ERC1155","nameLocations":["349:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"349:7:25"},"id":8993,"nodeType":"InheritanceSpecifier","src":"349:7:25"},{"baseName":{"id":8994,"name":"Ownable","nameLocations":["358:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"358:7:25"},"id":8995,"nodeType":"InheritanceSpecifier","src":"358:7:25"}],"canonicalName":"AfterpartyEventToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":8991,"nodeType":"StructuredDocumentation","src":"172:144:25","text":"@title AfterpartyEventToken - ERC1155 tokens for event attendance\n @notice Each event gets its own token ID, attendees can mint editions"},"fullyImplemented":true,"id":9237,"linearizedBaseContracts":[9237,147,1201,284,1382,1324,5405,5417,3673],"name":"AfterpartyEventToken","nameLocation":"325:20:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":8997,"mutability":"mutable","name":"_eventIdCounter","nameLocation":"388:15:25","nodeType":"VariableDeclaration","scope":9237,"src":"372:31:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8996,"name":"uint256","nodeType":"ElementaryTypeName","src":"372:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"canonicalName":"AfterpartyEventToken.Event","id":9008,"members":[{"constant":false,"id":8999,"mutability":"mutable","name":"tokenId","nameLocation":"445:7:25","nodeType":"VariableDeclaration","scope":9008,"src":"437:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":8998,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9001,"mutability":"mutable","name":"organizer","nameLocation":"470:9:25","nodeType":"VariableDeclaration","scope":9008,"src":"462:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9000,"name":"address","nodeType":"ElementaryTypeName","src":"462:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9003,"mutability":"mutable","name":"uri","nameLocation":"496:3:25","nodeType":"VariableDeclaration","scope":9008,"src":"489:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":9002,"name":"string","nodeType":"ElementaryTypeName","src":"489:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":9005,"mutability":"mutable","name":"totalMinted","nameLocation":"517:11:25","nodeType":"VariableDeclaration","scope":9008,"src":"509:19:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9004,"name":"uint256","nodeType":"ElementaryTypeName","src":"509:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9007,"mutability":"mutable","name":"exists","nameLocation":"543:6:25","nodeType":"VariableDeclaration","scope":9008,"src":"538:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9006,"name":"bool","nodeType":"ElementaryTypeName","src":"538:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Event","nameLocation":"421:5:25","nodeType":"StructDefinition","scope":9237,"src":"414:142:25","visibility":"public"},{"constant":false,"functionSelector":"0b791430","id":9013,"mutability":"mutable","name":"events","nameLocation":"599:6:25","nodeType":"VariableDeclaration","scope":9237,"src":"566:39:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event)"},"typeName":{"id":9012,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9009,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"566:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9011,"nodeType":"UserDefinedTypeName","pathNode":{"id":9010,"name":"Event","nameLocations":["585:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":9008,"src":"585:5:25"},"referencedDeclaration":9008,"src":"585:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage_ptr","typeString":"struct AfterpartyEventToken.Event"}}},"visibility":"public"},{"constant":false,"functionSelector":"e4aa47e3","id":9018,"mutability":"mutable","name":"organizerEvents","nameLocation":"648:15:25","nodeType":"VariableDeclaration","scope":9237,"src":"611:52:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"typeName":{"id":9017,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9014,"name":"address","nodeType":"ElementaryTypeName","src":"619:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"611:29:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":9015,"name":"uint256","nodeType":"ElementaryTypeName","src":"630:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9016,"nodeType":"ArrayTypeName","src":"630:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"873f6f9e","id":9024,"mutability":"mutable","name":"hasClaimed","nameLocation":"721:10:25","nodeType":"VariableDeclaration","scope":9237,"src":"669:62:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"typeName":{"id":9023,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9019,"name":"uint256","nodeType":"ElementaryTypeName","src":"677:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"669:44:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9022,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9020,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"688:24:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9021,"name":"bool","nodeType":"ElementaryTypeName","src":"707:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"fc695dea2478fb938a11068aeedddd7046a5fe655f136e30a325d353fe187a45","id":9032,"name":"EventCreated","nameLocation":"748:12:25","nodeType":"EventDefinition","parameters":{"id":9031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9026,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"777:7:25","nodeType":"VariableDeclaration","scope":9032,"src":"761:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9025,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9028,"indexed":true,"mutability":"mutable","name":"organizer","nameLocation":"802:9:25","nodeType":"VariableDeclaration","scope":9032,"src":"786:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9027,"name":"address","nodeType":"ElementaryTypeName","src":"786:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9030,"indexed":false,"mutability":"mutable","name":"uri","nameLocation":"820:3:25","nodeType":"VariableDeclaration","scope":9032,"src":"813:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9029,"name":"string","nodeType":"ElementaryTypeName","src":"813:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"760:64:25"},"src":"742:83:25"},{"anonymous":false,"eventSelector":"2d03118aa776f7008445f6ca8490a6782ede2db364d741513555ba656ab1879f","id":9040,"name":"TokenMinted","nameLocation":"836:11:25","nodeType":"EventDefinition","parameters":{"id":9039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9034,"indexed":true,"mutability":"mutable","name":"eventId","nameLocation":"864:7:25","nodeType":"VariableDeclaration","scope":9040,"src":"848:23:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9033,"name":"uint256","nodeType":"ElementaryTypeName","src":"848:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":9036,"indexed":true,"mutability":"mutable","name":"attendee","nameLocation":"889:8:25","nodeType":"VariableDeclaration","scope":9040,"src":"873:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9035,"name":"address","nodeType":"ElementaryTypeName","src":"873:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":9038,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"907:6:25","nodeType":"VariableDeclaration","scope":9040,"src":"899:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9037,"name":"uint256","nodeType":"ElementaryTypeName","src":"899:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"847:67:25"},"src":"830:85:25"},{"body":{"id":9050,"nodeType":"Block","src":"971:2:25","statements":[]},"id":9051,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"","id":9043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"947:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"id":9044,"kind":"baseConstructorSpecifier","modifierName":{"id":9042,"name":"ERC1155","nameLocations":["939:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":1201,"src":"939:7:25"},"nodeType":"ModifierInvocation","src":"939:11:25"},{"arguments":[{"expression":{"id":9046,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"959:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"963:6:25","memberName":"sender","nodeType":"MemberAccess","src":"959:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9048,"kind":"baseConstructorSpecifier","modifierName":{"id":9045,"name":"Ownable","nameLocations":["951:7:25"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"951:7:25"},"nodeType":"ModifierInvocation","src":"951:19:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9041,"nodeType":"ParameterList","parameters":[],"src":"936:2:25"},"returnParameters":{"id":9049,"nodeType":"ParameterList","parameters":[],"src":"971:0:25"},"scope":9237,"src":"925:48:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9120,"nodeType":"Block","src":"1255:614:25","statements":[{"expression":{"id":9060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1265:17:25","subExpression":{"id":9059,"name":"_eventIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"1265:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9061,"nodeType":"ExpressionStatement","src":"1265:17:25"},{"assignments":[9063],"declarations":[{"constant":false,"id":9063,"mutability":"mutable","name":"newEventId","nameLocation":"1300:10:25","nodeType":"VariableDeclaration","scope":9120,"src":"1292:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9062,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":9065,"initialValue":{"id":9064,"name":"_eventIdCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":8997,"src":"1313:15:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1292:36:25"},{"expression":{"id":9077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9066,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"1347:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9068,"indexExpression":{"id":9067,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1354:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1347:18:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":9070,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1397:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9071,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1432:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1436:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1432:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9073,"name":"eventUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9054,"src":"1461:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":9074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1496:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"74727565","id":9075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1519:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":9069,"name":"Event","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9008,"src":"1368:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Event_$9008_storage_ptr_$","typeString":"type(struct AfterpartyEventToken.Event storage pointer)"}},"id":9076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1388:7:25","1421:9:25","1456:3:25","1483:11:25","1511:6:25"],"names":["tokenId","organizer","uri","totalMinted","exists"],"nodeType":"FunctionCall","src":"1368:166:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_memory_ptr","typeString":"struct AfterpartyEventToken.Event memory"}},"src":"1347:187:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"id":9078,"nodeType":"ExpressionStatement","src":"1347:187:25"},{"expression":{"arguments":[{"id":9084,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1586:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":9079,"name":"organizerEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"1553:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":9082,"indexExpression":{"expression":{"id":9080,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1569:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1573:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1569:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1553:27:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":9083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1581:4:25","memberName":"push","nodeType":"MemberAccess","src":"1553:32:25","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":9085,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1553:44:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9086,"nodeType":"ExpressionStatement","src":"1553:44:25"},{"expression":{"arguments":[{"expression":{"id":9088,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1622:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1626:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1622:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9090,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1634:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1646:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":9092,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1649:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9087,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"1616:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1616:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9094,"nodeType":"ExpressionStatement","src":"1616:36:25"},{"expression":{"id":9102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9095,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"1662:10:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9099,"indexExpression":{"id":9096,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1673:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1662:22:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9100,"indexExpression":{"expression":{"id":9097,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1685:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1689:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1685:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1662:34:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1699:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1662:41:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9103,"nodeType":"ExpressionStatement","src":"1662:41:25"},{"eventCall":{"arguments":[{"id":9105,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1740:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1752:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1756:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1752:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9108,"name":"eventUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9054,"src":"1764:8:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":9104,"name":"EventCreated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9032,"src":"1727:12:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,address,string memory)"}},"id":9109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1727:46:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9110,"nodeType":"EmitStatement","src":"1722:51:25"},{"eventCall":{"arguments":[{"id":9112,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1800:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9113,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1812:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1816:6:25","memberName":"sender","nodeType":"MemberAccess","src":"1812:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":9115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1824:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9111,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"1788:11:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":9116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1788:38:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9117,"nodeType":"EmitStatement","src":"1783:43:25"},{"expression":{"id":9118,"name":"newEventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9063,"src":"1852:10:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":9058,"id":9119,"nodeType":"Return","src":"1845:17:25"}]},"documentation":{"id":9052,"nodeType":"StructuredDocumentation","src":"983:195:25","text":"@notice Create a new event and mint the first token to the organizer\n @param eventUri The metadata URI for this event's tokens\n @return eventId The ID of the newly created event"},"functionSelector":"9bc2bc71","id":9121,"implemented":true,"kind":"function","modifiers":[],"name":"createEvent","nameLocation":"1192:11:25","nodeType":"FunctionDefinition","parameters":{"id":9055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9054,"mutability":"mutable","name":"eventUri","nameLocation":"1218:8:25","nodeType":"VariableDeclaration","scope":9121,"src":"1204:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9053,"name":"string","nodeType":"ElementaryTypeName","src":"1204:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1203:24:25"},"returnParameters":{"id":9058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9057,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9121,"src":"1246:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9056,"name":"uint256","nodeType":"ElementaryTypeName","src":"1246:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1245:9:25"},"scope":9237,"src":"1183:686:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9142,"nodeType":"Block","src":"2086:104:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":9131,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"2104:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9133,"indexExpression":{"id":9132,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"2111:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2104:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"id":9134,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2120:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":9007,"src":"2104:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420646f6573206e6f74206578697374","id":9135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2128:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""},"value":"Event does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""}],"id":9130,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2096:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2096:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9137,"nodeType":"ExpressionStatement","src":"2096:55:25"},{"expression":{"baseExpression":{"id":9138,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"2168:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9140,"indexExpression":{"id":9139,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9124,"src":"2175:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2168:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"functionReturnParameters":9129,"id":9141,"nodeType":"Return","src":"2161:22:25"}]},"documentation":{"id":9122,"nodeType":"StructuredDocumentation","src":"1879:130:25","text":"@notice Get event details by ID\n @param eventId The ID of the event\n @return Event struct with all event details"},"functionSelector":"6d1884e0","id":9143,"implemented":true,"kind":"function","modifiers":[],"name":"getEvent","nameLocation":"2023:8:25","nodeType":"FunctionDefinition","parameters":{"id":9125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9124,"mutability":"mutable","name":"eventId","nameLocation":"2040:7:25","nodeType":"VariableDeclaration","scope":9143,"src":"2032:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9123,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2031:17:25"},"returnParameters":{"id":9129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9128,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9143,"src":"2072:12:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_memory_ptr","typeString":"struct AfterpartyEventToken.Event"},"typeName":{"id":9127,"nodeType":"UserDefinedTypeName","pathNode":{"id":9126,"name":"Event","nameLocations":["2072:5:25"],"nodeType":"IdentifierPath","referencedDeclaration":9008,"src":"2072:5:25"},"referencedDeclaration":9008,"src":"2072:5:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage_ptr","typeString":"struct AfterpartyEventToken.Event"}},"visibility":"internal"}],"src":"2071:14:25"},"scope":9237,"src":"2014:176:25","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":9198,"nodeType":"Block","src":"2361:361:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":9150,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"2379:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9152,"indexExpression":{"id":9151,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"2386:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2379:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"id":9153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2395:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":9007,"src":"2379:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420646f6573206e6f74206578697374","id":9154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2403:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""},"value":"Event does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""}],"id":9149,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2371:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9156,"nodeType":"ExpressionStatement","src":"2371:55:25"},{"expression":{"arguments":[{"id":9164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2444:32:25","subExpression":{"baseExpression":{"baseExpression":{"id":9158,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"2445:10:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9160,"indexExpression":{"id":9159,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"2456:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:19:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9163,"indexExpression":{"expression":{"id":9161,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2465:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2469:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2465:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2445:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d656420746f6b656e20666f722074686973206576656e74","id":9165,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2478:38:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68","typeString":"literal_string \"Already claimed token for this event\""},"value":"Already claimed token for this event"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68","typeString":"literal_string \"Already claimed token for this event\""}],"id":9157,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2436:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2436:81:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9167,"nodeType":"ExpressionStatement","src":"2436:81:25"},{"expression":{"arguments":[{"expression":{"id":9169,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2542:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2546:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2542:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9171,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"2554:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"31","id":9172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2563:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},{"hexValue":"","id":9173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2566:2:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":9168,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1014,"src":"2536:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,uint256,bytes memory)"}},"id":9174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2536:33:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9175,"nodeType":"ExpressionStatement","src":"2536:33:25"},{"expression":{"id":9183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":9176,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9024,"src":"2579:10:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":9180,"indexExpression":{"id":9177,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"2590:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2579:19:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9181,"indexExpression":{"expression":{"id":9178,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2599:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2603:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2599:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2579:31:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2613:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2579:38:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9184,"nodeType":"ExpressionStatement","src":"2579:38:25"},{"expression":{"id":9189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2627:29:25","subExpression":{"expression":{"baseExpression":{"id":9185,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"2627:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9187,"indexExpression":{"id":9186,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"2634:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2627:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"id":9188,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2643:11:25","memberName":"totalMinted","nodeType":"MemberAccess","referencedDeclaration":9005,"src":"2627:27:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9190,"nodeType":"ExpressionStatement","src":"2627:29:25"},{"eventCall":{"arguments":[{"id":9192,"name":"eventId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9146,"src":"2692:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":9193,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2701:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2705:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2701:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"31","id":9195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2713:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":9191,"name":"TokenMinted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9040,"src":"2680:11:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$returns$__$","typeString":"function (uint256,address,uint256)"}},"id":9196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2680:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9197,"nodeType":"EmitStatement","src":"2675:40:25"}]},"documentation":{"id":9144,"nodeType":"StructuredDocumentation","src":"2200:101:25","text":"@notice Mint a token for an event attendee\n @param eventId The ID of the event to mint for"},"functionSelector":"da4e5a2c","id":9199,"implemented":true,"kind":"function","modifiers":[],"name":"mintAttendanceToken","nameLocation":"2315:19:25","nodeType":"FunctionDefinition","parameters":{"id":9147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9146,"mutability":"mutable","name":"eventId","nameLocation":"2343:7:25","nodeType":"VariableDeclaration","scope":9199,"src":"2335:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9145,"name":"uint256","nodeType":"ElementaryTypeName","src":"2335:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2334:17:25"},"returnParameters":{"id":9148,"nodeType":"ParameterList","parameters":[],"src":"2361:0:25"},"scope":9237,"src":"2306:416:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":9212,"nodeType":"Block","src":"2964:50:25","statements":[{"expression":{"baseExpression":{"id":9208,"name":"organizerEvents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9018,"src":"2981:15:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$","typeString":"mapping(address => uint256[] storage ref)"}},"id":9210,"indexExpression":{"id":9209,"name":"organizer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9202,"src":"2997:9:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:26:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"functionReturnParameters":9207,"id":9211,"nodeType":"Return","src":"2974:33:25"}]},"documentation":{"id":9200,"nodeType":"StructuredDocumentation","src":"2732:139:25","text":"@notice Get all events created by an organizer\n @param organizer The address of the organizer\n @return Array of event IDs"},"functionSelector":"ff9f5970","id":9213,"implemented":true,"kind":"function","modifiers":[],"name":"getOrganizerEvents","nameLocation":"2885:18:25","nodeType":"FunctionDefinition","parameters":{"id":9203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9202,"mutability":"mutable","name":"organizer","nameLocation":"2912:9:25","nodeType":"VariableDeclaration","scope":9213,"src":"2904:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9201,"name":"address","nodeType":"ElementaryTypeName","src":"2904:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2903:19:25"},"returnParameters":{"id":9207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9213,"src":"2946:16:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":9204,"name":"uint256","nodeType":"ElementaryTypeName","src":"2946:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9205,"nodeType":"ArrayTypeName","src":"2946:9:25","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"2945:18:25"},"scope":9237,"src":"2876:138:25","stateMutability":"view","virtual":false,"visibility":"external"},{"baseFunctions":[387],"body":{"id":9235,"nodeType":"Block","src":"3261:108:25","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":9223,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"3279:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9225,"indexExpression":{"id":9224,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"3286:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3279:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"id":9226,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3295:6:25","memberName":"exists","nodeType":"MemberAccess","referencedDeclaration":9007,"src":"3279:22:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4576656e7420646f6573206e6f74206578697374","id":9227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3303:22:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""},"value":"Event does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","typeString":"literal_string \"Event does not exist\""}],"id":9222,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3271:7:25","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3271:55:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9229,"nodeType":"ExpressionStatement","src":"3271:55:25"},{"expression":{"expression":{"baseExpression":{"id":9230,"name":"events","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9013,"src":"3343:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_Event_$9008_storage_$","typeString":"mapping(uint256 => struct AfterpartyEventToken.Event storage ref)"}},"id":9232,"indexExpression":{"id":9231,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9216,"src":"3350:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3343:15:25","typeDescriptions":{"typeIdentifier":"t_struct$_Event_$9008_storage","typeString":"struct AfterpartyEventToken.Event storage ref"}},"id":9233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3359:3:25","memberName":"uri","nodeType":"MemberAccess","referencedDeclaration":9003,"src":"3343:19:25","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":9221,"id":9234,"nodeType":"Return","src":"3336:26:25"}]},"documentation":{"id":9214,"nodeType":"StructuredDocumentation","src":"3024:157:25","text":"@notice Override URI function to return event-specific URIs\n @param tokenId The token ID (event ID)\n @return The metadata URI for the token"},"functionSelector":"0e89341c","id":9236,"implemented":true,"kind":"function","modifiers":[],"name":"uri","nameLocation":"3195:3:25","nodeType":"FunctionDefinition","overrides":{"id":9218,"nodeType":"OverrideSpecifier","overrides":[],"src":"3228:8:25"},"parameters":{"id":9217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9216,"mutability":"mutable","name":"tokenId","nameLocation":"3207:7:25","nodeType":"VariableDeclaration","scope":9236,"src":"3199:15:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3199:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3198:17:25"},"returnParameters":{"id":9221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9220,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9236,"src":"3246:13:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":9219,"name":"string","nodeType":"ElementaryTypeName","src":"3246:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3245:15:25"},"scope":9237,"src":"3186:183:25","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":9238,"src":"316:3055:25","usedErrors":[13,18,249,254,259,266,271,276,283],"usedEvents":[24,1221,1236,1245,1252,9032,9040]}],"src":"32:3339:25"},"id":25},"contracts/AttendanceToken.sol":{"ast":{"absolutePath":"contracts/AttendanceToken.sol","exportedSymbols":{"AttendanceToken":[9296],"Context":[3673],"ERC165":[5405],"ERC721":[2493],"ERC721Utils":[2733],"IERC165":[5417],"IERC721":[2610],"IERC721Errors":[237],"IERC721Metadata":[2656],"Ownable":[147],"Strings":[5381]},"id":9297,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9239,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/ERC721.sol","file":"@openzeppelin/contracts/token/ERC721/ERC721.sol","id":9240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9297,"sourceUnit":2494,"src":"58:57:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":9241,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":9297,"sourceUnit":148,"src":"116:52:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9243,"name":"ERC721","nameLocations":["250:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":2493,"src":"250:6:26"},"id":9244,"nodeType":"InheritanceSpecifier","src":"250:6:26"},{"baseName":{"id":9245,"name":"Ownable","nameLocations":["258:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"258:7:26"},"id":9246,"nodeType":"InheritanceSpecifier","src":"258:7:26"}],"canonicalName":"AttendanceToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":9242,"nodeType":"StructuredDocumentation","src":"170:52:26","text":"@title Attendance token for event participation"},"fullyImplemented":true,"id":9296,"linearizedBaseContracts":[9296,147,2493,237,2656,2610,5405,5417,3673],"name":"AttendanceToken","nameLocation":"231:15:26","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"75794a3c","id":9249,"mutability":"mutable","name":"nextTokenId","nameLocation":"287:11:26","nodeType":"VariableDeclaration","scope":9296,"src":"272:30:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9247,"name":"uint256","nodeType":"ElementaryTypeName","src":"272:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":9248,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"301:1:26","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"public"},{"constant":false,"functionSelector":"73b2e80e","id":9253,"mutability":"mutable","name":"hasClaimed","nameLocation":"340:10:26","nodeType":"VariableDeclaration","scope":9296,"src":"308:42:26","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":9252,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":9250,"name":"address","nodeType":"ElementaryTypeName","src":"316:7:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"308:24:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":9251,"name":"bool","nodeType":"ElementaryTypeName","src":"327:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":9264,"nodeType":"Block","src":"426:2:26","statements":[]},"id":9265,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"417474656e64616e636520546f6b656e","id":9256,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"378:18:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_a487588e5dd36f897352ff4961aad926da4b0fa95eb9decb7211be743fbf6515","typeString":"literal_string \"Attendance Token\""},"value":"Attendance Token"},{"hexValue":"4154544e","id":9257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"398:6:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_f669fc3b665116c9594d125349640199d789575073d3f78215ad70ff578b2300","typeString":"literal_string \"ATTN\""},"value":"ATTN"}],"id":9258,"kind":"baseConstructorSpecifier","modifierName":{"id":9255,"name":"ERC721","nameLocations":["371:6:26"],"nodeType":"IdentifierPath","referencedDeclaration":2493,"src":"371:6:26"},"nodeType":"ModifierInvocation","src":"371:34:26"},{"arguments":[{"expression":{"id":9260,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"414:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":9261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"418:6:26","memberName":"sender","nodeType":"MemberAccess","src":"414:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":9262,"kind":"baseConstructorSpecifier","modifierName":{"id":9259,"name":"Ownable","nameLocations":["406:7:26"],"nodeType":"IdentifierPath","referencedDeclaration":147,"src":"406:7:26"},"nodeType":"ModifierInvocation","src":"406:19:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":9254,"nodeType":"ParameterList","parameters":[],"src":"368:2:26"},"returnParameters":{"id":9263,"nodeType":"ParameterList","parameters":[],"src":"426:0:26"},"scope":9296,"src":"357:71:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":9294,"nodeType":"Block","src":"480:146:26","statements":[{"expression":{"arguments":[{"id":9276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"498:15:26","subExpression":{"baseExpression":{"id":9273,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9253,"src":"499:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9275,"indexExpression":{"id":9274,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"510:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"499:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920636c61696d6564","id":9277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"515:17:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""},"value":"Already claimed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","typeString":"literal_string \"Already claimed\""}],"id":9272,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"490:7:26","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":9278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"490:43:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9279,"nodeType":"ExpressionStatement","src":"490:43:26"},{"expression":{"arguments":[{"id":9281,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"549:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":9282,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"553:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":9280,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2156,"src":"543:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":9283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"543:22:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9284,"nodeType":"ExpressionStatement","src":"543:22:26"},{"expression":{"id":9286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"575:13:26","subExpression":{"id":9285,"name":"nextTokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9249,"src":"575:11:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9287,"nodeType":"ExpressionStatement","src":"575:13:26"},{"expression":{"id":9292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":9288,"name":"hasClaimed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9253,"src":"598:10:26","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":9290,"indexExpression":{"id":9289,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9267,"src":"609:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"598:14:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":9291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"615:4:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"598:21:26","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9293,"nodeType":"ExpressionStatement","src":"598:21:26"}]},"functionSelector":"1e83409a","id":9295,"implemented":true,"kind":"function","modifiers":[{"id":9270,"kind":"modifierInvocation","modifierName":{"id":9269,"name":"onlyOwner","nameLocations":["470:9:26"],"nodeType":"IdentifierPath","referencedDeclaration":58,"src":"470:9:26"},"nodeType":"ModifierInvocation","src":"470:9:26"}],"name":"claim","nameLocation":"443:5:26","nodeType":"FunctionDefinition","parameters":{"id":9268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9267,"mutability":"mutable","name":"to","nameLocation":"457:2:26","nodeType":"VariableDeclaration","scope":9295,"src":"449:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":9266,"name":"address","nodeType":"ElementaryTypeName","src":"449:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"448:12:26"},"returnParameters":{"id":9271,"nodeType":"ParameterList","parameters":[],"src":"480:0:26"},"scope":9296,"src":"434:192:26","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":9297,"src":"222:406:26","usedErrors":[13,18,195,200,209,214,219,226,231,236],"usedEvents":[24,2509,2518,2527]}],"src":"32:597:26"},"id":26},"contracts/Example.sol":{"ast":{"absolutePath":"contracts/Example.sol","exportedSymbols":{"Example":[9303]},"id":9304,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":9298,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"32:24:27"},{"abstract":false,"baseContracts":[],"canonicalName":"Example","contractDependencies":[],"contractKind":"contract","documentation":{"id":9299,"nodeType":"StructuredDocumentation","src":"58:43:27","text":"@title Example contract for Afterparty"},"fullyImplemented":true,"id":9303,"linearizedBaseContracts":[9303],"name":"Example","nameLocation":"110:7:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"cfae3217","id":9302,"mutability":"mutable","name":"greet","nameLocation":"138:5:27","nodeType":"VariableDeclaration","scope":9303,"src":"124:40:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":9300,"name":"string","nodeType":"ElementaryTypeName","src":"124:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"48656c6c6f2041667465727061727479","id":9301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"146:18:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_0bf0da97742f4e5936b3bdabd0225b1356a6222e906e903f9ca3468de25e4bf3","typeString":"literal_string \"Hello Afterparty\""},"value":"Hello Afterparty"},"visibility":"public"}],"scope":9304,"src":"101:66:27","usedErrors":[],"usedEvents":[]}],"src":"32:136:27"},"id":27}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/interfaces/draft-IERC6093.sol":{"IERC1155Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC20Errors":{"abi":[{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"allowance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientAllowance","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"ERC20InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC20InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC20InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC20InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"spender","type":"address"}],"name":"ERC20InvalidSpender","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"},"IERC721Errors":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/ERC1155.sol":{"ERC1155":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the ERC]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155.sol":{"IERC1155":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol":{"IERC1155Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155BatchReceived","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC1155Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)":"bc197c81","onERC1155Received(address,address,uint256,uint256,bytes)":"f23a6e61","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC-1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC-1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol":{"IERC1155MetadataURI":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"id","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","isApprovedForAll(address,address)":"e985e9c5","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[ERC].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits either a {TransferSingle} or a {TransferBatch} event, depending on the length of the array arguments. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {IERC1155Receiver-onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the zero address.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol":{"ERC1155Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a2448a0a1db2f4fae937823d7f65d8f4576b3c6520f22ff84c0c5ab2b5cfaad64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x24 BASEFEE LOG0 LOG1 0xDB 0x2F 0x4F 0xAE SWAP4 PUSH25 0x23D7F65D8F4576B3C6520F22FF84C0C5AB2B5CFAAD64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"439:3110:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209a2448a0a1db2f4fae937823d7f65d8f4576b3c6520f22ff84c0c5ab2b5cfaad64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0x24 BASEFEE LOG0 LOG1 0xDB 0x2F 0x4F 0xAE SWAP4 PUSH25 0x23D7F65D8F4576B3C6520F22FF84C0C5AB2B5CFAAD64736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"439:3110:6:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-1155 utility functions. See https://eips.ethereum.org/EIPS/eip-1155[ERC-1155]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":\"ERC1155Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/ERC721.sol":{"ERC721":{"abi":[{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC-721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC-721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol":{"IERC721Receiver":{"abi":[{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"onERC721Received","outputs":[{"internalType":"bytes4","name":"","type":"bytes4"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"onERC721Received(address,address,uint256,bytes)":"150b7a02"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC-721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC-721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC-721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC-721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol":{"ERC721Utils":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209efd8f35d190e6a3d8c9ee6c5dc31515460653c9b34ccb70cbb94a7bdf6c672064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 REVERT DUP16 CALLDATALOAD 0xD1 SWAP1 0xE6 LOG3 0xD8 0xC9 0xEE PUSH13 0x5DC31515460653C9B34CCB70CB 0xB9 0x4A PUSH28 0xDF6C672064736F6C6343000814003300000000000000000000000000 ","sourceMap":"431:1488:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209efd8f35d190e6a3d8c9ee6c5dc31515460653c9b34ccb70cbb94a7bdf6c672064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP15 REVERT DUP16 CALLDATALOAD 0xD1 SWAP1 0xE6 LOG3 0xD8 0xC9 0xEE PUSH13 0x5DC31515460653C9B34CCB70CB 0xB9 0x4A PUSH28 0xDF6C672064736F6C6343000814003300000000000000000000000000 ","sourceMap":"431:1488:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library that provide common ERC-721 utility functions. See https://eips.ethereum.org/EIPS/eip-721[ERC-721]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":\"ERC721Utils\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Arrays.sol":{"Arrays":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c33df8162752bb027c1628e792a896aaaed9b15deec64176569bd0365392702e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 RETURNDATASIZE 0xF8 AND 0x27 MSTORE 0xBB MUL PUSH29 0x1628E792A896AAAED9B15DEEC64176569BD0365392702E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17878:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c33df8162752bb027c1628e792a896aaaed9b15deec64176569bd0365392702e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 RETURNDATASIZE 0xF8 AND 0x27 MSTORE 0xBB MUL PUSH29 0x1628E792A896AAAED9B15DEEC64176569BD0365392702E64736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"459:17878:12:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Arrays.sol\":\"Arrays\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Comparators.sol":{"Comparators":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220aa83c19260ff3c8ce9c1ecc0bd2652fdb9549eb4967fb3a44ca1b2cf5d4a704d64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA DUP4 0xC1 SWAP3 PUSH1 0xFF EXTCODECOPY DUP13 0xE9 0xC1 0xEC 0xC0 0xBD 0x26 MSTORE REVERT 0xB9 SLOAD SWAP15 0xB4 SWAP7 PUSH32 0xB3A44CA1B2CF5D4A704D64736F6C634300081400330000000000000000000000 ","sourceMap":"224:218:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides a set of functions to compare values. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Comparators.sol\":\"Comparators\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202672d2a23e458693f6ba1440f70db5954b011cca38f915e3138b6836c3d4ea7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 PUSH19 0xD2A23E458693F6BA1440F70DB5954B011CCA38 0xF9 ISZERO 0xE3 SGT DUP12 PUSH9 0x36C3D4EA7464736F6C PUSH4 0x43000814 STOP CALLER ","sourceMap":"657:1315:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ARRAY_OUT_OF_BOUNDS\":{\"details\":\"array out of bounds access\"},\"ASSERT\":{\"details\":\"used by the assert() builtin\"},\"DIVISION_BY_ZERO\":{\"details\":\"division or modulo by zero\"},\"EMPTY_ARRAY_POP\":{\"details\":\"empty array pop\"},\"ENUM_CONVERSION_ERROR\":{\"details\":\"enum conversion error\"},\"GENERIC\":{\"details\":\"generic / unspecified error\"},\"INVALID_INTERNAL_FUNCTION\":{\"details\":\"calling invalid internal function\"},\"RESOURCE_ERROR\":{\"details\":\"resource error (too large allocation or too large array)\"},\"STORAGE_ENCODING_ERROR\":{\"details\":\"invalid encoding in storage\"},\"UNDER_OVERFLOW\":{\"details\":\"arithmetic underflow or overflow\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Panic.sol\":\"Panic\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/SlotDerivation.sol":{"SlotDerivation":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91cb6a7d18453217594905893676de324e9c8c94a5b6069844035a3a788e9cb64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SHR 0xB6 0xA7 0xD1 DUP5 MSTORE8 0x21 PUSH22 0x94905893676DE324E9C8C94A5B6069844035A3A788E9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1599:3723:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e91cb6a7d18453217594905893676de324e9c8c94a5b6069844035a3a788e9cb64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE9 SHR 0xB6 0xA7 0xD1 DUP5 MSTORE8 0x21 PUSH22 0x94905893676DE324E9C8C94A5B6069844035A3A788E9 0xCB PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1599:3723:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for computing storage (and transient storage) locations from namespaces and deriving slots corresponding to standard patterns. The derivation method for array and mapping matches the storage layout used by the solidity language / compiler. See https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays[Solidity docs for mappings and dynamic arrays.]. Example usage: ```solidity contract Example {     // Add the library methods     using StorageSlot for bytes32;     using SlotDerivation for bytes32;     // Declare a namespace     string private constant _NAMESPACE = \\\"<namespace>\\\"; // eg. OpenZeppelin.Slot     function setValueInNamespace(uint256 key, address newValue) internal {         _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value = newValue;     }     function getValueInNamespace(uint256 key) internal view returns (address) {         return _NAMESPACE.erc7201Slot().deriveMapping(key).getAddressSlot().value;     } } ``` TIP: Consider using this library along with {StorageSlot}. NOTE: This library provides a way to manipulate storage locations in a non-standard way. Tooling for checking upgrade safety will ignore the slots accessed through this library. _Available since v5.1._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":\"SlotDerivation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e720a9c2a57f6209f7f2521024ac618e6a0af2a0d030646748b683fc73f60af064736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE7 KECCAK256 0xA9 0xC2 0xA5 PUSH32 0x6209F7F2521024AC618E6A0AF2A0D030646748B683FC73F60AF064736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"1407:2774:17:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"},{"inputs":[],"name":"StringsInvalidAddressFormat","type":"error"},{"inputs":[],"name":"StringsInvalidChar","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bb1c62e0c3e7a6559983a340dc7c49df2af9528361710304691b76111e32808164736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBB SHR PUSH3 0xE0C3E7 0xA6 SSTORE SWAP10 DUP4 LOG3 BLOCKHASH 0xDC PUSH29 0x49DF2AF9528361710304691B76111E32808164736F6C63430008140033 ","sourceMap":"297:18980:18:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidAddressFormat\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"StringsInvalidChar\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}],\"StringsInvalidAddressFormat()\":[{\"details\":\"The string being parsed is not a properly formatted address.\"}],\"StringsInvalidChar()\":[{\"details\":\"The string being parsed contains characters that are not in scope of the given base.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC-165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220edaafa2b4bf2e693fe8ad63e033022e5f66b1ea153282004d8fbf7c3431f804e64736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xED 0xAA STATICCALL 0x2B 0x4B CALLCODE 0xE6 SWAP4 INVALID DUP11 0xD6 RETURNDATACOPY SUB ADDRESS 0x22 0xE5 0xF6 PUSH12 0x1EA153282004D8FBF7C3431F DUP1 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"281:31863:21:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220316339f60b3fd1858de7f836dab11b96a56ba64a0fc65a8a88172d93a655ae7464736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BALANCE PUSH4 0x39F60B3F 0xD1 DUP6 DUP14 0xE7 0xF8 CALLDATASIZE 0xDA 0xB1 SHL SWAP7 0xA5 PUSH12 0xA64A0FC65A8A88172D93A655 0xAE PUSH21 0x64736F6C6343000814003300000000000000000000 ","sourceMap":"769:34173:22:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220473cbf930ed596e4ec76a1dda41503ab8a3aef35c98db76f2bcec0ef4066bcb664736f6c63430008140033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFBALANCE EXTCODECOPY 0xBF SWAP4 0xE 0xD5 SWAP7 0xE4 0xEC PUSH23 0xA1DDA41503AB8A3AEF35C98DB76F2BCEC0EF4066BCB664 PUSH20 0x6F6C634300081400330000000000000000000000 ","sourceMap":"258:2354:23:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}"}},"contracts/AfterpartyEvent.sol":{"AfterpartyEvent":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"attendanceToken","outputs":[{"internalType":"contract AttendanceToken","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_8973":{"entryPoint":null,"id":8973,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":258,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":517,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":532,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":499,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":467,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:590:28","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:28","statements":[{"nodeType":"YulAssignment","src":"62:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:28"},"nodeType":"YulFunctionCall","src":"73:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:28","type":""}],"src":"7:126:28"},{"body":{"nodeType":"YulBlock","src":"184:51:28","statements":[{"nodeType":"YulAssignment","src":"194:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:28"},"nodeType":"YulFunctionCall","src":"205:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:28","type":""}],"src":"139:96:28"},{"body":{"nodeType":"YulBlock","src":"306:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:28"},"nodeType":"YulFunctionCall","src":"328:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:28"},"nodeType":"YulFunctionCall","src":"316:37:28"},"nodeType":"YulExpressionStatement","src":"316:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:28","type":""}],"src":"241:118:28"},{"body":{"nodeType":"YulBlock","src":"463:124:28","statements":[{"nodeType":"YulAssignment","src":"473:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:28"},"nodeType":"YulFunctionCall","src":"481:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:28"},"nodeType":"YulFunctionCall","src":"562:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:28"},"nodeType":"YulFunctionCall","src":"509:71:28"},"nodeType":"YulExpressionStatement","src":"509:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:28","type":""}],"src":"365:222:28"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5033600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100845760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161007b9190610214565b60405180910390fd5b6100938161010260201b60201c565b506040516100a0906101c6565b604051809103906000f0801580156100bc573d6000803e3d6000fd5b50600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061022f565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6128758061073b83390190565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006101fe826101d3565b9050919050565b61020e816101f3565b82525050565b60006020820190506102296000830184610205565b92915050565b6104fd8061023e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634e71d92d1461005c578063715018a6146100665780638da5cb5b14610070578063a9b5e2ea1461008e578063f2fde38b146100ac575b600080fd5b6100646100c8565b005b61006e610157565b005b61007861016b565b60405161008591906103d4565b60405180910390f35b610096610194565b6040516100a3919061044e565b60405180910390f35b6100c660048036038101906100c1919061049a565b6101ba565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e83409a336040518263ffffffff1660e01b815260040161012391906103d4565b600060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b50505050565b61015f610240565b61016960006102c7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101c2610240565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102345760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161022b91906103d4565b60405180910390fd5b61023d816102c7565b50565b61024861038b565b73ffffffffffffffffffffffffffffffffffffffff1661026661016b565b73ffffffffffffffffffffffffffffffffffffffff16146102c55761028961038b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102bc91906103d4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103be82610393565b9050919050565b6103ce816103b3565b82525050565b60006020820190506103e960008301846103c5565b92915050565b6000819050919050565b600061041461040f61040a84610393565b6103ef565b610393565b9050919050565b6000610426826103f9565b9050919050565b60006104388261041b565b9050919050565b6104488161042d565b82525050565b6000602082019050610463600083018461043f565b92915050565b600080fd5b610477816103b3565b811461048257600080fd5b50565b6000813590506104948161046e565b92915050565b6000602082840312156104b0576104af610469565b5b60006104be84828501610485565b9150509291505056fea2646970667358221220799f36ec32713cd6b0c0db4561ce6375e39e163d451e121c999050f7da602be864736f6c63430008140033608060405260016007553480156200001657600080fd5b50336040518060400160405280601081526020017f417474656e64616e636520546f6b656e000000000000000000000000000000008152506040518060400160405280600481526020017f4154544e00000000000000000000000000000000000000000000000000000000815250816000908162000095919062000477565b508060019081620000a7919062000477565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001169190620005a3565b60405180910390fd5b62000130816200013760201b60201c565b50620005c0565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027f57607f821691505b60208210810362000295576200029462000237565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c0565b6200030b8683620002c0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000358620003526200034c8462000323565b6200032d565b62000323565b9050919050565b6000819050919050565b620003748362000337565b6200038c62000383826200035f565b848454620002cd565b825550505050565b600090565b620003a362000394565b620003b081848462000369565b505050565b5b81811015620003d857620003cc60008262000399565b600181019050620003b6565b5050565b601f8211156200042757620003f1816200029b565b620003fc84620002b0565b810160208510156200040c578190505b620004246200041b85620002b0565b830182620003b5565b50505b505050565b600082821c905092915050565b60006200044c600019846008026200042c565b1980831691505092915050565b600062000467838362000439565b9150826002028217905092915050565b6200048282620001fd565b67ffffffffffffffff8111156200049e576200049d62000208565b5b620004aa825462000266565b620004b7828285620003dc565b600060209050601f831160018114620004ef5760008415620004da578287015190505b620004e6858262000459565b86555062000556565b601f198416620004ff866200029b565b60005b82811015620005295784890151825560018201915060208501945060208101905062000502565b8683101562000549578489015162000545601f89168262000439565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200058b826200055e565b9050919050565b6200059d816200057e565b82525050565b6000602082019050620005ba600083018462000592565b92915050565b6122a580620005d06000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a22cb46511610071578063a22cb46514610308578063b88d4fde14610324578063c87b56dd14610340578063e985e9c514610370578063f2fde38b146103a057610121565b8063715018a61461027457806373b2e80e1461027e57806375794a3c146102ae5780638da5cb5b146102cc57806395d89b41146102ea57610121565b80631e83409a116100f45780631e83409a146101c057806323b872dd146101dc57806342842e0e146101f85780636352211e1461021457806370a082311461024457610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611a0c565b6103bc565b60405161014d9190611a54565b60405180910390f35b61015e61049e565b60405161016b9190611aff565b60405180910390f35b61018e60048036038101906101899190611b57565b610530565b60405161019b9190611bc5565b60405180910390f35b6101be60048036038101906101b99190611c0c565b61054c565b005b6101da60048036038101906101d59190611c4c565b610562565b005b6101f660048036038101906101f19190611c79565b610676565b005b610212600480360381019061020d9190611c79565b610778565b005b61022e60048036038101906102299190611b57565b610798565b60405161023b9190611bc5565b60405180910390f35b61025e60048036038101906102599190611c4c565b6107aa565b60405161026b9190611cdb565b60405180910390f35b61027c610864565b005b61029860048036038101906102939190611c4c565b610878565b6040516102a59190611a54565b60405180910390f35b6102b6610898565b6040516102c39190611cdb565b60405180910390f35b6102d461089e565b6040516102e19190611bc5565b60405180910390f35b6102f26108c8565b6040516102ff9190611aff565b60405180910390f35b610322600480360381019061031d9190611d22565b61095a565b005b61033e60048036038101906103399190611e97565b610970565b005b61035a60048036038101906103559190611b57565b610995565b6040516103679190611aff565b60405180910390f35b61038a60048036038101906103859190611f1a565b6109fe565b6040516103979190611a54565b60405180910390f35b6103ba60048036038101906103b59190611c4c565b610a92565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610497575061049682610b18565b5b9050919050565b6060600080546104ad90611f89565b80601f01602080910402602001604051908101604052809291908181526020018280546104d990611f89565b80156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b5050505050905090565b600061053b82610b82565b5061054582610c0a565b9050919050565b61055e8282610559610c47565b610c4f565b5050565b61056a610c61565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90612006565b60405180910390fd5b61060381600754610ce8565b6007600081548092919061061690612055565b91905055506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e85760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106df9190611bc5565b60405180910390fd5b60006106fc83836106f7610c47565b610de1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610772578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107699392919061209d565b60405180910390fd5b50505050565b61079383838360405180602001604052806000815250610970565b505050565b60006107a382610b82565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361081d5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108149190611bc5565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61086c610c61565b6108766000610ffb565b565b60086020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108d790611f89565b80601f016020809104026020016040519081016040528092919081815260200182805461090390611f89565b80156109505780601f1061092557610100808354040283529160200191610950565b820191906000526020600020905b81548152906001019060200180831161093357829003601f168201915b5050505050905090565b61096c610965610c47565b83836110c1565b5050565b61097b848484610676565b61098f610986610c47565b85858585611230565b50505050565b60606109a082610b82565b5060006109ab6113e1565b905060008151116109cb57604051806020016040528060008152506109f6565b806109d5846113f8565b6040516020016109e6929190612110565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a9a610c61565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b0c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b039190611bc5565b60405180910390fd5b610b1581610ffb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610b8e836114c6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bf89190611cdb565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610c5c8383836001611503565b505050565b610c69610c47565b73ffffffffffffffffffffffffffffffffffffffff16610c8761089e565b73ffffffffffffffffffffffffffffffffffffffff1614610ce657610caa610c47565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cdd9190611bc5565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5a5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d519190611bc5565b60405180910390fd5b6000610d6883836000610de1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ddc5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610dd39190611bc5565b60405180910390fd5b505050565b600080610ded846114c6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e2f57610e2e8184866116c8565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec057610e71600085600080611503565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f43576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361113257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111299190611bc5565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112239190611a54565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156113da578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161128f9493929190612189565b6020604051808303816000875af19250505080156112cb57506040513d601f19601f820116820180604052508101906112c891906121ea565b60015b61134f573d80600081146112fb576040519150601f19603f3d011682016040523d82523d6000602084013e611300565b606091505b50600081510361134757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161133e9190611bc5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113d857836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113cf9190611bc5565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060600060016114078461178c565b01905060008167ffffffffffffffff81111561142657611425611d6c565b5b6040519080825280601f01601f1916602001820160405280156114585781602001600182028036833780820191505090505b509050600082602001820190505b6001156114bb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114af576114ae612217565b5b04945060008503611466575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061153c5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561167057600061154c84610b82565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115b757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115ca57506115c881846109fe565b155b1561160c57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116039190611bc5565b60405180910390fd5b811561166e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116d38383836118df565b61178757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174857806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161173f9190611cdb565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161177e929190612246565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106117ea577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117e0576117df612217565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611827576d04ee2d6d415b85acef8100000000838161181d5761181c612217565b5b0492506020810190505b662386f26fc10000831061185657662386f26fc10000838161184c5761184b612217565b5b0492506010810190505b6305f5e100831061187f576305f5e100838161187557611874612217565b5b0492506008810190505b61271083106118a457612710838161189a57611899612217565b5b0492506004810190505b606483106118c757606483816118bd576118bc612217565b5b0492506002810190505b600a83106118d6576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561199757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611958575061195784846109fe565b5b8061199657508273ffffffffffffffffffffffffffffffffffffffff1661197e83610c0a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119e9816119b4565b81146119f457600080fd5b50565b600081359050611a06816119e0565b92915050565b600060208284031215611a2257611a216119aa565b5b6000611a30848285016119f7565b91505092915050565b60008115159050919050565b611a4e81611a39565b82525050565b6000602082019050611a696000830184611a45565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aa9578082015181840152602081019050611a8e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad182611a6f565b611adb8185611a7a565b9350611aeb818560208601611a8b565b611af481611ab5565b840191505092915050565b60006020820190508181036000830152611b198184611ac6565b905092915050565b6000819050919050565b611b3481611b21565b8114611b3f57600080fd5b50565b600081359050611b5181611b2b565b92915050565b600060208284031215611b6d57611b6c6119aa565b5b6000611b7b84828501611b42565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611baf82611b84565b9050919050565b611bbf81611ba4565b82525050565b6000602082019050611bda6000830184611bb6565b92915050565b611be981611ba4565b8114611bf457600080fd5b50565b600081359050611c0681611be0565b92915050565b60008060408385031215611c2357611c226119aa565b5b6000611c3185828601611bf7565b9250506020611c4285828601611b42565b9150509250929050565b600060208284031215611c6257611c616119aa565b5b6000611c7084828501611bf7565b91505092915050565b600080600060608486031215611c9257611c916119aa565b5b6000611ca086828701611bf7565b9350506020611cb186828701611bf7565b9250506040611cc286828701611b42565b9150509250925092565b611cd581611b21565b82525050565b6000602082019050611cf06000830184611ccc565b92915050565b611cff81611a39565b8114611d0a57600080fd5b50565b600081359050611d1c81611cf6565b92915050565b60008060408385031215611d3957611d386119aa565b5b6000611d4785828601611bf7565b9250506020611d5885828601611d0d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da482611ab5565b810181811067ffffffffffffffff82111715611dc357611dc2611d6c565b5b80604052505050565b6000611dd66119a0565b9050611de28282611d9b565b919050565b600067ffffffffffffffff821115611e0257611e01611d6c565b5b611e0b82611ab5565b9050602081019050919050565b82818337600083830152505050565b6000611e3a611e3584611de7565b611dcc565b905082815260208101848484011115611e5657611e55611d67565b5b611e61848285611e18565b509392505050565b600082601f830112611e7e57611e7d611d62565b5b8135611e8e848260208601611e27565b91505092915050565b60008060008060808587031215611eb157611eb06119aa565b5b6000611ebf87828801611bf7565b9450506020611ed087828801611bf7565b9350506040611ee187828801611b42565b925050606085013567ffffffffffffffff811115611f0257611f016119af565b5b611f0e87828801611e69565b91505092959194509250565b60008060408385031215611f3157611f306119aa565b5b6000611f3f85828601611bf7565b9250506020611f5085828601611bf7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fa157607f821691505b602082108103611fb457611fb3611f5a565b5b50919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000611ff0600f83611a7a565b9150611ffb82611fba565b602082019050919050565b6000602082019050818103600083015261201f81611fe3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061206082611b21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361209257612091612026565b5b600182019050919050565b60006060820190506120b26000830186611bb6565b6120bf6020830185611ccc565b6120cc6040830184611bb6565b949350505050565b600081905092915050565b60006120ea82611a6f565b6120f481856120d4565b9350612104818560208601611a8b565b80840191505092915050565b600061211c82856120df565b915061212882846120df565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061215b82612134565b612165818561213f565b9350612175818560208601611a8b565b61217e81611ab5565b840191505092915050565b600060808201905061219e6000830187611bb6565b6121ab6020830186611bb6565b6121b86040830185611ccc565b81810360608301526121ca8184612150565b905095945050505050565b6000815190506121e4816119e0565b92915050565b600060208284031215612200576121ff6119aa565b5b600061220e848285016121d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060408201905061225b6000830185611bb6565b6122686020830184611ccc565b939250505056fea26469706673582212209a1abe8ed0ffd0266e88f309efe2ba46f59be29bb180593f9fb5453f37313ed464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x84 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7B SWAP2 SWAP1 PUSH2 0x214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x93 DUP2 PUSH2 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA0 SWAP1 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 PUSH1 0x0 CREATE DUP1 ISZERO DUP1 ISZERO PUSH2 0xBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x22F JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x2875 DUP1 PUSH2 0x73B DUP4 CODECOPY ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FE DUP3 PUSH2 0x1D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20E DUP2 PUSH2 0x1F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x229 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x205 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4FD DUP1 PUSH2 0x23E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xA9B5E2EA EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x157 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1E83409A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15F PUSH2 0x240 JUMP JUMPDEST PUSH2 0x169 PUSH1 0x0 PUSH2 0x2C7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x240 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x234 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x2C7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x248 PUSH2 0x38B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x266 PUSH2 0x16B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C5 JUMPI PUSH2 0x289 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BE DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE DUP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x414 PUSH2 0x40F PUSH2 0x40A DUP5 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP3 PUSH2 0x3F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x42D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x463 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477 DUP2 PUSH2 0x3B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x494 DUP2 PUSH2 0x46E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0x469 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BE DUP5 DUP3 DUP6 ADD PUSH2 0x485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x9F36EC32713CD6B0C0DB4561CE6375E39E163D451E121C999050 0xF7 0xDA PUSH1 0x2B 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417474656E64616E636520546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4154544E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x95 SWAP2 SWAP1 PUSH3 0x477 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x477 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x116 SWAP2 SWAP1 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x130 DUP2 PUSH3 0x137 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x295 JUMPI PUSH3 0x294 PUSH3 0x237 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2C0 JUMP JUMPDEST PUSH3 0x30B DUP7 DUP4 PUSH3 0x2C0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x358 PUSH3 0x352 PUSH3 0x34C DUP5 PUSH3 0x323 JUMP JUMPDEST PUSH3 0x32D JUMP JUMPDEST PUSH3 0x323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x374 DUP4 PUSH3 0x337 JUMP JUMPDEST PUSH3 0x38C PUSH3 0x383 DUP3 PUSH3 0x35F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2CD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A3 PUSH3 0x394 JUMP JUMPDEST PUSH3 0x3B0 DUP2 DUP5 DUP5 PUSH3 0x369 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D8 JUMPI PUSH3 0x3CC PUSH1 0x0 DUP3 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x427 JUMPI PUSH3 0x3F1 DUP2 PUSH3 0x29B JUMP JUMPDEST PUSH3 0x3FC DUP5 PUSH3 0x2B0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x424 PUSH3 0x41B DUP6 PUSH3 0x2B0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x467 DUP4 DUP4 PUSH3 0x439 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x482 DUP3 PUSH3 0x1FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x49E JUMPI PUSH3 0x49D PUSH3 0x208 JUMP JUMPDEST JUMPDEST PUSH3 0x4AA DUP3 SLOAD PUSH3 0x266 JUMP JUMPDEST PUSH3 0x4B7 DUP3 DUP3 DUP6 PUSH3 0x3DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E6 DUP6 DUP3 PUSH3 0x459 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x556 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FF DUP7 PUSH3 0x29B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x529 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x502 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x549 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x545 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x439 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58B DUP3 PUSH3 0x55E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x59D DUP2 PUSH3 0x57E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5BA PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x592 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22A5 DUP1 PUSH3 0x5D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1E83409A GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x244 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x487 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x496 DUP3 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x526 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x526 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x509 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0xB82 JUMP JUMPDEST POP PUSH2 0x545 DUP3 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55E DUP3 DUP3 PUSH2 0x559 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56A PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x603 DUP2 PUSH1 0x7 SLOAD PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x616 SWAP1 PUSH2 0x2055 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6FC DUP4 DUP4 PUSH2 0x6F7 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x772 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x793 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x970 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x876 PUSH1 0x0 PUSH2 0xFFB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8D7 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x903 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x950 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x925 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x950 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x933 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x96C PUSH2 0x965 PUSH2 0xC47 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x97B DUP5 DUP5 DUP5 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x986 PUSH2 0xC47 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1230 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A0 DUP3 PUSH2 0xB82 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x9AB PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9F6 JUMP JUMPDEST DUP1 PUSH2 0x9D5 DUP5 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 DUP2 PUSH2 0xFFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB8E DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC01 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1503 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC69 PUSH2 0xC47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC87 PUSH2 0x89E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE6 JUMPI PUSH2 0xCAA PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP4 DUP4 PUSH1 0x0 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDED DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2F JUMPI PUSH2 0xE2E DUP2 DUP5 DUP7 PUSH2 0x16C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC0 JUMPI PUSH2 0xE71 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF43 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1132 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13DA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12CB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x134F JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1347 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13D8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1407 DUP5 PUSH2 0x178C JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1426 JUMPI PUSH2 0x1425 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1458 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14BB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14AF JUMPI PUSH2 0x14AE PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1466 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x153C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 PUSH2 0x154C DUP5 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15B7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15CA JUMPI POP PUSH2 0x15C8 DUP2 DUP5 PUSH2 0x9FE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x160C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x166E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP4 DUP4 DUP4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1787 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1748 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177E SWAP3 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x17EA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1827 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1856 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x187F JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18A4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18C7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18BD JUMPI PUSH2 0x18BC PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x18D6 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1997 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1958 JUMPI POP PUSH2 0x1957 DUP5 DUP5 PUSH2 0x9FE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1996 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x197E DUP4 PUSH2 0xC0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A06 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH2 0x1A21 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A30 DUP5 DUP3 DUP6 ADD PUSH2 0x19F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD1 DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1ADB DUP2 DUP6 PUSH2 0x1A7A JUMP JUMPDEST SWAP4 POP PUSH2 0x1AEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x1AF4 DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B19 DUP2 DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1B21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B51 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6D JUMPI PUSH2 0x1B6C PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7B DUP5 DUP3 DUP6 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP3 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C06 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C31 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C42 DUP6 DUP3 DUP7 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP5 DUP3 DUP6 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB1 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC2 DUP7 DUP3 DUP8 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CD5 DUP2 PUSH2 0x1B21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CFF DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1C DUP2 PUSH2 0x1CF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D47 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D58 DUP6 DUP3 DUP7 ADD PUSH2 0x1D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1DA4 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE2 DUP3 DUP3 PUSH2 0x1D9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH2 0x1E0B DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A PUSH2 0x1E35 DUP5 PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST PUSH2 0x1E61 DUP5 DUP3 DUP6 PUSH2 0x1E18 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1D62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB0 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED0 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE1 DUP8 DUP3 DUP9 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH2 0x1F0E DUP8 DUP3 DUP9 ADD PUSH2 0x1E69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F3F DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F50 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB4 JUMPI PUSH2 0x1FB3 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF0 PUSH1 0xF DUP4 PUSH2 0x1A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP3 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201F DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2060 DUP3 PUSH2 0x1B21 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x2026 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x20CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EA DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x20F4 DUP2 DUP6 PUSH2 0x20D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2104 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP3 DUP6 PUSH2 0x20DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2128 DUP3 DUP5 PUSH2 0x20DF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215B DUP3 PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2165 DUP2 DUP6 PUSH2 0x213F JUMP JUMPDEST SWAP4 POP PUSH2 0x2175 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x219E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x21AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x21B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CCC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21CA DUP2 DUP5 PUSH2 0x2150 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21E4 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220E DUP5 DUP3 DUP6 ADD PUSH2 0x21D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x225B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x2268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BYTE 0xBE DUP15 0xD0 SELFDESTRUCT 0xD0 0x26 PUSH15 0x88F309EFE2BA46F59BE29BB180593F SWAP16 0xB5 GASLIMIT EXTCODEHASH CALLDATACOPY BALANCE RETURNDATACOPY 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"207:386:24:-:0;;;363:90;;;;;;;;;;385:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;425:21:24::1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;407:15;;:39;;;;;;;;;;;;;;;;;;207:386:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;207:386:24:-;;;;;;;;:::o;7:126:28:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;207:386:24:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_84":{"entryPoint":576,"id":84,"parameterSlots":0,"returnSlots":0},"@_msgSender_3655":{"entryPoint":907,"id":3655,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_146":{"entryPoint":711,"id":146,"parameterSlots":1,"returnSlots":0},"@attendanceToken_8957":{"entryPoint":404,"id":8957,"parameterSlots":0,"returnSlots":0},"@claim_8985":{"entryPoint":200,"id":8985,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":363,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":343,"id":98,"parameterSlots":0,"returnSlots":0},"@transferOwnership_126":{"entryPoint":442,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":1157,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":965,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_contract$_AttendanceToken_$9296_to_t_address_fromStack":{"entryPoint":1087,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":980,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_AttendanceToken_$9296__to_t_address__fromStack_reversed":{"entryPoint":1102,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"cleanup_t_address":{"entryPoint":947,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":915,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_contract$_AttendanceToken_$9296_to_t_address":{"entryPoint":1069,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_address":{"entryPoint":1051,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint160_to_t_uint160":{"entryPoint":1017,"id":null,"parameterSlots":1,"returnSlots":1},"identity":{"entryPoint":1007,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":1129,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_address":{"entryPoint":1134,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2488:28","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:28","statements":[{"nodeType":"YulAssignment","src":"62:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:28"},"nodeType":"YulFunctionCall","src":"73:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:28","type":""}],"src":"7:126:28"},{"body":{"nodeType":"YulBlock","src":"184:51:28","statements":[{"nodeType":"YulAssignment","src":"194:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:28"},"nodeType":"YulFunctionCall","src":"205:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:28","type":""}],"src":"139:96:28"},{"body":{"nodeType":"YulBlock","src":"306:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:28"},"nodeType":"YulFunctionCall","src":"328:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:28"},"nodeType":"YulFunctionCall","src":"316:37:28"},"nodeType":"YulExpressionStatement","src":"316:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:28","type":""}],"src":"241:118:28"},{"body":{"nodeType":"YulBlock","src":"463:124:28","statements":[{"nodeType":"YulAssignment","src":"473:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:28"},"nodeType":"YulFunctionCall","src":"481:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:28"},"nodeType":"YulFunctionCall","src":"562:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:28"},"nodeType":"YulFunctionCall","src":"509:71:28"},"nodeType":"YulExpressionStatement","src":"509:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:28","type":""}],"src":"365:222:28"},{"body":{"nodeType":"YulBlock","src":"625:28:28","statements":[{"nodeType":"YulAssignment","src":"635:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"642:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"635:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"621:3:28","type":""}],"src":"593:60:28"},{"body":{"nodeType":"YulBlock","src":"719:82:28","statements":[{"nodeType":"YulAssignment","src":"729:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"787:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"769:17:28"},"nodeType":"YulFunctionCall","src":"769:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"760:8:28"},"nodeType":"YulFunctionCall","src":"760:34:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"742:17:28"},"nodeType":"YulFunctionCall","src":"742:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"729:9:28"}]}]},"name":"convert_t_uint160_to_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"699:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"709:9:28","type":""}],"src":"659:142:28"},{"body":{"nodeType":"YulBlock","src":"867:66:28","statements":[{"nodeType":"YulAssignment","src":"877:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"921:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_uint160","nodeType":"YulIdentifier","src":"890:30:28"},"nodeType":"YulFunctionCall","src":"890:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"877:9:28"}]}]},"name":"convert_t_uint160_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"847:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"857:9:28","type":""}],"src":"807:126:28"},{"body":{"nodeType":"YulBlock","src":"1023:66:28","statements":[{"nodeType":"YulAssignment","src":"1033:50:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1077:5:28"}],"functionName":{"name":"convert_t_uint160_to_t_address","nodeType":"YulIdentifier","src":"1046:30:28"},"nodeType":"YulFunctionCall","src":"1046:37:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1033:9:28"}]}]},"name":"convert_t_contract$_AttendanceToken_$9296_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1003:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1013:9:28","type":""}],"src":"939:150:28"},{"body":{"nodeType":"YulBlock","src":"1184:90:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1201:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1261:5:28"}],"functionName":{"name":"convert_t_contract$_AttendanceToken_$9296_to_t_address","nodeType":"YulIdentifier","src":"1206:54:28"},"nodeType":"YulFunctionCall","src":"1206:61:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:28"},"nodeType":"YulFunctionCall","src":"1194:74:28"},"nodeType":"YulExpressionStatement","src":"1194:74:28"}]},"name":"abi_encode_t_contract$_AttendanceToken_$9296_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1172:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1179:3:28","type":""}],"src":"1095:179:28"},{"body":{"nodeType":"YulBlock","src":"1402:148:28","statements":[{"nodeType":"YulAssignment","src":"1412:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1424:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1435:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1420:3:28"},"nodeType":"YulFunctionCall","src":"1420:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1412:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1516:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1529:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1540:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1525:3:28"},"nodeType":"YulFunctionCall","src":"1525:17:28"}],"functionName":{"name":"abi_encode_t_contract$_AttendanceToken_$9296_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1448:67:28"},"nodeType":"YulFunctionCall","src":"1448:95:28"},"nodeType":"YulExpressionStatement","src":"1448:95:28"}]},"name":"abi_encode_tuple_t_contract$_AttendanceToken_$9296__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1374:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1386:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1397:4:28","type":""}],"src":"1280:270:28"},{"body":{"nodeType":"YulBlock","src":"1596:35:28","statements":[{"nodeType":"YulAssignment","src":"1606:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1622:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1616:5:28"},"nodeType":"YulFunctionCall","src":"1616:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1606:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1589:6:28","type":""}],"src":"1556:75:28"},{"body":{"nodeType":"YulBlock","src":"1726:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1743:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1746:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1736:6:28"},"nodeType":"YulFunctionCall","src":"1736:12:28"},"nodeType":"YulExpressionStatement","src":"1736:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1637:117:28"},{"body":{"nodeType":"YulBlock","src":"1849:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1866:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1869:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1859:6:28"},"nodeType":"YulFunctionCall","src":"1859:12:28"},"nodeType":"YulExpressionStatement","src":"1859:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1760:117:28"},{"body":{"nodeType":"YulBlock","src":"1926:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"1983:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1992:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1995:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1985:6:28"},"nodeType":"YulFunctionCall","src":"1985:12:28"},"nodeType":"YulExpressionStatement","src":"1985:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1949:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1974:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1956:17:28"},"nodeType":"YulFunctionCall","src":"1956:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1946:2:28"},"nodeType":"YulFunctionCall","src":"1946:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1939:6:28"},"nodeType":"YulFunctionCall","src":"1939:43:28"},"nodeType":"YulIf","src":"1936:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1919:5:28","type":""}],"src":"1883:122:28"},{"body":{"nodeType":"YulBlock","src":"2063:87:28","statements":[{"nodeType":"YulAssignment","src":"2073:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2095:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2082:12:28"},"nodeType":"YulFunctionCall","src":"2082:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2073:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2138:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2111:26:28"},"nodeType":"YulFunctionCall","src":"2111:33:28"},"nodeType":"YulExpressionStatement","src":"2111:33:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2041:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2049:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2057:5:28","type":""}],"src":"2011:139:28"},{"body":{"nodeType":"YulBlock","src":"2222:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"2268:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2270:77:28"},"nodeType":"YulFunctionCall","src":"2270:79:28"},"nodeType":"YulExpressionStatement","src":"2270:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2243:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2252:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2239:3:28"},"nodeType":"YulFunctionCall","src":"2239:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2264:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2235:3:28"},"nodeType":"YulFunctionCall","src":"2235:32:28"},"nodeType":"YulIf","src":"2232:119:28"},{"nodeType":"YulBlock","src":"2361:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2376:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2390:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2380:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2405:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2440:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2451:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2436:3:28"},"nodeType":"YulFunctionCall","src":"2436:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2460:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2415:20:28"},"nodeType":"YulFunctionCall","src":"2415:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2405:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2192:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2203:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2215:6:28","type":""}],"src":"2156:329:28"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_AttendanceToken_$9296_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_AttendanceToken_$9296_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_AttendanceToken_$9296_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_AttendanceToken_$9296__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_AttendanceToken_$9296_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100575760003560e01c80634e71d92d1461005c578063715018a6146100665780638da5cb5b14610070578063a9b5e2ea1461008e578063f2fde38b146100ac575b600080fd5b6100646100c8565b005b61006e610157565b005b61007861016b565b60405161008591906103d4565b60405180910390f35b610096610194565b6040516100a3919061044e565b60405180910390f35b6100c660048036038101906100c1919061049a565b6101ba565b005b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e83409a336040518263ffffffff1660e01b815260040161012391906103d4565b600060405180830381600087803b15801561013d57600080fd5b505af1158015610151573d6000803e3d6000fd5b50505050565b61015f610240565b61016960006102c7565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6101c2610240565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036102345760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161022b91906103d4565b60405180910390fd5b61023d816102c7565b50565b61024861038b565b73ffffffffffffffffffffffffffffffffffffffff1661026661016b565b73ffffffffffffffffffffffffffffffffffffffff16146102c55761028961038b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016102bc91906103d4565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103be82610393565b9050919050565b6103ce816103b3565b82525050565b60006020820190506103e960008301846103c5565b92915050565b6000819050919050565b600061041461040f61040a84610393565b6103ef565b610393565b9050919050565b6000610426826103f9565b9050919050565b60006104388261041b565b9050919050565b6104488161042d565b82525050565b6000602082019050610463600083018461043f565b92915050565b600080fd5b610477816103b3565b811461048257600080fd5b50565b6000813590506104948161046e565b92915050565b6000602082840312156104b0576104af610469565b5b60006104be84828501610485565b9150509291505056fea2646970667358221220799f36ec32713cd6b0c0db4561ce6375e39e163d451e121c999050f7da602be864736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E71D92D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x66 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x70 JUMPI DUP1 PUSH4 0xA9B5E2EA EQ PUSH2 0x8E JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xC8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6E PUSH2 0x157 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x78 PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x85 SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x96 PUSH2 0x194 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x44E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x49A JUMP JUMPDEST PUSH2 0x1BA JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x1E83409A CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x123 SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x151 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x15F PUSH2 0x240 JUMP JUMPDEST PUSH2 0x169 PUSH1 0x0 PUSH2 0x2C7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1C2 PUSH2 0x240 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x234 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x23D DUP2 PUSH2 0x2C7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x248 PUSH2 0x38B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x266 PUSH2 0x16B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2C5 JUMPI PUSH2 0x289 PUSH2 0x38B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2BC SWAP2 SWAP1 PUSH2 0x3D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3BE DUP3 PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3CE DUP2 PUSH2 0x3B3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3E9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x414 PUSH2 0x40F PUSH2 0x40A DUP5 PUSH2 0x393 JUMP JUMPDEST PUSH2 0x3EF JUMP JUMPDEST PUSH2 0x393 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x426 DUP3 PUSH2 0x3F9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 DUP3 PUSH2 0x41B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x448 DUP2 PUSH2 0x42D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x463 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x43F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x477 DUP2 PUSH2 0x3B3 JUMP JUMPDEST DUP2 EQ PUSH2 0x482 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x494 DUP2 PUSH2 0x46E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4B0 JUMPI PUSH2 0x4AF PUSH2 0x469 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4BE DUP5 DUP3 DUP6 ADD PUSH2 0x485 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH26 0x9F36EC32713CD6B0C0DB4561CE6375E39E163D451E121C999050 0xF7 0xDA PUSH1 0x2B 0xE8 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"207:386:24:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:76;;;:::i;:::-;;2293:101:0;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;249:38:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;515:76:24;551:15;;;;;;;;;;;:21;;;573:10;551:33;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;515:76::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;249:38:24:-;;;;;;;;;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;7:126:28:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:60::-;621:3;642:5;635:12;;593:60;;;:::o;659:142::-;709:9;742:53;760:34;769:24;787:5;769:24;:::i;:::-;760:34;:::i;:::-;742:53;:::i;:::-;729:66;;659:142;;;:::o;807:126::-;857:9;890:37;921:5;890:37;:::i;:::-;877:50;;807:126;;;:::o;939:150::-;1013:9;1046:37;1077:5;1046:37;:::i;:::-;1033:50;;939:150;;;:::o;1095:179::-;1206:61;1261:5;1206:61;:::i;:::-;1201:3;1194:74;1095:179;;:::o;1280:270::-;1397:4;1435:2;1424:9;1420:18;1412:26;;1448:95;1540:1;1529:9;1525:17;1516:6;1448:95;:::i;:::-;1280:270;;;;:::o;1637:117::-;1746:1;1743;1736:12;1883:122;1956:24;1974:5;1956:24;:::i;:::-;1949:5;1946:35;1936:63;;1995:1;1992;1985:12;1936:63;1883:122;:::o;2011:139::-;2057:5;2095:6;2082:20;2073:29;;2111:33;2138:5;2111:33;:::i;:::-;2011:139;;;;:::o;2156:329::-;2215:6;2264:2;2252:9;2243:7;2239:23;2235:32;2232:119;;;2270:79;;:::i;:::-;2232:119;2390:1;2415:53;2460:7;2451:6;2440:9;2436:22;2415:53;:::i;:::-;2405:63;;2361:117;2156:329;;;;:::o"},"methodIdentifiers":{"attendanceToken()":"a9b5e2ea","claim()":"4e71d92d","owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"attendanceToken\",\"outputs\":[{\"internalType\":\"contract AttendanceToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Simple event contract that issues attendance tokens\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim()\":{\"notice\":\"Mint an attendance token for the caller\"},\"constructor\":{\"notice\":\"Deploy a new event and accompanying attendance token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AfterpartyEvent.sol\":\"AfterpartyEvent\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AfterpartyEvent.sol\":{\"keccak256\":\"0x11b5c975f34b4d16c79d36b92c00504483206e8409e2545cbe2ed68abd8e0120\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ba11b6740c0ab975b270b12a1c3fe889ff40d78ee5a48ec42a12e800dc1cc77\",\"dweb:/ipfs/Qmf2DwRmgBQogHwMYZbF9KzdEBd2VzMJnh8jjngfAHFf3D\"]},\"contracts/AttendanceToken.sol\":{\"keccak256\":\"0x168639ac2eecadbb7013c754fc001cb23fea2c4c0f52de1a26b388315bc4386f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac2306ce3968b70955e18904328405b689e20b368da4ddd209870fc1371cab87\",\"dweb:/ipfs/QmTGxevTwhAyTAtCDJRaDkvtg4fHoahVJFprfLmARm2pJe\"]}},\"version\":1}"}},"contracts/AfterpartyEventToken.sol":{"AfterpartyEventToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC1155InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC1155InvalidApprover","type":"error"},{"inputs":[{"internalType":"uint256","name":"idsLength","type":"uint256"},{"internalType":"uint256","name":"valuesLength","type":"uint256"}],"name":"ERC1155InvalidArrayLength","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC1155InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC1155InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC1155InvalidSender","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC1155MissingApprovalForAll","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"address","name":"organizer","type":"address"},{"indexed":false,"internalType":"string","name":"uri","type":"string"}],"name":"EventCreated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"eventId","type":"uint256"},{"indexed":true,"internalType":"address","name":"attendee","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"TokenMinted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"indexed":false,"internalType":"uint256[]","name":"values","type":"uint256[]"}],"name":"TransferBatch","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"id","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"TransferSingle","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"value","type":"string"},{"indexed":true,"internalType":"uint256","name":"id","type":"uint256"}],"name":"URI","type":"event"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"}],"name":"balanceOfBatch","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"eventUri","type":"string"}],"name":"createEvent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"events","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"organizer","type":"address"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"totalMinted","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"}],"name":"getEvent","outputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"organizer","type":"address"},{"internalType":"string","name":"uri","type":"string"},{"internalType":"uint256","name":"totalMinted","type":"uint256"},{"internalType":"bool","name":"exists","type":"bool"}],"internalType":"struct AfterpartyEventToken.Event","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"organizer","type":"address"}],"name":"getOrganizerEvents","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"eventId","type":"uint256"}],"name":"mintAttendanceToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"organizerEvents","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256[]","name":"ids","type":"uint256[]"},{"internalType":"uint256[]","name":"values","type":"uint256[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeBatchTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"id","type":"uint256"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"uri","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_345":{"entryPoint":null,"id":345,"parameterSlots":1,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9051":{"entryPoint":null,"id":9051,"parameterSlots":0,"returnSlots":0},"@_setURI_962":{"entryPoint":194,"id":962,"parameterSlots":1,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":215,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":465,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":482,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":669,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":511,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":990,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":445,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":413,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":805,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":951,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":825,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1145,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":690,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":616,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1115,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":815,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1083,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":569,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":522,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":865,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":706,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1070,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":923,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":719,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":875,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":918,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:28","statements":[{"body":{"nodeType":"YulBlock","src":"52:81:28","statements":[{"nodeType":"YulAssignment","src":"62:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"77:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"84:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"73:3:28"},"nodeType":"YulFunctionCall","src":"73:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:28","type":""}],"src":"7:126:28"},{"body":{"nodeType":"YulBlock","src":"184:51:28","statements":[{"nodeType":"YulAssignment","src":"194:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"205:17:28"},"nodeType":"YulFunctionCall","src":"205:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"194:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"166:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"176:7:28","type":""}],"src":"139:96:28"},{"body":{"nodeType":"YulBlock","src":"306:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"323:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"346:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"328:17:28"},"nodeType":"YulFunctionCall","src":"328:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"316:6:28"},"nodeType":"YulFunctionCall","src":"316:37:28"},"nodeType":"YulExpressionStatement","src":"316:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"294:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"301:3:28","type":""}],"src":"241:118:28"},{"body":{"nodeType":"YulBlock","src":"463:124:28","statements":[{"nodeType":"YulAssignment","src":"473:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"485:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"496:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"481:3:28"},"nodeType":"YulFunctionCall","src":"481:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"473:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"553:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"566:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"577:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"562:3:28"},"nodeType":"YulFunctionCall","src":"562:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"509:43:28"},"nodeType":"YulFunctionCall","src":"509:71:28"},"nodeType":"YulExpressionStatement","src":"509:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"435:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"447:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"458:4:28","type":""}],"src":"365:222:28"},{"body":{"nodeType":"YulBlock","src":"652:40:28","statements":[{"nodeType":"YulAssignment","src":"663:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"679:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"673:5:28"},"nodeType":"YulFunctionCall","src":"673:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"663:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"635:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"645:6:28","type":""}],"src":"593:99:28"},{"body":{"nodeType":"YulBlock","src":"726:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"743:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"746:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"736:6:28"},"nodeType":"YulFunctionCall","src":"736:88:28"},"nodeType":"YulExpressionStatement","src":"736:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"840:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"843:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"833:6:28"},"nodeType":"YulFunctionCall","src":"833:15:28"},"nodeType":"YulExpressionStatement","src":"833:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"864:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"867:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"857:6:28"},"nodeType":"YulFunctionCall","src":"857:15:28"},"nodeType":"YulExpressionStatement","src":"857:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"698:180:28"},{"body":{"nodeType":"YulBlock","src":"912:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"929:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"932:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"922:6:28"},"nodeType":"YulFunctionCall","src":"922:88:28"},"nodeType":"YulExpressionStatement","src":"922:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1026:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1029:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1019:6:28"},"nodeType":"YulFunctionCall","src":"1019:15:28"},"nodeType":"YulExpressionStatement","src":"1019:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1050:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1053:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1043:6:28"},"nodeType":"YulFunctionCall","src":"1043:15:28"},"nodeType":"YulExpressionStatement","src":"1043:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"884:180:28"},{"body":{"nodeType":"YulBlock","src":"1121:269:28","statements":[{"nodeType":"YulAssignment","src":"1131:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1145:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1151:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1141:3:28"},"nodeType":"YulFunctionCall","src":"1141:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1131:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1162:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1192:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1198:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1188:3:28"},"nodeType":"YulFunctionCall","src":"1188:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1166:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1239:51:28","statements":[{"nodeType":"YulAssignment","src":"1253:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1267:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1275:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1263:3:28"},"nodeType":"YulFunctionCall","src":"1263:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1253:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1219:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1212:6:28"},"nodeType":"YulFunctionCall","src":"1212:26:28"},"nodeType":"YulIf","src":"1209:81:28"},{"body":{"nodeType":"YulBlock","src":"1342:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1356:16:28"},"nodeType":"YulFunctionCall","src":"1356:18:28"},"nodeType":"YulExpressionStatement","src":"1356:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1306:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1329:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1337:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1326:2:28"},"nodeType":"YulFunctionCall","src":"1326:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1303:2:28"},"nodeType":"YulFunctionCall","src":"1303:38:28"},"nodeType":"YulIf","src":"1300:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1105:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1114:6:28","type":""}],"src":"1070:320:28"},{"body":{"nodeType":"YulBlock","src":"1450:87:28","statements":[{"nodeType":"YulAssignment","src":"1460:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"1468:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1460:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1488:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1491:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1481:6:28"},"nodeType":"YulFunctionCall","src":"1481:14:28"},"nodeType":"YulExpressionStatement","src":"1481:14:28"},{"nodeType":"YulAssignment","src":"1504:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1522:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1525:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"1512:9:28"},"nodeType":"YulFunctionCall","src":"1512:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"1504:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1437:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1445:4:28","type":""}],"src":"1396:141:28"},{"body":{"nodeType":"YulBlock","src":"1587:49:28","statements":[{"nodeType":"YulAssignment","src":"1597:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1615:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1622:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1611:3:28"},"nodeType":"YulFunctionCall","src":"1611:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"1627:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1607:3:28"},"nodeType":"YulFunctionCall","src":"1607:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1597:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1570:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1580:6:28","type":""}],"src":"1543:93:28"},{"body":{"nodeType":"YulBlock","src":"1695:54:28","statements":[{"nodeType":"YulAssignment","src":"1705:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1730:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"1736:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1726:3:28"},"nodeType":"YulFunctionCall","src":"1726:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1705:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1670:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"1676:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1686:8:28","type":""}],"src":"1642:107:28"},{"body":{"nodeType":"YulBlock","src":"1831:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1841:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1862:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1874:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1858:3:28"},"nodeType":"YulFunctionCall","src":"1858:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1845:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1885:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1916:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1927:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1897:18:28"},"nodeType":"YulFunctionCall","src":"1897:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1889:4:28","type":""}]},{"nodeType":"YulAssignment","src":"2003:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"2034:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"2045:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"2015:18:28"},"nodeType":"YulFunctionCall","src":"2015:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2003:8:28"}]},{"nodeType":"YulAssignment","src":"2063:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2076:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"2087:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2083:3:28"},"nodeType":"YulFunctionCall","src":"2083:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2072:3:28"},"nodeType":"YulFunctionCall","src":"2072:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2063:5:28"}]},{"nodeType":"YulAssignment","src":"2102:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2115:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"2126:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"2136:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2122:3:28"},"nodeType":"YulFunctionCall","src":"2122:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2112:2:28"},"nodeType":"YulFunctionCall","src":"2112:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2102:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1792:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1799:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1811:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1824:6:28","type":""}],"src":"1755:393:28"},{"body":{"nodeType":"YulBlock","src":"2199:32:28","statements":[{"nodeType":"YulAssignment","src":"2209:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2220:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2209:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2181:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2191:7:28","type":""}],"src":"2154:77:28"},{"body":{"nodeType":"YulBlock","src":"2269:28:28","statements":[{"nodeType":"YulAssignment","src":"2279:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2286:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2279:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2255:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2265:3:28","type":""}],"src":"2237:60:28"},{"body":{"nodeType":"YulBlock","src":"2363:82:28","statements":[{"nodeType":"YulAssignment","src":"2373:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2431:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2413:17:28"},"nodeType":"YulFunctionCall","src":"2413:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"2404:8:28"},"nodeType":"YulFunctionCall","src":"2404:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2386:17:28"},"nodeType":"YulFunctionCall","src":"2386:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"2373:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2343:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"2353:9:28","type":""}],"src":"2303:142:28"},{"body":{"nodeType":"YulBlock","src":"2498:28:28","statements":[{"nodeType":"YulAssignment","src":"2508:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2515:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2508:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2484:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2494:3:28","type":""}],"src":"2451:75:28"},{"body":{"nodeType":"YulBlock","src":"2608:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2618:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2673:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2642:30:28"},"nodeType":"YulFunctionCall","src":"2642:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2622:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2697:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2737:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2731:5:28"},"nodeType":"YulFunctionCall","src":"2731:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2744:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2776:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2752:23:28"},"nodeType":"YulFunctionCall","src":"2752:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2703:27:28"},"nodeType":"YulFunctionCall","src":"2703:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2690:6:28"},"nodeType":"YulFunctionCall","src":"2690:105:28"},"nodeType":"YulExpressionStatement","src":"2690:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2585:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2591:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2599:7:28","type":""}],"src":"2532:269:28"},{"body":{"nodeType":"YulBlock","src":"2856:24:28","statements":[{"nodeType":"YulAssignment","src":"2866:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2873:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2866:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2852:3:28","type":""}],"src":"2807:73:28"},{"body":{"nodeType":"YulBlock","src":"2939:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2949:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2963:30:28"},"nodeType":"YulFunctionCall","src":"2963:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2953:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3048:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3054:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"3062:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3004:43:28"},"nodeType":"YulFunctionCall","src":"3004:65:28"},"nodeType":"YulExpressionStatement","src":"3004:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2925:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2931:6:28","type":""}],"src":"2886:189:28"},{"body":{"nodeType":"YulBlock","src":"3131:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"3198:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3242:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3249:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"3212:29:28"},"nodeType":"YulFunctionCall","src":"3212:39:28"},"nodeType":"YulExpressionStatement","src":"3212:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3151:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"3158:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3148:2:28"},"nodeType":"YulFunctionCall","src":"3148:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3163:26:28","statements":[{"nodeType":"YulAssignment","src":"3165:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3178:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3185:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3174:3:28"},"nodeType":"YulFunctionCall","src":"3174:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3165:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"3145:2:28","statements":[]},"src":"3141:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"3119:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"3126:3:28","type":""}],"src":"3081:186:28"},{"body":{"nodeType":"YulBlock","src":"3352:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"3378:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3392:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"3440:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"3408:31:28"},"nodeType":"YulFunctionCall","src":"3408:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"3396:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3459:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3482:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3510:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3492:17:28"},"nodeType":"YulFunctionCall","src":"3492:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3478:3:28"},"nodeType":"YulFunctionCall","src":"3478:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"3463:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3679:27:28","statements":[{"nodeType":"YulAssignment","src":"3681:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3696:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3681:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3663:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"3675:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3660:2:28"},"nodeType":"YulFunctionCall","src":"3660:18:28"},"nodeType":"YulIf","src":"3657:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3748:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3765:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3793:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3775:17:28"},"nodeType":"YulFunctionCall","src":"3775:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3761:3:28"},"nodeType":"YulFunctionCall","src":"3761:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3719:28:28"},"nodeType":"YulFunctionCall","src":"3719:80:28"},"nodeType":"YulExpressionStatement","src":"3719:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3369:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3366:2:28"},"nodeType":"YulFunctionCall","src":"3366:11:28"},"nodeType":"YulIf","src":"3363:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"3328:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"3335:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"3340:10:28","type":""}],"src":"3273:543:28"},{"body":{"nodeType":"YulBlock","src":"3885:54:28","statements":[{"nodeType":"YulAssignment","src":"3895:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3920:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"3926:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3916:3:28"},"nodeType":"YulFunctionCall","src":"3916:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3895:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3860:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"3866:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3876:8:28","type":""}],"src":"3822:117:28"},{"body":{"nodeType":"YulBlock","src":"3996:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4006:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4055:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"4058:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4051:3:28"},"nodeType":"YulFunctionCall","src":"4051:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4070:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4066:3:28"},"nodeType":"YulFunctionCall","src":"4066:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"4022:28:28"},"nodeType":"YulFunctionCall","src":"4022:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4018:3:28"},"nodeType":"YulFunctionCall","src":"4018:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"4010:4:28","type":""}]},{"nodeType":"YulAssignment","src":"4083:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4097:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"4103:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4093:3:28"},"nodeType":"YulFunctionCall","src":"4093:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4083:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3973:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3979:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3989:6:28","type":""}],"src":"3945:169:28"},{"body":{"nodeType":"YulBlock","src":"4200:214:28","statements":[{"nodeType":"YulAssignment","src":"4333:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4360:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"4366:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4341:18:28"},"nodeType":"YulFunctionCall","src":"4341:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4333:4:28"}]},{"nodeType":"YulAssignment","src":"4379:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4390:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4400:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"4403:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4396:3:28"},"nodeType":"YulFunctionCall","src":"4396:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4387:2:28"},"nodeType":"YulFunctionCall","src":"4387:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"4379:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4181:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"4187:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"4195:4:28","type":""}],"src":"4119:295:28"},{"body":{"nodeType":"YulBlock","src":"4511:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4522:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4569:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4536:32:28"},"nodeType":"YulFunctionCall","src":"4536:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"4526:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4658:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4660:16:28"},"nodeType":"YulFunctionCall","src":"4660:18:28"},"nodeType":"YulExpressionStatement","src":"4660:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4630:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4638:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4627:2:28"},"nodeType":"YulFunctionCall","src":"4627:30:28"},"nodeType":"YulIf","src":"4624:56:28"},{"nodeType":"YulVariableDeclaration","src":"4690:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4736:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4730:5:28"},"nodeType":"YulFunctionCall","src":"4730:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4704:25:28"},"nodeType":"YulFunctionCall","src":"4704:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4694:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4835:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4841:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4849:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4789:45:28"},"nodeType":"YulFunctionCall","src":"4789:67:28"},"nodeType":"YulExpressionStatement","src":"4789:67:28"},{"nodeType":"YulVariableDeclaration","src":"4866:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4883:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4870:9:28","type":""}]},{"nodeType":"YulAssignment","src":"4894:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4907:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4894:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4958:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4972:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4991:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5003:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4999:3:28"},"nodeType":"YulFunctionCall","src":"4999:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4987:3:28"},"nodeType":"YulFunctionCall","src":"4987:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4976:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5023:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5069:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"5037:31:28"},"nodeType":"YulFunctionCall","src":"5037:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"5027:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5087:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5096:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5091:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5155:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5180:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5198:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5203:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5194:3:28"},"nodeType":"YulFunctionCall","src":"5194:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5188:5:28"},"nodeType":"YulFunctionCall","src":"5188:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5173:6:28"},"nodeType":"YulFunctionCall","src":"5173:42:28"},"nodeType":"YulExpressionStatement","src":"5173:42:28"},{"nodeType":"YulAssignment","src":"5232:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5246:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5254:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5242:3:28"},"nodeType":"YulFunctionCall","src":"5242:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5232:6:28"}]},{"nodeType":"YulAssignment","src":"5273:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5290:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5301:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5286:3:28"},"nodeType":"YulFunctionCall","src":"5286:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"5273:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5121:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"5124:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5118:2:28"},"nodeType":"YulFunctionCall","src":"5118:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5133:21:28","statements":[{"nodeType":"YulAssignment","src":"5135:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5144:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"5147:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5140:3:28"},"nodeType":"YulFunctionCall","src":"5140:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5135:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"5114:3:28","statements":[]},"src":"5110:208:28"},{"body":{"nodeType":"YulBlock","src":"5354:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5372:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5399:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5404:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5395:3:28"},"nodeType":"YulFunctionCall","src":"5395:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5389:5:28"},"nodeType":"YulFunctionCall","src":"5389:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"5376:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"5439:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"5466:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5481:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5489:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5477:3:28"},"nodeType":"YulFunctionCall","src":"5477:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"5447:18:28"},"nodeType":"YulFunctionCall","src":"5447:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5432:6:28"},"nodeType":"YulFunctionCall","src":"5432:64:28"},"nodeType":"YulExpressionStatement","src":"5432:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"5337:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"5346:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5334:2:28"},"nodeType":"YulFunctionCall","src":"5334:19:28"},"nodeType":"YulIf","src":"5331:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5530:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"5544:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"5552:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5540:3:28"},"nodeType":"YulFunctionCall","src":"5540:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"5556:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5536:3:28"},"nodeType":"YulFunctionCall","src":"5536:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5523:6:28"},"nodeType":"YulFunctionCall","src":"5523:36:28"},"nodeType":"YulExpressionStatement","src":"5523:36:28"}]},"nodeType":"YulCase","src":"4951:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4956:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5586:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5613:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5604:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5637:67:28","statements":[{"nodeType":"YulAssignment","src":"5655:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5674:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5679:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5670:3:28"},"nodeType":"YulFunctionCall","src":"5670:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5664:5:28"},"nodeType":"YulFunctionCall","src":"5664:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5655:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5630:6:28"},"nodeType":"YulIf","src":"5627:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5724:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5783:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"5790:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5730:52:28"},"nodeType":"YulFunctionCall","src":"5730:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5717:6:28"},"nodeType":"YulFunctionCall","src":"5717:81:28"},"nodeType":"YulExpressionStatement","src":"5717:81:28"}]},"nodeType":"YulCase","src":"5578:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4931:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4939:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4928:2:28"},"nodeType":"YulFunctionCall","src":"4928:14:28"},"nodeType":"YulSwitch","src":"4921:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"4500:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"4506:3:28","type":""}],"src":"4419:1395:28"}]},"contents":"{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5033604051806020016040528060008152506200003481620000c260201b60201c565b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000aa5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a19190620001e2565b60405180910390fd5b620000bb81620000d760201b60201c565b5062000560565b8060029081620000d3919062000479565b5050565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ca826200019d565b9050919050565b620001dc81620001bd565b82525050565b6000602082019050620001f96000830184620001d1565b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200028157607f821691505b60208210810362000297576200029662000239565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620003017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c2565b6200030d8683620002c2565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200035a620003546200034e8462000325565b6200032f565b62000325565b9050919050565b6000819050919050565b620003768362000339565b6200038e620003858262000361565b848454620002cf565b825550505050565b600090565b620003a562000396565b620003b28184846200036b565b505050565b5b81811015620003da57620003ce6000826200039b565b600181019050620003b8565b5050565b601f8211156200042957620003f3816200029d565b620003fe84620002b2565b810160208510156200040e578190505b620004266200041d85620002b2565b830182620003b7565b50505b505050565b600082821c905092915050565b60006200044e600019846008026200042e565b1980831691505092915050565b60006200046983836200043b565b9150826002028217905092915050565b6200048482620001ff565b67ffffffffffffffff811115620004a0576200049f6200020a565b5b620004ac825462000268565b620004b9828285620003de565b600060209050601f831160018114620004f15760008415620004dc578287015190505b620004e885826200045b565b86555062000558565b601f19841662000501866200029d565b60005b828110156200052b5784890151825560018201915060208501945060208101905062000504565b868310156200054b578489015162000547601f8916826200043b565b8355505b6001600288020188555050505b505050505050565b61336c80620005706000396000f3fe608060405234801561001057600080fd5b50600436106101155760003560e01c80638da5cb5b116100a2578063e4aa47e311610071578063e4aa47e31461031a578063e985e9c51461034a578063f242432a1461037a578063f2fde38b14610396578063ff9f5970146103b257610115565b80638da5cb5b146102945780639bc2bc71146102b2578063a22cb465146102e2578063da4e5a2c146102fe57610115565b80632eb2c2d6116100e95780632eb2c2d6146101de5780634e1273f4146101fa5780636d1884e01461022a578063715018a61461025a578063873f6f9e1461026457610115565b8062fdd58e1461011a57806301ffc9a71461014a5780630b7914301461017a5780630e89341c146101ae575b600080fd5b610134600480360381019061012f91906120fa565b6103e2565b6040516101419190612149565b60405180910390f35b610164600480360381019061015f91906121bc565b61043c565b6040516101719190612204565b60405180910390f35b610194600480360381019061018f919061221f565b61051e565b6040516101a59594939291906122eb565b60405180910390f35b6101c860048036038101906101c3919061221f565b610609565b6040516101d59190612345565b60405180910390f35b6101f860048036038101906101f39190612564565b610714565b005b610214600480360381019061020f91906126f6565b6107bc565b604051610221919061282c565b60405180910390f35b610244600480360381019061023f919061221f565b6108cb565b604051610251919061292c565b60405180910390f35b610262610a72565b005b61027e6004803603810190610279919061294e565b610a86565b60405161028b9190612204565b60405180910390f35b61029c610ab5565b6040516102a9919061298e565b60405180910390f35b6102cc60048036038101906102c79190612a4a565b610adf565b6040516102d99190612149565b60405180910390f35b6102fc60048036038101906102f79190612abf565b610d7b565b005b6103186004803603810190610313919061221f565b610d91565b005b610334600480360381019061032f91906120fa565b610f96565b6040516103419190612149565b60405180910390f35b610364600480360381019061035f9190612aff565b610fc7565b6040516103719190612204565b60405180910390f35b610394600480360381019061038f9190612b3f565b61105b565b005b6103b060048036038101906103ab9190612bd6565b611103565b005b6103cc60048036038101906103c79190612bd6565b611189565b6040516103d9919061282c565b60405180910390f35b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061050757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610517575061051682611220565b5b9050919050565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461056d90612c32565b80601f016020809104026020016040519081016040528092919081815260200182805461059990612c32565b80156105e65780601f106105bb576101008083540402835291602001916105e6565b820191906000526020600020905b8154815290600101906020018083116105c957829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b60606005600083815260200190815260200160002060040160009054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590612caf565b60405180910390fd5b60056000838152602001908152602001600020600201805461068f90612c32565b80601f01602080910402602001604051908101604052809291908181526020018280546106bb90612c32565b80156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b50505050509050919050565b600061071e61128a565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561076357506107618682610fc7565b155b156107a75780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161079e929190612ccf565b60405180910390fd5b6107b48686868686611292565b505050505050565b6060815183511461080857815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016107ff929190612cf8565b60405180910390fd5b6000835167ffffffffffffffff8111156108255761082461236c565b5b6040519080825280602002602001820160405280156108535781602001602082028036833780820191505090505b50905060005b84518110156108c057610890610878828761138a90919063ffffffff16565b61088b838761139e90919063ffffffff16565b6103e2565b8282815181106108a3576108a2612d21565b5b602002602001018181525050806108b990612d7f565b9050610859565b508091505092915050565b6108d361200b565b6005600083815260200190815260200160002060040160009054906101000a900460ff16610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d90612caf565b60405180910390fd5b600560008381526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546109c490612c32565b80601f01602080910402602001604051908101604052809291908181526020018280546109f090612c32565b8015610a3d5780601f10610a1257610100808354040283529160200191610a3d565b820191906000526020600020905b815481529060010190602001808311610a2057829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff1615151515815250509050919050565b610a7a6113b2565b610a846000611439565b565b60076020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060046000815480929190610af490612d7f565b9190505550600060045490506040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016001815260200160011515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610bba9190612f73565b506060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055610c6a33826001604051806020016040528060008152506114ff565b60016007600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16817ffc695dea2478fb938a11068aeedddd7046a5fe655f136e30a325d353fe187a4585604051610d1a9190612345565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16817f2d03118aa776f7008445f6ca8490a6782ede2db364d741513555ba656ab1879f6001604051610d6a9190613080565b60405180910390a380915050919050565b610d8d610d8661128a565b8383611598565b5050565b6005600082815260200190815260200160002060040160009054906101000a900460ff16610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90612caf565b60405180910390fd5b6007600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e899061310d565b60405180910390fd5b610eae33826001604051806020016040528060008152506114ff565b60016007600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600560008281526020019081526020016000206003016000815480929190610f3e90612d7f565b91905055503373ffffffffffffffffffffffffffffffffffffffff16817f2d03118aa776f7008445f6ca8490a6782ede2db364d741513555ba656ab1879f6001604051610f8b9190613080565b60405180910390a350565b60066020528160005260406000208181548110610fb257600080fd5b90600052602060002001600091509150505481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061106561128a565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156110aa57506110a88682610fc7565b155b156110ee5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016110e5929190612ccf565b60405180910390fd5b6110fb8686868686611708565b505050505050565b61110b6113b2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361117d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611174919061298e565b60405180910390fd5b61118681611439565b50565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561121457602002820191906000526020600020905b815481526020019060010190808311611200575b50505050509050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113045760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112fb919061298e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036113765760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161136d919061298e565b60405180910390fd5b6113838585858585611813565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b6113ba61128a565b73ffffffffffffffffffffffffffffffffffffffff166113d8610ab5565b73ffffffffffffffffffffffffffffffffffffffff1614611437576113fb61128a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161142e919061298e565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115715760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611568919061298e565b60405180910390fd5b60008061157e85856118c5565b91509150611590600087848487611813565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361160a5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401611601919061298e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116fb9190612204565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361177a5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611771919061298e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036117ec5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016117e3919061298e565b60405180910390fd5b6000806117f985856118c5565b9150915061180a8787848487611813565b50505050505050565b61181f858585856118f5565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146118be57600061185d61128a565b905060018451036118ad57600061187e60008661139e90919063ffffffff16565b9050600061189660008661139e90919063ffffffff16565b90506118a6838989858589611ca3565b50506118bc565b6118bb818787878787611e57565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461193f57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611936929190612cf8565b60405180910390fd5b600061194961128a565b905060005b8351811015611b5e57600061196c828661139e90919063ffffffff16565b90506000611983838661139e90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611ab057600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a5857888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611a4f949392919061312d565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611b4b578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b439190613172565b925050819055505b505080611b5790612d7f565b905061194e565b506001835103611c1d576000611b7e60008561139e90919063ffffffff16565b90506000611b9660008561139e90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611c0e929190612cf8565b60405180910390a45050611c9c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611c939291906131a6565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611e4f578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611d04959493929190613232565b6020604051808303816000875af1925050508015611d4057506040513d601f19601f82011682018060405250810190611d3d91906132a1565b60015b611dc4573d8060008114611d70576040519150601f19603f3d011682016040523d82523d6000602084013e611d75565b606091505b506000815103611dbc57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611db3919061298e565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611e4d57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611e44919061298e565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115612003578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611eb89594939291906132ce565b6020604051808303816000875af1925050508015611ef457506040513d601f19601f82011682018060405250810190611ef191906132a1565b60015b611f78573d8060008114611f24576040519150601f19603f3d011682016040523d82523d6000602084013e611f29565b606091505b506000815103611f7057846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611f67919061298e565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461200157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ff8919061298e565b60405180910390fd5b505b505050505050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061209182612066565b9050919050565b6120a181612086565b81146120ac57600080fd5b50565b6000813590506120be81612098565b92915050565b6000819050919050565b6120d7816120c4565b81146120e257600080fd5b50565b6000813590506120f4816120ce565b92915050565b600080604083850312156121115761211061205c565b5b600061211f858286016120af565b9250506020612130858286016120e5565b9150509250929050565b612143816120c4565b82525050565b600060208201905061215e600083018461213a565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61219981612164565b81146121a457600080fd5b50565b6000813590506121b681612190565b92915050565b6000602082840312156121d2576121d161205c565b5b60006121e0848285016121a7565b91505092915050565b60008115159050919050565b6121fe816121e9565b82525050565b600060208201905061221960008301846121f5565b92915050565b6000602082840312156122355761223461205c565b5b6000612243848285016120e5565b91505092915050565b61225581612086565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561229557808201518184015260208101905061227a565b60008484015250505050565b6000601f19601f8301169050919050565b60006122bd8261225b565b6122c78185612266565b93506122d7818560208601612277565b6122e0816122a1565b840191505092915050565b600060a082019050612300600083018861213a565b61230d602083018761224c565b818103604083015261231f81866122b2565b905061232e606083018561213a565b61233b60808301846121f5565b9695505050505050565b6000602082019050818103600083015261235f81846122b2565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6123a4826122a1565b810181811067ffffffffffffffff821117156123c3576123c261236c565b5b80604052505050565b60006123d6612052565b90506123e2828261239b565b919050565b600067ffffffffffffffff8211156124025761240161236c565b5b602082029050602081019050919050565b600080fd5b600061242b612426846123e7565b6123cc565b9050808382526020820190506020840283018581111561244e5761244d612413565b5b835b81811015612477578061246388826120e5565b845260208401935050602081019050612450565b5050509392505050565b600082601f83011261249657612495612367565b5b81356124a6848260208601612418565b91505092915050565b600080fd5b600067ffffffffffffffff8211156124cf576124ce61236c565b5b6124d8826122a1565b9050602081019050919050565b82818337600083830152505050565b6000612507612502846124b4565b6123cc565b905082815260208101848484011115612523576125226124af565b5b61252e8482856124e5565b509392505050565b600082601f83011261254b5761254a612367565b5b813561255b8482602086016124f4565b91505092915050565b600080600080600060a086880312156125805761257f61205c565b5b600061258e888289016120af565b955050602061259f888289016120af565b945050604086013567ffffffffffffffff8111156125c0576125bf612061565b5b6125cc88828901612481565b935050606086013567ffffffffffffffff8111156125ed576125ec612061565b5b6125f988828901612481565b925050608086013567ffffffffffffffff81111561261a57612619612061565b5b61262688828901612536565b9150509295509295909350565b600067ffffffffffffffff82111561264e5761264d61236c565b5b602082029050602081019050919050565b600061267261266d84612633565b6123cc565b9050808382526020820190506020840283018581111561269557612694612413565b5b835b818110156126be57806126aa88826120af565b845260208401935050602081019050612697565b5050509392505050565b600082601f8301126126dd576126dc612367565b5b81356126ed84826020860161265f565b91505092915050565b6000806040838503121561270d5761270c61205c565b5b600083013567ffffffffffffffff81111561272b5761272a612061565b5b612737858286016126c8565b925050602083013567ffffffffffffffff81111561275857612757612061565b5b61276485828601612481565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127a3816120c4565b82525050565b60006127b5838361279a565b60208301905092915050565b6000602082019050919050565b60006127d98261276e565b6127e38185612779565b93506127ee8361278a565b8060005b8381101561281f57815161280688826127a9565b9750612811836127c1565b9250506001810190506127f2565b5085935050505092915050565b6000602082019050818103600083015261284681846127ce565b905092915050565b61285781612086565b82525050565b600082825260208201905092915050565b60006128798261225b565b612883818561285d565b9350612893818560208601612277565b61289c816122a1565b840191505092915050565b6128b0816121e9565b82525050565b600060a0830160008301516128ce600086018261279a565b5060208301516128e1602086018261284e565b50604083015184820360408601526128f9828261286e565b915050606083015161290e606086018261279a565b50608083015161292160808601826128a7565b508091505092915050565b6000602082019050818103600083015261294681846128b6565b905092915050565b600080604083850312156129655761296461205c565b5b6000612973858286016120e5565b9250506020612984858286016120af565b9150509250929050565b60006020820190506129a3600083018461224c565b92915050565b600067ffffffffffffffff8211156129c4576129c361236c565b5b6129cd826122a1565b9050602081019050919050565b60006129ed6129e8846129a9565b6123cc565b905082815260208101848484011115612a0957612a086124af565b5b612a148482856124e5565b509392505050565b600082601f830112612a3157612a30612367565b5b8135612a418482602086016129da565b91505092915050565b600060208284031215612a6057612a5f61205c565b5b600082013567ffffffffffffffff811115612a7e57612a7d612061565b5b612a8a84828501612a1c565b91505092915050565b612a9c816121e9565b8114612aa757600080fd5b50565b600081359050612ab981612a93565b92915050565b60008060408385031215612ad657612ad561205c565b5b6000612ae4858286016120af565b9250506020612af585828601612aaa565b9150509250929050565b60008060408385031215612b1657612b1561205c565b5b6000612b24858286016120af565b9250506020612b35858286016120af565b9150509250929050565b600080600080600060a08688031215612b5b57612b5a61205c565b5b6000612b69888289016120af565b9550506020612b7a888289016120af565b9450506040612b8b888289016120e5565b9350506060612b9c888289016120e5565b925050608086013567ffffffffffffffff811115612bbd57612bbc612061565b5b612bc988828901612536565b9150509295509295909350565b600060208284031215612bec57612beb61205c565b5b6000612bfa848285016120af565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c4a57607f821691505b602082108103612c5d57612c5c612c03565b5b50919050565b7f4576656e7420646f6573206e6f74206578697374000000000000000000000000600082015250565b6000612c99601483612266565b9150612ca482612c63565b602082019050919050565b60006020820190508181036000830152612cc881612c8c565b9050919050565b6000604082019050612ce4600083018561224c565b612cf1602083018461224c565b9392505050565b6000604082019050612d0d600083018561213a565b612d1a602083018461213a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d8a826120c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dbc57612dbb612d50565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612e297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612dec565b612e338683612dec565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612e70612e6b612e66846120c4565b612e4b565b6120c4565b9050919050565b6000819050919050565b612e8a83612e55565b612e9e612e9682612e77565b848454612df9565b825550505050565b600090565b612eb3612ea6565b612ebe818484612e81565b505050565b5b81811015612ee257612ed7600082612eab565b600181019050612ec4565b5050565b601f821115612f2757612ef881612dc7565b612f0184612ddc565b81016020851015612f10578190505b612f24612f1c85612ddc565b830182612ec3565b50505b505050565b600082821c905092915050565b6000612f4a60001984600802612f2c565b1980831691505092915050565b6000612f638383612f39565b9150826002028217905092915050565b612f7c8261225b565b67ffffffffffffffff811115612f9557612f9461236c565b5b612f9f8254612c32565b612faa828285612ee6565b600060209050601f831160018114612fdd5760008415612fcb578287015190505b612fd58582612f57565b86555061303d565b601f198416612feb86612dc7565b60005b8281101561301357848901518255600182019150602085019450602081019050612fee565b86831015613030578489015161302c601f891682612f39565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600061306a61306561306084613045565b612e4b565b6120c4565b9050919050565b61307a8161304f565b82525050565b60006020820190506130956000830184613071565b92915050565b7f416c726561647920636c61696d656420746f6b656e20666f722074686973206560008201527f76656e7400000000000000000000000000000000000000000000000000000000602082015250565b60006130f7602483612266565b91506131028261309b565b604082019050919050565b60006020820190508181036000830152613126816130ea565b9050919050565b6000608082019050613142600083018761224c565b61314f602083018661213a565b61315c604083018561213a565b613169606083018461213a565b95945050505050565b600061317d826120c4565b9150613188836120c4565b92508282019050808211156131a05761319f612d50565b5b92915050565b600060408201905081810360008301526131c081856127ce565b905081810360208301526131d481846127ce565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000613204826131dd565b61320e81856131e8565b935061321e818560208601612277565b613227816122a1565b840191505092915050565b600060a082019050613247600083018861224c565b613254602083018761224c565b613261604083018661213a565b61326e606083018561213a565b818103608083015261328081846131f9565b90509695505050505050565b60008151905061329b81612190565b92915050565b6000602082840312156132b7576132b661205c565b5b60006132c58482850161328c565b91505092915050565b600060a0820190506132e3600083018861224c565b6132f0602083018761224c565b818103604083015261330281866127ce565b9050818103606083015261331681856127ce565b9050818103608083015261332a81846131f9565b9050969550505050505056fea2646970667358221220e043fcd8cf27ddb52c8c7ee67993bdbe2c2b7c27918567ae6c94c6fcdf5136dc64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH3 0x34 DUP2 PUSH3 0xC2 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0xAA JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0xA1 SWAP2 SWAP1 PUSH3 0x1E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0xBB DUP2 PUSH3 0xD7 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x560 JUMP JUMPDEST DUP1 PUSH1 0x2 SWAP1 DUP2 PUSH3 0xD3 SWAP2 SWAP1 PUSH3 0x479 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1CA DUP3 PUSH3 0x19D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x1DC DUP2 PUSH3 0x1BD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x1F9 PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x281 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x297 JUMPI PUSH3 0x296 PUSH3 0x239 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x301 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2C2 JUMP JUMPDEST PUSH3 0x30D DUP7 DUP4 PUSH3 0x2C2 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x35A PUSH3 0x354 PUSH3 0x34E DUP5 PUSH3 0x325 JUMP JUMPDEST PUSH3 0x32F JUMP JUMPDEST PUSH3 0x325 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x376 DUP4 PUSH3 0x339 JUMP JUMPDEST PUSH3 0x38E PUSH3 0x385 DUP3 PUSH3 0x361 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2CF JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A5 PUSH3 0x396 JUMP JUMPDEST PUSH3 0x3B2 DUP2 DUP5 DUP5 PUSH3 0x36B JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3DA JUMPI PUSH3 0x3CE PUSH1 0x0 DUP3 PUSH3 0x39B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x429 JUMPI PUSH3 0x3F3 DUP2 PUSH3 0x29D JUMP JUMPDEST PUSH3 0x3FE DUP5 PUSH3 0x2B2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40E JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x426 PUSH3 0x41D DUP6 PUSH3 0x2B2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44E PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42E JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x469 DUP4 DUP4 PUSH3 0x43B JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x484 DUP3 PUSH3 0x1FF JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4A0 JUMPI PUSH3 0x49F PUSH3 0x20A JUMP JUMPDEST JUMPDEST PUSH3 0x4AC DUP3 SLOAD PUSH3 0x268 JUMP JUMPDEST PUSH3 0x4B9 DUP3 DUP3 DUP6 PUSH3 0x3DE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4F1 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4DC JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E8 DUP6 DUP3 PUSH3 0x45B JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x558 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x501 DUP7 PUSH3 0x29D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x52B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x504 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x54B JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x547 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x43B JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x336C DUP1 PUSH3 0x570 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE4AA47E3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE4AA47E3 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xFF9F5970 EQ PUSH2 0x3B2 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9BC2BC71 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xDA4E5A2C EQ PUSH2 0x2FE JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6D1884E0 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x873F6F9E EQ PUSH2 0x264 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xB791430 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2564 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x26F6 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x292C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0xA72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x2B3F JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x507 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x517 JUMPI POP PUSH2 0x516 DUP3 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x56D SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x68F SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BB SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71E PUSH2 0x128A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x763 JUMPI POP PUSH2 0x761 DUP7 DUP3 PUSH2 0xFC7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7A7 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP3 SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1292 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x808 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP3 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x825 JUMPI PUSH2 0x824 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x853 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x890 PUSH2 0x878 DUP3 DUP8 PUSH2 0x138A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x88B DUP4 DUP8 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x2D21 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x8B9 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP PUSH2 0x859 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9C4 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F0 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7A PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0xA84 PUSH1 0x0 PUSH2 0x1439 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xAF4 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x2F73 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0xC6A CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xFC695DEA2478FB938A11068AEEDDDD7046A5FE655F136E30A325D353FE187A45 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x2D03118AA776F7008445F6CA8490A6782EDE2DB364D741513555BA656AB1879F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8D PUSH2 0xD86 PUSH2 0x128A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP1 PUSH2 0x310D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF3E SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x2D03118AA776F7008445F6CA8490A6782EDE2DB364D741513555BA656AB1879F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1065 PUSH2 0x128A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10AA JUMPI POP PUSH2 0x10A8 DUP7 DUP3 PUSH2 0xFC7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x10EE JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E5 SWAP3 SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10FB DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1708 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x110B PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1186 DUP2 PUSH2 0x1439 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1214 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1200 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1304 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1376 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13BA PUSH2 0x128A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D8 PUSH2 0xAB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1437 JUMPI PUSH2 0x13FB PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1571 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x157E DUP6 DUP6 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1590 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x160A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16FB SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1771 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17F9 DUP6 DUP6 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x180A DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x181F DUP6 DUP6 DUP6 DUP6 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18BE JUMPI PUSH1 0x0 PUSH2 0x185D PUSH2 0x128A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x18AD JUMPI PUSH1 0x0 PUSH2 0x187E PUSH1 0x0 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1896 PUSH1 0x0 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18A6 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1CA3 JUMP JUMPDEST POP POP PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x18BB DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1E57 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x193F JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1936 SWAP3 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1949 PUSH2 0x128A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1B5E JUMPI PUSH1 0x0 PUSH2 0x196C DUP3 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1983 DUP4 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A58 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B4B JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B43 SWAP2 SWAP1 PUSH2 0x3172 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1B57 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP PUSH2 0x194E JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1C1D JUMPI PUSH1 0x0 PUSH2 0x1B7E PUSH1 0x0 DUP6 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B96 PUSH1 0x0 DUP6 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C0E SWAP3 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1C9C JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1C93 SWAP3 SWAP2 SWAP1 PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1E4F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D04 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D40 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D3D SWAP2 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DC4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D70 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1DBC JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB3 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1E4D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E44 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2003 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EF4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF1 SWAP2 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F78 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F24 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1F70 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F67 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2001 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF8 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP3 PUSH2 0x2066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A1 DUP2 PUSH2 0x2086 JUMP JUMPDEST DUP2 EQ PUSH2 0x20AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BE DUP2 PUSH2 0x2098 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F4 DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2111 JUMPI PUSH2 0x2110 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2130 DUP6 DUP3 DUP7 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2143 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x213A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2199 DUP2 PUSH2 0x2164 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B6 DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH2 0x21D1 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21E0 DUP5 DUP3 DUP6 ADD PUSH2 0x21A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21FE DUP2 PUSH2 0x21E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2243 DUP5 DUP3 DUP6 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2255 DUP2 PUSH2 0x2086 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2295 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x227A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BD DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x22C7 DUP2 DUP6 PUSH2 0x2266 JUMP JUMPDEST SWAP4 POP PUSH2 0x22D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x22E0 DUP2 PUSH2 0x22A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2300 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x230D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x231F DUP2 DUP7 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x232E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x233B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x21F5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 DUP5 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23A4 DUP3 PUSH2 0x22A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C2 PUSH2 0x236C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D6 PUSH2 0x2052 JUMP JUMPDEST SWAP1 POP PUSH2 0x23E2 DUP3 DUP3 PUSH2 0x239B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2402 JUMPI PUSH2 0x2401 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x242B PUSH2 0x2426 DUP5 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x2413 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2477 JUMPI DUP1 PUSH2 0x2463 DUP9 DUP3 PUSH2 0x20E5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2450 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2496 JUMPI PUSH2 0x2495 PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH2 0x24D8 DUP3 PUSH2 0x22A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2507 PUSH2 0x2502 DUP5 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2523 JUMPI PUSH2 0x2522 PUSH2 0x24AF JUMP JUMPDEST JUMPDEST PUSH2 0x252E DUP5 DUP3 DUP6 PUSH2 0x24E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x255B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2580 JUMPI PUSH2 0x257F PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x258E DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x259F DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C0 JUMPI PUSH2 0x25BF PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x25CC DUP9 DUP3 DUP10 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25ED JUMPI PUSH2 0x25EC PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x25F9 DUP9 DUP3 DUP10 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2626 DUP9 DUP3 DUP10 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x264E JUMPI PUSH2 0x264D PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2672 PUSH2 0x266D DUP5 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2695 JUMPI PUSH2 0x2694 PUSH2 0x2413 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26BE JUMPI DUP1 PUSH2 0x26AA DUP9 DUP3 PUSH2 0x20AF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2697 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26DD JUMPI PUSH2 0x26DC PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x265F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x270D JUMPI PUSH2 0x270C PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2737 DUP6 DUP3 DUP7 ADD PUSH2 0x26C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2758 JUMPI PUSH2 0x2757 PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2764 DUP6 DUP3 DUP7 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A3 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B5 DUP4 DUP4 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D9 DUP3 PUSH2 0x276E JUMP JUMPDEST PUSH2 0x27E3 DUP2 DUP6 PUSH2 0x2779 JUMP JUMPDEST SWAP4 POP PUSH2 0x27EE DUP4 PUSH2 0x278A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x281F JUMPI DUP2 MLOAD PUSH2 0x2806 DUP9 DUP3 PUSH2 0x27A9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2811 DUP4 PUSH2 0x27C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27F2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2846 DUP2 DUP5 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2857 DUP2 PUSH2 0x2086 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2879 DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x2883 DUP2 DUP6 PUSH2 0x285D JUMP JUMPDEST SWAP4 POP PUSH2 0x2893 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x289C DUP2 PUSH2 0x22A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28B0 DUP2 PUSH2 0x21E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x28CE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x279A JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x28E1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x284E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x28F9 DUP3 DUP3 PUSH2 0x286E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x290E PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x279A JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2921 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x28A7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2946 DUP2 DUP5 PUSH2 0x28B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2965 JUMPI PUSH2 0x2964 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP6 DUP3 DUP7 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2984 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29C4 JUMPI PUSH2 0x29C3 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH2 0x29CD DUP3 PUSH2 0x22A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29ED PUSH2 0x29E8 DUP5 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A09 JUMPI PUSH2 0x2A08 PUSH2 0x24AF JUMP JUMPDEST JUMPDEST PUSH2 0x2A14 DUP5 DUP3 DUP6 PUSH2 0x24E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A31 JUMPI PUSH2 0x2A30 PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A41 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x29DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A5F PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A7E JUMPI PUSH2 0x2A7D PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2A8A DUP5 DUP3 DUP6 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9C DUP2 PUSH2 0x21E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AB9 DUP2 PUSH2 0x2A93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD6 JUMPI PUSH2 0x2AD5 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AE4 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AF5 DUP6 DUP3 DUP7 ADD PUSH2 0x2AAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B16 JUMPI PUSH2 0x2B15 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B24 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B35 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B69 DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2B7A DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2B8B DUP9 DUP3 DUP10 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2B9C DUP9 DUP3 DUP10 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BBD JUMPI PUSH2 0x2BBC PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2BC9 DUP9 DUP3 DUP10 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BEC JUMPI PUSH2 0x2BEB PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BFA DUP5 DUP3 DUP6 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C4A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C5D JUMPI PUSH2 0x2C5C PUSH2 0x2C03 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4576656E7420646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C99 PUSH1 0x14 DUP4 PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA4 DUP3 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CC8 DUP2 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CE4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x2CF1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D0D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x2D1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8A DUP3 PUSH2 0x20C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DBC JUMPI PUSH2 0x2DBB PUSH2 0x2D50 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E29 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x2E33 DUP7 DUP4 PUSH2 0x2DEC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E70 PUSH2 0x2E6B PUSH2 0x2E66 DUP5 PUSH2 0x20C4 JUMP JUMPDEST PUSH2 0x2E4B JUMP JUMPDEST PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E8A DUP4 PUSH2 0x2E55 JUMP JUMPDEST PUSH2 0x2E9E PUSH2 0x2E96 DUP3 PUSH2 0x2E77 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2DF9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2EB3 PUSH2 0x2EA6 JUMP JUMPDEST PUSH2 0x2EBE DUP2 DUP5 DUP5 PUSH2 0x2E81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EE2 JUMPI PUSH2 0x2ED7 PUSH1 0x0 DUP3 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2EC4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2F27 JUMPI PUSH2 0x2EF8 DUP2 PUSH2 0x2DC7 JUMP JUMPDEST PUSH2 0x2F01 DUP5 PUSH2 0x2DDC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2F10 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2F24 PUSH2 0x2F1C DUP6 PUSH2 0x2DDC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2EC3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2F2C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F63 DUP4 DUP4 PUSH2 0x2F39 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F7C DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F95 JUMPI PUSH2 0x2F94 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH2 0x2F9F DUP3 SLOAD PUSH2 0x2C32 JUMP JUMPDEST PUSH2 0x2FAA DUP3 DUP3 DUP6 PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2FDD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2FCB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2FD5 DUP6 DUP3 PUSH2 0x2F57 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x303D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2FEB DUP7 PUSH2 0x2DC7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3013 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FEE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3030 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x302C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2F39 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x306A PUSH2 0x3065 PUSH2 0x3060 DUP5 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x2E4B JUMP JUMPDEST PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x307A DUP2 PUSH2 0x304F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3095 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3071 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D656420746F6B656E20666F7220746869732065 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x76656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F7 PUSH1 0x24 DUP4 PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP PUSH2 0x3102 DUP3 PUSH2 0x309B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3126 DUP2 PUSH2 0x30EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3142 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x314F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x315C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x3169 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317D DUP3 PUSH2 0x20C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3188 DUP4 PUSH2 0x20C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x31A0 JUMPI PUSH2 0x319F PUSH2 0x2D50 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C0 DUP2 DUP6 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x31D4 DUP2 DUP5 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3204 DUP3 PUSH2 0x31DD JUMP JUMPDEST PUSH2 0x320E DUP2 DUP6 PUSH2 0x31E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x321E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x3227 DUP2 PUSH2 0x22A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3247 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x3254 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x3261 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x326E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3280 DUP2 DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x329B DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B7 JUMPI PUSH2 0x32B6 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32C5 DUP5 DUP3 DUP6 ADD PUSH2 0x328C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x32E3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x32F0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3302 DUP2 DUP7 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3316 DUP2 DUP6 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x332A DUP2 DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 NUMBER 0xFC 0xD8 0xCF 0x27 0xDD 0xB5 0x2C DUP13 PUSH31 0xE67993BDBE2C2B7C27918567AE6C94C6FCDF5136DC64736F6C634300081400 CALLER ","sourceMap":"316:3055:25:-:0;;;925:48;;;;;;;;;;959:10;1249:62:2;;;;;;;;;;;;1291:13;1299:4;1291:7;;;:13;;:::i;:::-;1249:62;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;316:3055:25;;10290:86:2;10363:6;10356:4;:13;;;;;;:::i;:::-;;10290:86;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:28:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;593:99::-;645:6;679:5;673:12;663:22;;593:99;;;:::o;698:180::-;746:77;743:1;736:88;843:4;840:1;833:15;867:4;864:1;857:15;884:180;932:77;929:1;922:88;1029:4;1026:1;1019:15;1053:4;1050:1;1043:15;1070:320;1114:6;1151:1;1145:4;1141:12;1131:22;;1198:1;1192:4;1188:12;1219:18;1209:81;;1275:4;1267:6;1263:17;1253:27;;1209:81;1337:2;1329:6;1326:14;1306:18;1303:38;1300:84;;1356:18;;:::i;:::-;1300:84;1121:269;1070:320;;;:::o;1396:141::-;1445:4;1468:3;1460:11;;1491:3;1488:1;1481:14;1525:4;1522:1;1512:18;1504:26;;1396:141;;;:::o;1543:93::-;1580:6;1627:2;1622;1615:5;1611:14;1607:23;1597:33;;1543:93;;;:::o;1642:107::-;1686:8;1736:5;1730:4;1726:16;1705:37;;1642:107;;;;:::o;1755:393::-;1824:6;1874:1;1862:10;1858:18;1897:97;1927:66;1916:9;1897:97;:::i;:::-;2015:39;2045:8;2034:9;2015:39;:::i;:::-;2003:51;;2087:4;2083:9;2076:5;2072:21;2063:30;;2136:4;2126:8;2122:19;2115:5;2112:30;2102:40;;1831:317;;1755:393;;;;;:::o;2154:77::-;2191:7;2220:5;2209:16;;2154:77;;;:::o;2237:60::-;2265:3;2286:5;2279:12;;2237:60;;;:::o;2303:142::-;2353:9;2386:53;2404:34;2413:24;2431:5;2413:24;:::i;:::-;2404:34;:::i;:::-;2386:53;:::i;:::-;2373:66;;2303:142;;;:::o;2451:75::-;2494:3;2515:5;2508:12;;2451:75;;;:::o;2532:269::-;2642:39;2673:7;2642:39;:::i;:::-;2703:91;2752:41;2776:16;2752:41;:::i;:::-;2744:6;2737:4;2731:11;2703:91;:::i;:::-;2697:4;2690:105;2608:193;2532:269;;;:::o;2807:73::-;2852:3;2807:73;:::o;2886:189::-;2963:32;;:::i;:::-;3004:65;3062:6;3054;3048:4;3004:65;:::i;:::-;2939:136;2886:189;;:::o;3081:186::-;3141:120;3158:3;3151:5;3148:14;3141:120;;;3212:39;3249:1;3242:5;3212:39;:::i;:::-;3185:1;3178:5;3174:13;3165:22;;3141:120;;;3081:186;;:::o;3273:543::-;3374:2;3369:3;3366:11;3363:446;;;3408:38;3440:5;3408:38;:::i;:::-;3492:29;3510:10;3492:29;:::i;:::-;3482:8;3478:44;3675:2;3663:10;3660:18;3657:49;;;3696:8;3681:23;;3657:49;3719:80;3775:22;3793:3;3775:22;:::i;:::-;3765:8;3761:37;3748:11;3719:80;:::i;:::-;3378:431;;3363:446;3273:543;;;:::o;3822:117::-;3876:8;3926:5;3920:4;3916:16;3895:37;;3822:117;;;;:::o;3945:169::-;3989:6;4022:51;4070:1;4066:6;4058:5;4055:1;4051:13;4022:51;:::i;:::-;4018:56;4103:4;4097;4093:15;4083:25;;3996:118;3945:169;;;;:::o;4119:295::-;4195:4;4341:29;4366:3;4360:4;4341:29;:::i;:::-;4333:37;;4403:3;4400:1;4396:11;4390:4;4387:21;4379:29;;4119:295;;;;:::o;4419:1395::-;4536:37;4569:3;4536:37;:::i;:::-;4638:18;4630:6;4627:30;4624:56;;;4660:18;;:::i;:::-;4624:56;4704:38;4736:4;4730:11;4704:38;:::i;:::-;4789:67;4849:6;4841;4835:4;4789:67;:::i;:::-;4883:1;4907:4;4894:17;;4939:2;4931:6;4928:14;4956:1;4951:618;;;;5613:1;5630:6;5627:77;;;5679:9;5674:3;5670:19;5664:26;5655:35;;5627:77;5730:67;5790:6;5783:5;5730:67;:::i;:::-;5724:4;5717:81;5586:222;4921:887;;4951:618;5003:4;4999:9;4991:6;4987:22;5037:37;5069:4;5037:37;:::i;:::-;5096:1;5110:208;5124:7;5121:1;5118:14;5110:208;;;5203:9;5198:3;5194:19;5188:26;5180:6;5173:42;5254:1;5246:6;5242:14;5232:24;;5301:2;5290:9;5286:18;5273:31;;5147:4;5144:1;5140:12;5135:17;;5110:208;;;5346:6;5337:7;5334:19;5331:179;;;5404:9;5399:3;5395:19;5389:26;5447:48;5489:4;5481:6;5477:17;5466:9;5447:48;:::i;:::-;5439:6;5432:64;5354:156;5331:179;5556:1;5552;5544:6;5540:14;5536:22;5530:4;5523:36;4958:611;;;4921:887;;4511:1303;;;4419:1395;;:::o;316:3055:25:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_asSingletonArrays_1200":{"entryPoint":6341,"id":1200,"parameterSlots":2,"returnSlots":2},"@_checkOwner_84":{"entryPoint":5042,"id":84,"parameterSlots":0,"returnSlots":0},"@_mint_1014":{"entryPoint":5375,"id":1014,"parameterSlots":4,"returnSlots":0},"@_msgSender_3655":{"entryPoint":4746,"id":3655,"parameterSlots":0,"returnSlots":1},"@_safeBatchTransferFrom_951":{"entryPoint":4754,"id":951,"parameterSlots":5,"returnSlots":0},"@_safeTransferFrom_896":{"entryPoint":5896,"id":896,"parameterSlots":5,"returnSlots":0},"@_setApprovalForAll_1184":{"entryPoint":5528,"id":1184,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":5177,"id":146,"parameterSlots":1,"returnSlots":0},"@_updateWithAcceptanceCheck_830":{"entryPoint":6163,"id":830,"parameterSlots":5,"returnSlots":0},"@_update_750":{"entryPoint":6389,"id":750,"parameterSlots":4,"returnSlots":0},"@balanceOfBatch_474":{"entryPoint":1980,"id":474,"parameterSlots":2,"returnSlots":1},"@balanceOf_404":{"entryPoint":994,"id":404,"parameterSlots":2,"returnSlots":1},"@checkOnERC1155BatchReceived_1535":{"entryPoint":7767,"id":1535,"parameterSlots":6,"returnSlots":0},"@checkOnERC1155Received_1461":{"entryPoint":7331,"id":1461,"parameterSlots":6,"returnSlots":0},"@createEvent_9121":{"entryPoint":2783,"id":9121,"parameterSlots":1,"returnSlots":1},"@events_9013":{"entryPoint":1310,"id":9013,"parameterSlots":0,"returnSlots":0},"@getEvent_9143":{"entryPoint":2251,"id":9143,"parameterSlots":1,"returnSlots":1},"@getOrganizerEvents_9213":{"entryPoint":4489,"id":9213,"parameterSlots":1,"returnSlots":1},"@hasClaimed_9024":{"entryPoint":2694,"id":9024,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_507":{"entryPoint":4039,"id":507,"parameterSlots":2,"returnSlots":1},"@mintAttendanceToken_9199":{"entryPoint":3473,"id":9199,"parameterSlots":1,"returnSlots":0},"@organizerEvents_9018":{"entryPoint":3990,"id":9018,"parameterSlots":0,"returnSlots":0},"@owner_67":{"entryPoint":2741,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2674,"id":98,"parameterSlots":0,"returnSlots":0},"@safeBatchTransferFrom_597":{"entryPoint":1812,"id":597,"parameterSlots":5,"returnSlots":0},"@safeTransferFrom_551":{"entryPoint":4187,"id":551,"parameterSlots":5,"returnSlots":0},"@setApprovalForAll_490":{"entryPoint":3451,"id":490,"parameterSlots":2,"returnSlots":0},"@supportsInterface_376":{"entryPoint":1084,"id":376,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5404":{"entryPoint":4640,"id":5404,"parameterSlots":1,"returnSlots":1},"@transferOwnership_126":{"entryPoint":4355,"id":126,"parameterSlots":1,"returnSlots":0},"@unsafeMemoryAccess_3551":{"entryPoint":5002,"id":3551,"parameterSlots":2,"returnSlots":1},"@unsafeMemoryAccess_3577":{"entryPoint":5022,"id":3577,"parameterSlots":2,"returnSlots":1},"@uri_9236":{"entryPoint":1545,"id":9236,"parameterSlots":1,"returnSlots":1},"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9823,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9240,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":9460,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10714,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":8367,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9928,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":10922,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":8615,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":12940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":9526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":8421,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":11222,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":11007,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr":{"entryPoint":9572,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr":{"entryPoint":11071,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_addresst_bool":{"entryPoint":10943,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":8442,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9974,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":8636,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":12961,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":10826,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":8735,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address":{"entryPoint":10574,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":10153,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":10318,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":8780,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10190,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":10407,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":8693,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":12793,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack":{"entryPoint":12401,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":10350,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":8882,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68_to_t_string_memory_ptr_fromStack":{"entryPoint":12522,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b_to_t_string_memory_ptr_fromStack":{"entryPoint":11404,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Event_$9008_memory_ptr_to_t_struct$_Event_$9008_memory_ptr_fromStack":{"entryPoint":10422,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":10138,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":8506,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":10638,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed":{"entryPoint":11471,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":13006,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":12850,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":12589,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":10284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12710,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":8708,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed":{"entryPoint":12416,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12557,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":11439,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Event_$9008_memory_ptr__to_t_struct$_Event_$9008_memory_ptr__fromStack_reversed":{"entryPoint":10540,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":8521,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed":{"entryPoint":8939,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":11512,"id":null,"parameterSlots":3,"returnSlots":1},"allocate_memory":{"entryPoint":9164,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":8274,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_address_$dyn_memory_ptr":{"entryPoint":9779,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":9191,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":9396,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10665,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10122,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":11719,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10094,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":12765,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":8795,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":10177,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":10105,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":12776,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":10333,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":8806,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":12658,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":12006,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":8326,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":8681,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":8548,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_rational_1_by_1":{"entryPoint":12357,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":8294,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":8388,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":11971,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_rational_1_by_1_to_t_uint256":{"entryPoint":12367,"id":null,"parameterSlots":1,"returnSlots":1},"convert_t_uint256_to_t_uint256":{"entryPoint":11861,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":12147,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":9445,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":8823,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":11740,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":11314,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":12119,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":9115,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":11851,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":11647,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":12089,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":11600,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":11267,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":11553,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":9068,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":11895,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":9063,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":9235,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":9391,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":8289,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":8284,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":8865,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":11756,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":12076,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":11947,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68":{"entryPoint":12443,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b":{"entryPoint":11363,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":11769,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":11905,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":8344,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":10899,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":8592,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":8398,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":11942,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:35773:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"379:81:28","statements":[{"nodeType":"YulAssignment","src":"389:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:28"},"nodeType":"YulFunctionCall","src":"400:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:28","type":""}],"src":"334:126:28"},{"body":{"nodeType":"YulBlock","src":"511:51:28","statements":[{"nodeType":"YulAssignment","src":"521:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:28"},"nodeType":"YulFunctionCall","src":"532:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:28","type":""}],"src":"466:96:28"},{"body":{"nodeType":"YulBlock","src":"611:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:28"},"nodeType":"YulFunctionCall","src":"670:12:28"},"nodeType":"YulExpressionStatement","src":"670:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:28"},"nodeType":"YulFunctionCall","src":"641:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:28"},"nodeType":"YulFunctionCall","src":"631:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:28"},"nodeType":"YulFunctionCall","src":"624:43:28"},"nodeType":"YulIf","src":"621:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:28","type":""}],"src":"568:122:28"},{"body":{"nodeType":"YulBlock","src":"748:87:28","statements":[{"nodeType":"YulAssignment","src":"758:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:28"},"nodeType":"YulFunctionCall","src":"767:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:28"},"nodeType":"YulFunctionCall","src":"796:33:28"},"nodeType":"YulExpressionStatement","src":"796:33:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:28","type":""}],"src":"696:139:28"},{"body":{"nodeType":"YulBlock","src":"886:32:28","statements":[{"nodeType":"YulAssignment","src":"896:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:28","type":""}],"src":"841:77:28"},{"body":{"nodeType":"YulBlock","src":"967:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:28"},"nodeType":"YulFunctionCall","src":"1026:12:28"},"nodeType":"YulExpressionStatement","src":"1026:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:28"},"nodeType":"YulFunctionCall","src":"997:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:28"},"nodeType":"YulFunctionCall","src":"987:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:28"},"nodeType":"YulFunctionCall","src":"980:43:28"},"nodeType":"YulIf","src":"977:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:28","type":""}],"src":"924:122:28"},{"body":{"nodeType":"YulBlock","src":"1104:87:28","statements":[{"nodeType":"YulAssignment","src":"1114:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:28"},"nodeType":"YulFunctionCall","src":"1123:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:28"},"nodeType":"YulFunctionCall","src":"1152:33:28"},"nodeType":"YulExpressionStatement","src":"1152:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:28","type":""}],"src":"1052:139:28"},{"body":{"nodeType":"YulBlock","src":"1280:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:28"},"nodeType":"YulFunctionCall","src":"1328:79:28"},"nodeType":"YulExpressionStatement","src":"1328:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:28"},"nodeType":"YulFunctionCall","src":"1297:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:28"},"nodeType":"YulFunctionCall","src":"1293:32:28"},"nodeType":"YulIf","src":"1290:119:28"},{"nodeType":"YulBlock","src":"1419:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:28"},"nodeType":"YulFunctionCall","src":"1494:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:28"},"nodeType":"YulFunctionCall","src":"1473:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:28"}]}]},{"nodeType":"YulBlock","src":"1546:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:28"},"nodeType":"YulFunctionCall","src":"1622:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:28"},"nodeType":"YulFunctionCall","src":"1601:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:28","type":""}],"src":"1197:474:28"},{"body":{"nodeType":"YulBlock","src":"1742:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1759:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1782:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1764:17:28"},"nodeType":"YulFunctionCall","src":"1764:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:28"},"nodeType":"YulFunctionCall","src":"1752:37:28"},"nodeType":"YulExpressionStatement","src":"1752:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1730:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1737:3:28","type":""}],"src":"1677:118:28"},{"body":{"nodeType":"YulBlock","src":"1899:124:28","statements":[{"nodeType":"YulAssignment","src":"1909:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1921:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1932:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1917:3:28"},"nodeType":"YulFunctionCall","src":"1917:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1909:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1989:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2002:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2013:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1998:3:28"},"nodeType":"YulFunctionCall","src":"1998:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"1945:43:28"},"nodeType":"YulFunctionCall","src":"1945:71:28"},"nodeType":"YulExpressionStatement","src":"1945:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1871:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1883:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1894:4:28","type":""}],"src":"1801:222:28"},{"body":{"nodeType":"YulBlock","src":"2073:105:28","statements":[{"nodeType":"YulAssignment","src":"2083:89:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2098:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2105:66:28","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2094:3:28"},"nodeType":"YulFunctionCall","src":"2094:78:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2083:7:28"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2055:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2065:7:28","type":""}],"src":"2029:149:28"},{"body":{"nodeType":"YulBlock","src":"2226:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"2282:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2291:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2294:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2284:6:28"},"nodeType":"YulFunctionCall","src":"2284:12:28"},"nodeType":"YulExpressionStatement","src":"2284:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2249:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2273:5:28"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"2256:16:28"},"nodeType":"YulFunctionCall","src":"2256:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2246:2:28"},"nodeType":"YulFunctionCall","src":"2246:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2239:6:28"},"nodeType":"YulFunctionCall","src":"2239:42:28"},"nodeType":"YulIf","src":"2236:62:28"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2219:5:28","type":""}],"src":"2184:120:28"},{"body":{"nodeType":"YulBlock","src":"2361:86:28","statements":[{"nodeType":"YulAssignment","src":"2371:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2393:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2380:12:28"},"nodeType":"YulFunctionCall","src":"2380:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2371:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2435:5:28"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"2409:25:28"},"nodeType":"YulFunctionCall","src":"2409:32:28"},"nodeType":"YulExpressionStatement","src":"2409:32:28"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2339:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2347:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2355:5:28","type":""}],"src":"2310:137:28"},{"body":{"nodeType":"YulBlock","src":"2518:262:28","statements":[{"body":{"nodeType":"YulBlock","src":"2564:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2566:77:28"},"nodeType":"YulFunctionCall","src":"2566:79:28"},"nodeType":"YulExpressionStatement","src":"2566:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2539:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2548:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2535:3:28"},"nodeType":"YulFunctionCall","src":"2535:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"2560:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2531:3:28"},"nodeType":"YulFunctionCall","src":"2531:32:28"},"nodeType":"YulIf","src":"2528:119:28"},{"nodeType":"YulBlock","src":"2657:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2672:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2686:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2676:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2701:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2735:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2746:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:28"},"nodeType":"YulFunctionCall","src":"2731:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2755:7:28"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"2711:19:28"},"nodeType":"YulFunctionCall","src":"2711:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2701:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2488:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2499:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2511:6:28","type":""}],"src":"2453:327:28"},{"body":{"nodeType":"YulBlock","src":"2828:48:28","statements":[{"nodeType":"YulAssignment","src":"2838:32:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2863:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2856:6:28"},"nodeType":"YulFunctionCall","src":"2856:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2849:6:28"},"nodeType":"YulFunctionCall","src":"2849:21:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2838:7:28"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2810:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2820:7:28","type":""}],"src":"2786:90:28"},{"body":{"nodeType":"YulBlock","src":"2941:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2958:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2978:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"2963:14:28"},"nodeType":"YulFunctionCall","src":"2963:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2951:6:28"},"nodeType":"YulFunctionCall","src":"2951:34:28"},"nodeType":"YulExpressionStatement","src":"2951:34:28"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2929:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2936:3:28","type":""}],"src":"2882:109:28"},{"body":{"nodeType":"YulBlock","src":"3089:118:28","statements":[{"nodeType":"YulAssignment","src":"3099:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3111:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3122:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3107:3:28"},"nodeType":"YulFunctionCall","src":"3107:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3099:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3173:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3186:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"3197:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3182:3:28"},"nodeType":"YulFunctionCall","src":"3182:17:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3135:37:28"},"nodeType":"YulFunctionCall","src":"3135:65:28"},"nodeType":"YulExpressionStatement","src":"3135:65:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3061:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3073:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3084:4:28","type":""}],"src":"2997:210:28"},{"body":{"nodeType":"YulBlock","src":"3279:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"3325:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3327:77:28"},"nodeType":"YulFunctionCall","src":"3327:79:28"},"nodeType":"YulExpressionStatement","src":"3327:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3300:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3296:3:28"},"nodeType":"YulFunctionCall","src":"3296:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3321:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3292:3:28"},"nodeType":"YulFunctionCall","src":"3292:32:28"},"nodeType":"YulIf","src":"3289:119:28"},{"nodeType":"YulBlock","src":"3418:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3433:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3447:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3437:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3462:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3497:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3508:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3493:3:28"},"nodeType":"YulFunctionCall","src":"3493:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3517:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3472:20:28"},"nodeType":"YulFunctionCall","src":"3472:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3249:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3260:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3272:6:28","type":""}],"src":"3213:329:28"},{"body":{"nodeType":"YulBlock","src":"3613:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3630:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3653:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3635:17:28"},"nodeType":"YulFunctionCall","src":"3635:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3623:6:28"},"nodeType":"YulFunctionCall","src":"3623:37:28"},"nodeType":"YulExpressionStatement","src":"3623:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3601:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3608:3:28","type":""}],"src":"3548:118:28"},{"body":{"nodeType":"YulBlock","src":"3731:40:28","statements":[{"nodeType":"YulAssignment","src":"3742:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3758:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3752:5:28"},"nodeType":"YulFunctionCall","src":"3752:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3742:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3714:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3724:6:28","type":""}],"src":"3672:99:28"},{"body":{"nodeType":"YulBlock","src":"3873:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3890:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"3895:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3883:6:28"},"nodeType":"YulFunctionCall","src":"3883:19:28"},"nodeType":"YulExpressionStatement","src":"3883:19:28"},{"nodeType":"YulAssignment","src":"3911:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3930:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"3935:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3926:3:28"},"nodeType":"YulFunctionCall","src":"3926:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3911:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3845:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"3850:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3861:11:28","type":""}],"src":"3777:169:28"},{"body":{"nodeType":"YulBlock","src":"4014:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4024:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4033:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4028:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4093:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4118:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"4123:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4114:3:28"},"nodeType":"YulFunctionCall","src":"4114:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4137:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"4142:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4133:3:28"},"nodeType":"YulFunctionCall","src":"4133:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4127:5:28"},"nodeType":"YulFunctionCall","src":"4127:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4107:6:28"},"nodeType":"YulFunctionCall","src":"4107:39:28"},"nodeType":"YulExpressionStatement","src":"4107:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4054:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"4057:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4051:2:28"},"nodeType":"YulFunctionCall","src":"4051:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4065:19:28","statements":[{"nodeType":"YulAssignment","src":"4067:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4076:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"4079:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4072:3:28"},"nodeType":"YulFunctionCall","src":"4072:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4067:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"4047:3:28","statements":[]},"src":"4043:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4176:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"4181:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4172:3:28"},"nodeType":"YulFunctionCall","src":"4172:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"4190:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4165:6:28"},"nodeType":"YulFunctionCall","src":"4165:27:28"},"nodeType":"YulExpressionStatement","src":"4165:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"3996:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4001:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"4006:6:28","type":""}],"src":"3952:246:28"},{"body":{"nodeType":"YulBlock","src":"4252:54:28","statements":[{"nodeType":"YulAssignment","src":"4262:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4280:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4287:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4276:3:28"},"nodeType":"YulFunctionCall","src":"4276:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4296:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4292:3:28"},"nodeType":"YulFunctionCall","src":"4292:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4272:3:28"},"nodeType":"YulFunctionCall","src":"4272:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"4262:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4235:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"4245:6:28","type":""}],"src":"4204:102:28"},{"body":{"nodeType":"YulBlock","src":"4404:285:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4414:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4461:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4428:32:28"},"nodeType":"YulFunctionCall","src":"4428:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4418:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4476:78:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4542:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"4547:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"4483:58:28"},"nodeType":"YulFunctionCall","src":"4483:71:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4476:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4602:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"4609:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4598:3:28"},"nodeType":"YulFunctionCall","src":"4598:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"4616:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"4621:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"4563:34:28"},"nodeType":"YulFunctionCall","src":"4563:65:28"},"nodeType":"YulExpressionStatement","src":"4563:65:28"},{"nodeType":"YulAssignment","src":"4637:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4648:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4675:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4653:21:28"},"nodeType":"YulFunctionCall","src":"4653:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4644:3:28"},"nodeType":"YulFunctionCall","src":"4644:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4637:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4385:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4392:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4400:3:28","type":""}],"src":"4312:377:28"},{"body":{"nodeType":"YulBlock","src":"4919:519:28","statements":[{"nodeType":"YulAssignment","src":"4929:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4941:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4952:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4937:3:28"},"nodeType":"YulFunctionCall","src":"4937:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4929:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5010:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5023:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5034:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5019:3:28"},"nodeType":"YulFunctionCall","src":"5019:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4966:43:28"},"nodeType":"YulFunctionCall","src":"4966:71:28"},"nodeType":"YulExpressionStatement","src":"4966:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"5091:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5104:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5115:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:28"},"nodeType":"YulFunctionCall","src":"5100:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5047:43:28"},"nodeType":"YulFunctionCall","src":"5047:72:28"},"nodeType":"YulExpressionStatement","src":"5047:72:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5140:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5151:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5136:3:28"},"nodeType":"YulFunctionCall","src":"5136:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5160:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5166:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5156:3:28"},"nodeType":"YulFunctionCall","src":"5156:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5129:6:28"},"nodeType":"YulFunctionCall","src":"5129:48:28"},"nodeType":"YulExpressionStatement","src":"5129:48:28"},{"nodeType":"YulAssignment","src":"5186:86:28","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5258:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"5267:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5194:63:28"},"nodeType":"YulFunctionCall","src":"5194:78:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5186:4:28"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"5326:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5339:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5350:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5335:3:28"},"nodeType":"YulFunctionCall","src":"5335:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"5282:43:28"},"nodeType":"YulFunctionCall","src":"5282:72:28"},"nodeType":"YulExpressionStatement","src":"5282:72:28"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5402:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5415:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5426:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5411:3:28"},"nodeType":"YulFunctionCall","src":"5411:19:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"5364:37:28"},"nodeType":"YulFunctionCall","src":"5364:67:28"},"nodeType":"YulExpressionStatement","src":"5364:67:28"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4859:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4871:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4879:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4887:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4895:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4903:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4914:4:28","type":""}],"src":"4695:743:28"},{"body":{"nodeType":"YulBlock","src":"5562:195:28","statements":[{"nodeType":"YulAssignment","src":"5572:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5584:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5595:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5580:3:28"},"nodeType":"YulFunctionCall","src":"5580:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5572:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5619:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5630:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5615:3:28"},"nodeType":"YulFunctionCall","src":"5615:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5638:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5644:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5634:3:28"},"nodeType":"YulFunctionCall","src":"5634:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5608:6:28"},"nodeType":"YulFunctionCall","src":"5608:47:28"},"nodeType":"YulExpressionStatement","src":"5608:47:28"},{"nodeType":"YulAssignment","src":"5664:86:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5736:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"5745:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"5672:63:28"},"nodeType":"YulFunctionCall","src":"5672:78:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5664:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5534:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5546:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5557:4:28","type":""}],"src":"5444:313:28"},{"body":{"nodeType":"YulBlock","src":"5852:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5869:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5872:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5862:6:28"},"nodeType":"YulFunctionCall","src":"5862:12:28"},"nodeType":"YulExpressionStatement","src":"5862:12:28"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"5763:117:28"},{"body":{"nodeType":"YulBlock","src":"5914:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5931:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5934:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5924:6:28"},"nodeType":"YulFunctionCall","src":"5924:88:28"},"nodeType":"YulExpressionStatement","src":"5924:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6028:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6031:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6021:6:28"},"nodeType":"YulFunctionCall","src":"6021:15:28"},"nodeType":"YulExpressionStatement","src":"6021:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6052:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6055:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6045:6:28"},"nodeType":"YulFunctionCall","src":"6045:15:28"},"nodeType":"YulExpressionStatement","src":"6045:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"5886:180:28"},{"body":{"nodeType":"YulBlock","src":"6115:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6125:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6147:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6177:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"6155:21:28"},"nodeType":"YulFunctionCall","src":"6155:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6143:3:28"},"nodeType":"YulFunctionCall","src":"6143:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"6129:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"6294:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6296:16:28"},"nodeType":"YulFunctionCall","src":"6296:18:28"},"nodeType":"YulExpressionStatement","src":"6296:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6237:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"6249:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6234:2:28"},"nodeType":"YulFunctionCall","src":"6234:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6273:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"6285:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6270:2:28"},"nodeType":"YulFunctionCall","src":"6270:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6231:2:28"},"nodeType":"YulFunctionCall","src":"6231:62:28"},"nodeType":"YulIf","src":"6228:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6332:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"6336:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6325:6:28"},"nodeType":"YulFunctionCall","src":"6325:22:28"},"nodeType":"YulExpressionStatement","src":"6325:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6101:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"6109:4:28","type":""}],"src":"6072:281:28"},{"body":{"nodeType":"YulBlock","src":"6400:88:28","statements":[{"nodeType":"YulAssignment","src":"6410:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"6420:18:28"},"nodeType":"YulFunctionCall","src":"6420:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6410:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6469:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"6477:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"6449:19:28"},"nodeType":"YulFunctionCall","src":"6449:33:28"},"nodeType":"YulExpressionStatement","src":"6449:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"6384:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"6393:6:28","type":""}],"src":"6359:129:28"},{"body":{"nodeType":"YulBlock","src":"6576:229:28","statements":[{"body":{"nodeType":"YulBlock","src":"6681:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"6683:16:28"},"nodeType":"YulFunctionCall","src":"6683:18:28"},"nodeType":"YulExpressionStatement","src":"6683:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6653:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6661:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6650:2:28"},"nodeType":"YulFunctionCall","src":"6650:30:28"},"nodeType":"YulIf","src":"6647:56:28"},{"nodeType":"YulAssignment","src":"6713:25:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6725:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"6733:4:28","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6721:3:28"},"nodeType":"YulFunctionCall","src":"6721:17:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6713:4:28"}]},{"nodeType":"YulAssignment","src":"6775:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"6787:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"6793:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6783:3:28"},"nodeType":"YulFunctionCall","src":"6783:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"6775:4:28"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"6560:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"6571:4:28","type":""}],"src":"6494:311:28"},{"body":{"nodeType":"YulBlock","src":"6900:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6917:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6920:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6910:6:28"},"nodeType":"YulFunctionCall","src":"6910:12:28"},"nodeType":"YulExpressionStatement","src":"6910:12:28"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"6811:117:28"},{"body":{"nodeType":"YulBlock","src":"7053:608:28","statements":[{"nodeType":"YulAssignment","src":"7063:90:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7145:6:28"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7088:56:28"},"nodeType":"YulFunctionCall","src":"7088:64:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"7072:15:28"},"nodeType":"YulFunctionCall","src":"7072:81:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7063:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"7162:16:28","value":{"name":"array","nodeType":"YulIdentifier","src":"7173:5:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"7166:3:28","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7195:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"7202:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7188:6:28"},"nodeType":"YulFunctionCall","src":"7188:21:28"},"nodeType":"YulExpressionStatement","src":"7188:21:28"},{"nodeType":"YulAssignment","src":"7218:23:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"7229:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"7236:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7225:3:28"},"nodeType":"YulFunctionCall","src":"7225:16:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7218:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"7251:44:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7269:6:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7281:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7289:4:28","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7277:3:28"},"nodeType":"YulFunctionCall","src":"7277:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7265:3:28"},"nodeType":"YulFunctionCall","src":"7265:30:28"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"7255:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7323:103:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"7337:77:28"},"nodeType":"YulFunctionCall","src":"7337:79:28"},"nodeType":"YulExpressionStatement","src":"7337:79:28"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"7310:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"7318:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7307:2:28"},"nodeType":"YulFunctionCall","src":"7307:15:28"},"nodeType":"YulIf","src":"7304:122:28"},{"body":{"nodeType":"YulBlock","src":"7511:144:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7526:21:28","value":{"name":"src","nodeType":"YulIdentifier","src":"7544:3:28"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"7530:10:28","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7568:3:28"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"7594:10:28"},{"name":"end","nodeType":"YulIdentifier","src":"7606:3:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7573:20:28"},"nodeType":"YulFunctionCall","src":"7573:37:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7561:6:28"},"nodeType":"YulFunctionCall","src":"7561:50:28"},"nodeType":"YulExpressionStatement","src":"7561:50:28"},{"nodeType":"YulAssignment","src":"7624:21:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"7635:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7640:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7631:3:28"},"nodeType":"YulFunctionCall","src":"7631:14:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"7624:3:28"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7464:3:28"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"7469:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7461:2:28"},"nodeType":"YulFunctionCall","src":"7461:15:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"7477:25:28","statements":[{"nodeType":"YulAssignment","src":"7479:21:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"7490:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"7495:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7486:3:28"},"nodeType":"YulFunctionCall","src":"7486:14:28"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"7479:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"7439:21:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7441:17:28","value":{"name":"offset","nodeType":"YulIdentifier","src":"7452:6:28"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"7445:3:28","type":""}]}]},"src":"7435:220:28"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7023:6:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"7031:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"7039:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7047:5:28","type":""}],"src":"6951:710:28"},{"body":{"nodeType":"YulBlock","src":"7761:293:28","statements":[{"body":{"nodeType":"YulBlock","src":"7810:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"7812:77:28"},"nodeType":"YulFunctionCall","src":"7812:79:28"},"nodeType":"YulExpressionStatement","src":"7812:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7789:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7797:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7785:3:28"},"nodeType":"YulFunctionCall","src":"7785:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"7804:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7781:3:28"},"nodeType":"YulFunctionCall","src":"7781:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7774:6:28"},"nodeType":"YulFunctionCall","src":"7774:35:28"},"nodeType":"YulIf","src":"7771:122:28"},{"nodeType":"YulVariableDeclaration","src":"7902:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7929:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7916:12:28"},"nodeType":"YulFunctionCall","src":"7916:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"7906:6:28","type":""}]},{"nodeType":"YulAssignment","src":"7945:103:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8021:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8029:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8017:3:28"},"nodeType":"YulFunctionCall","src":"8017:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"8036:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"8044:3:28"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"7954:62:28"},"nodeType":"YulFunctionCall","src":"7954:94:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"7945:5:28"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"7739:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"7747:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"7755:5:28","type":""}],"src":"7684:370:28"},{"body":{"nodeType":"YulBlock","src":"8149:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8166:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8169:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8159:6:28"},"nodeType":"YulFunctionCall","src":"8159:12:28"},"nodeType":"YulExpressionStatement","src":"8159:12:28"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"8060:117:28"},{"body":{"nodeType":"YulBlock","src":"8249:241:28","statements":[{"body":{"nodeType":"YulBlock","src":"8354:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8356:16:28"},"nodeType":"YulFunctionCall","src":"8356:18:28"},"nodeType":"YulExpressionStatement","src":"8356:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8326:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8334:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8323:2:28"},"nodeType":"YulFunctionCall","src":"8323:30:28"},"nodeType":"YulIf","src":"8320:56:28"},{"nodeType":"YulAssignment","src":"8386:37:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8416:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8394:21:28"},"nodeType":"YulFunctionCall","src":"8394:29:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8386:4:28"}]},{"nodeType":"YulAssignment","src":"8460:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8472:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"8478:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8468:3:28"},"nodeType":"YulFunctionCall","src":"8468:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8460:4:28"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8233:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8244:4:28","type":""}],"src":"8183:307:28"},{"body":{"nodeType":"YulBlock","src":"8560:82:28","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8583:3:28"},{"name":"src","nodeType":"YulIdentifier","src":"8588:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8593:6:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8570:12:28"},"nodeType":"YulFunctionCall","src":"8570:30:28"},"nodeType":"YulExpressionStatement","src":"8570:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8620:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8625:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8616:3:28"},"nodeType":"YulFunctionCall","src":"8616:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"8634:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8609:6:28"},"nodeType":"YulFunctionCall","src":"8609:27:28"},"nodeType":"YulExpressionStatement","src":"8609:27:28"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8542:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8547:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"8552:6:28","type":""}],"src":"8496:146:28"},{"body":{"nodeType":"YulBlock","src":"8731:340:28","statements":[{"nodeType":"YulAssignment","src":"8741:74:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8807:6:28"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8766:40:28"},"nodeType":"YulFunctionCall","src":"8766:48:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8750:15:28"},"nodeType":"YulFunctionCall","src":"8750:65:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8741:5:28"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8831:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"8838:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8824:6:28"},"nodeType":"YulFunctionCall","src":"8824:21:28"},"nodeType":"YulExpressionStatement","src":"8824:21:28"},{"nodeType":"YulVariableDeclaration","src":"8854:27:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8869:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8876:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8865:3:28"},"nodeType":"YulFunctionCall","src":"8865:16:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8858:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8919:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8921:77:28"},"nodeType":"YulFunctionCall","src":"8921:79:28"},"nodeType":"YulExpressionStatement","src":"8921:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8900:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8905:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8896:3:28"},"nodeType":"YulFunctionCall","src":"8896:16:28"},{"name":"end","nodeType":"YulIdentifier","src":"8914:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8893:2:28"},"nodeType":"YulFunctionCall","src":"8893:25:28"},"nodeType":"YulIf","src":"8890:112:28"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"9048:3:28"},{"name":"dst","nodeType":"YulIdentifier","src":"9053:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"9058:6:28"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"9011:36:28"},"nodeType":"YulFunctionCall","src":"9011:54:28"},"nodeType":"YulExpressionStatement","src":"9011:54:28"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8704:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"8709:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"8717:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8725:5:28","type":""}],"src":"8648:423:28"},{"body":{"nodeType":"YulBlock","src":"9151:277:28","statements":[{"body":{"nodeType":"YulBlock","src":"9200:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9202:77:28"},"nodeType":"YulFunctionCall","src":"9202:79:28"},"nodeType":"YulExpressionStatement","src":"9202:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9179:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9187:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9175:3:28"},"nodeType":"YulFunctionCall","src":"9175:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"9194:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9171:3:28"},"nodeType":"YulFunctionCall","src":"9171:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9164:6:28"},"nodeType":"YulFunctionCall","src":"9164:35:28"},"nodeType":"YulIf","src":"9161:122:28"},{"nodeType":"YulVariableDeclaration","src":"9292:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9319:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9306:12:28"},"nodeType":"YulFunctionCall","src":"9306:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9296:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9335:87:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9395:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9403:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9391:3:28"},"nodeType":"YulFunctionCall","src":"9391:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"9410:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"9418:3:28"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9344:46:28"},"nodeType":"YulFunctionCall","src":"9344:78:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9335:5:28"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9129:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"9137:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9145:5:28","type":""}],"src":"9090:338:28"},{"body":{"nodeType":"YulBlock","src":"9627:1316:28","statements":[{"body":{"nodeType":"YulBlock","src":"9674:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9676:77:28"},"nodeType":"YulFunctionCall","src":"9676:79:28"},"nodeType":"YulExpressionStatement","src":"9676:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9648:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9657:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9644:3:28"},"nodeType":"YulFunctionCall","src":"9644:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9669:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9640:3:28"},"nodeType":"YulFunctionCall","src":"9640:33:28"},"nodeType":"YulIf","src":"9637:120:28"},{"nodeType":"YulBlock","src":"9767:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9782:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9796:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9786:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9811:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9846:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9857:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:28"},"nodeType":"YulFunctionCall","src":"9842:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9866:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9821:20:28"},"nodeType":"YulFunctionCall","src":"9821:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9811:6:28"}]}]},{"nodeType":"YulBlock","src":"9894:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9909:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9923:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9913:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9939:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9974:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9985:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9970:3:28"},"nodeType":"YulFunctionCall","src":"9970:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9994:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9949:20:28"},"nodeType":"YulFunctionCall","src":"9949:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9939:6:28"}]}]},{"nodeType":"YulBlock","src":"10022:303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10037:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10068:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10079:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10064:3:28"},"nodeType":"YulFunctionCall","src":"10064:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10051:12:28"},"nodeType":"YulFunctionCall","src":"10051:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10041:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10130:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10132:77:28"},"nodeType":"YulFunctionCall","src":"10132:79:28"},"nodeType":"YulExpressionStatement","src":"10132:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10102:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10110:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10099:2:28"},"nodeType":"YulFunctionCall","src":"10099:30:28"},"nodeType":"YulIf","src":"10096:117:28"},{"nodeType":"YulAssignment","src":"10227:88:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10287:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10298:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10283:3:28"},"nodeType":"YulFunctionCall","src":"10283:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10307:7:28"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10237:45:28"},"nodeType":"YulFunctionCall","src":"10237:78:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"10227:6:28"}]}]},{"nodeType":"YulBlock","src":"10335:303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10350:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10381:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10392:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10377:3:28"},"nodeType":"YulFunctionCall","src":"10377:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10364:12:28"},"nodeType":"YulFunctionCall","src":"10364:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10354:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10443:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10445:77:28"},"nodeType":"YulFunctionCall","src":"10445:79:28"},"nodeType":"YulExpressionStatement","src":"10445:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10415:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10423:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10412:2:28"},"nodeType":"YulFunctionCall","src":"10412:30:28"},"nodeType":"YulIf","src":"10409:117:28"},{"nodeType":"YulAssignment","src":"10540:88:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10600:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10611:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10596:3:28"},"nodeType":"YulFunctionCall","src":"10596:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10620:7:28"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10550:45:28"},"nodeType":"YulFunctionCall","src":"10550:78:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"10540:6:28"}]}]},{"nodeType":"YulBlock","src":"10648:288:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10663:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10694:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"10705:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10690:3:28"},"nodeType":"YulFunctionCall","src":"10690:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"10677:12:28"},"nodeType":"YulFunctionCall","src":"10677:33:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10667:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10757:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"10759:77:28"},"nodeType":"YulFunctionCall","src":"10759:79:28"},"nodeType":"YulExpressionStatement","src":"10759:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"10729:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10737:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"10726:2:28"},"nodeType":"YulFunctionCall","src":"10726:30:28"},"nodeType":"YulIf","src":"10723:117:28"},{"nodeType":"YulAssignment","src":"10854:72:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10898:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10909:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10894:3:28"},"nodeType":"YulFunctionCall","src":"10894:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10918:7:28"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"10864:29:28"},"nodeType":"YulFunctionCall","src":"10864:62:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"10854:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9565:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9576:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9588:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9596:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9604:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9612:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"9620:6:28","type":""}],"src":"9434:1509:28"},{"body":{"nodeType":"YulBlock","src":"11031:229:28","statements":[{"body":{"nodeType":"YulBlock","src":"11136:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"11138:16:28"},"nodeType":"YulFunctionCall","src":"11138:18:28"},"nodeType":"YulExpressionStatement","src":"11138:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11108:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11116:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11105:2:28"},"nodeType":"YulFunctionCall","src":"11105:30:28"},"nodeType":"YulIf","src":"11102:56:28"},{"nodeType":"YulAssignment","src":"11168:25:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11180:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11188:4:28","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11176:3:28"},"nodeType":"YulFunctionCall","src":"11176:17:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11168:4:28"}]},{"nodeType":"YulAssignment","src":"11230:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"11242:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"11248:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11238:3:28"},"nodeType":"YulFunctionCall","src":"11238:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"11230:4:28"}]}]},"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"11015:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"11026:4:28","type":""}],"src":"10949:311:28"},{"body":{"nodeType":"YulBlock","src":"11385:608:28","statements":[{"nodeType":"YulAssignment","src":"11395:90:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11477:6:28"}],"functionName":{"name":"array_allocation_size_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11420:56:28"},"nodeType":"YulFunctionCall","src":"11420:64:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"11404:15:28"},"nodeType":"YulFunctionCall","src":"11404:81:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"11395:5:28"}]},{"nodeType":"YulVariableDeclaration","src":"11494:16:28","value":{"name":"array","nodeType":"YulIdentifier","src":"11505:5:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"11498:3:28","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11527:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"11534:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11520:6:28"},"nodeType":"YulFunctionCall","src":"11520:21:28"},"nodeType":"YulExpressionStatement","src":"11520:21:28"},{"nodeType":"YulAssignment","src":"11550:23:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"11561:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"11568:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11557:3:28"},"nodeType":"YulFunctionCall","src":"11557:16:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11550:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"11583:44:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"11601:6:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11613:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11621:4:28","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11609:3:28"},"nodeType":"YulFunctionCall","src":"11609:17:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11597:3:28"},"nodeType":"YulFunctionCall","src":"11597:30:28"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"11587:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"11655:103:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"11669:77:28"},"nodeType":"YulFunctionCall","src":"11669:79:28"},"nodeType":"YulExpressionStatement","src":"11669:79:28"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"11642:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"11650:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11639:2:28"},"nodeType":"YulFunctionCall","src":"11639:15:28"},"nodeType":"YulIf","src":"11636:122:28"},{"body":{"nodeType":"YulBlock","src":"11843:144:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11858:21:28","value":{"name":"src","nodeType":"YulIdentifier","src":"11876:3:28"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"11862:10:28","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11900:3:28"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"11926:10:28"},{"name":"end","nodeType":"YulIdentifier","src":"11938:3:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"11905:20:28"},"nodeType":"YulFunctionCall","src":"11905:37:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11893:6:28"},"nodeType":"YulFunctionCall","src":"11893:50:28"},"nodeType":"YulExpressionStatement","src":"11893:50:28"},{"nodeType":"YulAssignment","src":"11956:21:28","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11967:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"11972:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11963:3:28"},"nodeType":"YulFunctionCall","src":"11963:14:28"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"11956:3:28"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11796:3:28"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"11801:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11793:2:28"},"nodeType":"YulFunctionCall","src":"11793:15:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11809:25:28","statements":[{"nodeType":"YulAssignment","src":"11811:21:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11822:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"11827:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11818:3:28"},"nodeType":"YulFunctionCall","src":"11818:14:28"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"11811:3:28"}]}]},"pre":{"nodeType":"YulBlock","src":"11771:21:28","statements":[{"nodeType":"YulVariableDeclaration","src":"11773:17:28","value":{"name":"offset","nodeType":"YulIdentifier","src":"11784:6:28"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"11777:3:28","type":""}]}]},"src":"11767:220:28"}]},"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"11355:6:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"11363:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"11371:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"11379:5:28","type":""}],"src":"11283:710:28"},{"body":{"nodeType":"YulBlock","src":"12093:293:28","statements":[{"body":{"nodeType":"YulBlock","src":"12142:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"12144:77:28"},"nodeType":"YulFunctionCall","src":"12144:79:28"},"nodeType":"YulExpressionStatement","src":"12144:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12121:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"12129:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12117:3:28"},"nodeType":"YulFunctionCall","src":"12117:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"12136:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12113:3:28"},"nodeType":"YulFunctionCall","src":"12113:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"12106:6:28"},"nodeType":"YulFunctionCall","src":"12106:35:28"},"nodeType":"YulIf","src":"12103:122:28"},{"nodeType":"YulVariableDeclaration","src":"12234:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12261:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12248:12:28"},"nodeType":"YulFunctionCall","src":"12248:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12238:6:28","type":""}]},{"nodeType":"YulAssignment","src":"12277:103:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12353:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"12361:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12349:3:28"},"nodeType":"YulFunctionCall","src":"12349:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"12368:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"12376:3:28"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12286:62:28"},"nodeType":"YulFunctionCall","src":"12286:94:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"12277:5:28"}]}]},"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"12071:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"12079:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"12087:5:28","type":""}],"src":"12016:370:28"},{"body":{"nodeType":"YulBlock","src":"12525:761:28","statements":[{"body":{"nodeType":"YulBlock","src":"12571:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12573:77:28"},"nodeType":"YulFunctionCall","src":"12573:79:28"},"nodeType":"YulExpressionStatement","src":"12573:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12546:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"12555:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12542:3:28"},"nodeType":"YulFunctionCall","src":"12542:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"12567:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12538:3:28"},"nodeType":"YulFunctionCall","src":"12538:32:28"},"nodeType":"YulIf","src":"12535:119:28"},{"nodeType":"YulBlock","src":"12664:302:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12679:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12710:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12721:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12706:3:28"},"nodeType":"YulFunctionCall","src":"12706:17:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"12693:12:28"},"nodeType":"YulFunctionCall","src":"12693:31:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12683:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"12771:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"12773:77:28"},"nodeType":"YulFunctionCall","src":"12773:79:28"},"nodeType":"YulExpressionStatement","src":"12773:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"12743:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"12751:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12740:2:28"},"nodeType":"YulFunctionCall","src":"12740:30:28"},"nodeType":"YulIf","src":"12737:117:28"},{"nodeType":"YulAssignment","src":"12868:88:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12928:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"12939:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12924:3:28"},"nodeType":"YulFunctionCall","src":"12924:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12948:7:28"}],"functionName":{"name":"abi_decode_t_array$_t_address_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"12878:45:28"},"nodeType":"YulFunctionCall","src":"12878:78:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12868:6:28"}]}]},{"nodeType":"YulBlock","src":"12976:303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"12991:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13022:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"13033:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13018:3:28"},"nodeType":"YulFunctionCall","src":"13018:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"13005:12:28"},"nodeType":"YulFunctionCall","src":"13005:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12995:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"13084:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"13086:77:28"},"nodeType":"YulFunctionCall","src":"13086:79:28"},"nodeType":"YulExpressionStatement","src":"13086:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"13056:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"13064:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"13053:2:28"},"nodeType":"YulFunctionCall","src":"13053:30:28"},"nodeType":"YulIf","src":"13050:117:28"},{"nodeType":"YulAssignment","src":"13181:88:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13241:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"13252:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13237:3:28"},"nodeType":"YulFunctionCall","src":"13237:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"13261:7:28"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"13191:45:28"},"nodeType":"YulFunctionCall","src":"13191:78:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"13181:6:28"}]}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12487:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12498:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12510:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12518:6:28","type":""}],"src":"12392:894:28"},{"body":{"nodeType":"YulBlock","src":"13366:40:28","statements":[{"nodeType":"YulAssignment","src":"13377:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13393:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13387:5:28"},"nodeType":"YulFunctionCall","src":"13387:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13377:6:28"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13349:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13359:6:28","type":""}],"src":"13292:114:28"},{"body":{"nodeType":"YulBlock","src":"13523:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13540:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"13545:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13533:6:28"},"nodeType":"YulFunctionCall","src":"13533:19:28"},"nodeType":"YulExpressionStatement","src":"13533:19:28"},{"nodeType":"YulAssignment","src":"13561:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13580:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"13585:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13576:3:28"},"nodeType":"YulFunctionCall","src":"13576:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13561:11:28"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13495:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"13500:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13511:11:28","type":""}],"src":"13412:184:28"},{"body":{"nodeType":"YulBlock","src":"13674:60:28","statements":[{"nodeType":"YulAssignment","src":"13684:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13692:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13684:4:28"}]},{"nodeType":"YulAssignment","src":"13705:22:28","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13717:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"13722:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13713:3:28"},"nodeType":"YulFunctionCall","src":"13713:14:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13705:4:28"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13661:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13669:4:28","type":""}],"src":"13602:132:28"},{"body":{"nodeType":"YulBlock","src":"13795:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13812:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13835:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"13817:17:28"},"nodeType":"YulFunctionCall","src":"13817:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13805:6:28"},"nodeType":"YulFunctionCall","src":"13805:37:28"},"nodeType":"YulExpressionStatement","src":"13805:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13783:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13790:3:28","type":""}],"src":"13740:108:28"},{"body":{"nodeType":"YulBlock","src":"13934:99:28","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13978:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"13986:3:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13944:33:28"},"nodeType":"YulFunctionCall","src":"13944:46:28"},"nodeType":"YulExpressionStatement","src":"13944:46:28"},{"nodeType":"YulAssignment","src":"13999:28:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14017:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"14022:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14013:3:28"},"nodeType":"YulFunctionCall","src":"14013:14:28"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"13999:10:28"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"13907:6:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13915:3:28","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"13923:10:28","type":""}],"src":"13854:179:28"},{"body":{"nodeType":"YulBlock","src":"14114:38:28","statements":[{"nodeType":"YulAssignment","src":"14124:22:28","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14136:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"14141:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14132:3:28"},"nodeType":"YulFunctionCall","src":"14132:14:28"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14124:4:28"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14101:3:28","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14109:4:28","type":""}],"src":"14039:113:28"},{"body":{"nodeType":"YulBlock","src":"14312:608:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14322:68:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14384:5:28"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14336:47:28"},"nodeType":"YulFunctionCall","src":"14336:54:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14326:6:28","type":""}]},{"nodeType":"YulAssignment","src":"14399:93:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14480:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"14485:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14406:73:28"},"nodeType":"YulFunctionCall","src":"14406:86:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14399:3:28"}]},{"nodeType":"YulVariableDeclaration","src":"14501:71:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14566:5:28"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14516:49:28"},"nodeType":"YulFunctionCall","src":"14516:56:28"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"14505:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"14581:21:28","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"14595:7:28"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"14585:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"14671:224:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14685:34:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14712:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14706:5:28"},"nodeType":"YulFunctionCall","src":"14706:13:28"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"14689:13:28","type":""}]},{"nodeType":"YulAssignment","src":"14732:70:28","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"14783:13:28"},{"name":"pos","nodeType":"YulIdentifier","src":"14798:3:28"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14739:43:28"},"nodeType":"YulFunctionCall","src":"14739:63:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14732:3:28"}]},{"nodeType":"YulAssignment","src":"14815:70:28","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14878:6:28"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14825:52:28"},"nodeType":"YulFunctionCall","src":"14825:60:28"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"14815:6:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14633:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"14636:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"14630:2:28"},"nodeType":"YulFunctionCall","src":"14630:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"14644:18:28","statements":[{"nodeType":"YulAssignment","src":"14646:14:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"14655:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"14658:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14651:3:28"},"nodeType":"YulFunctionCall","src":"14651:9:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"14646:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"14615:14:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14617:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"14626:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"14621:1:28","type":""}]}]},"src":"14611:284:28"},{"nodeType":"YulAssignment","src":"14904:10:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"14911:3:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14904:3:28"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14291:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14298:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14307:3:28","type":""}],"src":"14188:732:28"},{"body":{"nodeType":"YulBlock","src":"15074:225:28","statements":[{"nodeType":"YulAssignment","src":"15084:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15096:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15107:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15092:3:28"},"nodeType":"YulFunctionCall","src":"15092:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15084:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15131:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15142:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15127:3:28"},"nodeType":"YulFunctionCall","src":"15127:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15150:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"15156:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15146:3:28"},"nodeType":"YulFunctionCall","src":"15146:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15120:6:28"},"nodeType":"YulFunctionCall","src":"15120:47:28"},"nodeType":"YulExpressionStatement","src":"15120:47:28"},{"nodeType":"YulAssignment","src":"15176:116:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15278:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"15287:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15184:93:28"},"nodeType":"YulFunctionCall","src":"15184:108:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15176:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15046:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15058:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15069:4:28","type":""}],"src":"14926:373:28"},{"body":{"nodeType":"YulBlock","src":"15360:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15377:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15400:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"15382:17:28"},"nodeType":"YulFunctionCall","src":"15382:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15370:6:28"},"nodeType":"YulFunctionCall","src":"15370:37:28"},"nodeType":"YulExpressionStatement","src":"15370:37:28"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15348:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15355:3:28","type":""}],"src":"15305:108:28"},{"body":{"nodeType":"YulBlock","src":"15505:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15522:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"15527:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15515:6:28"},"nodeType":"YulFunctionCall","src":"15515:19:28"},"nodeType":"YulExpressionStatement","src":"15515:19:28"},{"nodeType":"YulAssignment","src":"15543:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15562:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"15567:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15558:3:28"},"nodeType":"YulFunctionCall","src":"15558:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"15543:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15477:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"15482:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"15493:11:28","type":""}],"src":"15419:159:28"},{"body":{"nodeType":"YulBlock","src":"15666:275:28","statements":[{"nodeType":"YulVariableDeclaration","src":"15676:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15723:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15690:32:28"},"nodeType":"YulFunctionCall","src":"15690:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15680:6:28","type":""}]},{"nodeType":"YulAssignment","src":"15738:68:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15794:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"15799:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"15745:48:28"},"nodeType":"YulFunctionCall","src":"15745:61:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15738:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15854:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"15861:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15850:3:28"},"nodeType":"YulFunctionCall","src":"15850:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"15868:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"15873:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"15815:34:28"},"nodeType":"YulFunctionCall","src":"15815:65:28"},"nodeType":"YulExpressionStatement","src":"15815:65:28"},{"nodeType":"YulAssignment","src":"15889:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15900:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15927:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"15905:21:28"},"nodeType":"YulFunctionCall","src":"15905:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15896:3:28"},"nodeType":"YulFunctionCall","src":"15896:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15889:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15647:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15654:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15662:3:28","type":""}],"src":"15584:357:28"},{"body":{"nodeType":"YulBlock","src":"15996:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16013:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16033:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"16018:14:28"},"nodeType":"YulFunctionCall","src":"16018:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16006:6:28"},"nodeType":"YulFunctionCall","src":"16006:34:28"},"nodeType":"YulExpressionStatement","src":"16006:34:28"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15984:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15991:3:28","type":""}],"src":"15947:99:28"},{"body":{"nodeType":"YulBlock","src":"16250:1014:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16260:26:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16276:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16281:4:28","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16272:3:28"},"nodeType":"YulFunctionCall","src":"16272:14:28"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"16264:4:28","type":""}]},{"nodeType":"YulBlock","src":"16296:167:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16334:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16364:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"16371:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16360:3:28"},"nodeType":"YulFunctionCall","src":"16360:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16354:5:28"},"nodeType":"YulFunctionCall","src":"16354:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16338:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16424:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16442:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16447:4:28","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16438:3:28"},"nodeType":"YulFunctionCall","src":"16438:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16390:33:28"},"nodeType":"YulFunctionCall","src":"16390:63:28"},"nodeType":"YulExpressionStatement","src":"16390:63:28"}]},{"nodeType":"YulBlock","src":"16473:169:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16513:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16543:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"16550:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16539:3:28"},"nodeType":"YulFunctionCall","src":"16539:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16533:5:28"},"nodeType":"YulFunctionCall","src":"16533:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16517:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16603:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16621:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16626:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16617:3:28"},"nodeType":"YulFunctionCall","src":"16617:14:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"16569:33:28"},"nodeType":"YulFunctionCall","src":"16569:63:28"},"nodeType":"YulExpressionStatement","src":"16569:63:28"}]},{"nodeType":"YulBlock","src":"16652:234:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16686:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16716:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"16723:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16712:3:28"},"nodeType":"YulFunctionCall","src":"16712:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16706:5:28"},"nodeType":"YulFunctionCall","src":"16706:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16690:12:28","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16754:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"16759:4:28","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16750:3:28"},"nodeType":"YulFunctionCall","src":"16750:14:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16770:4:28"},{"name":"pos","nodeType":"YulIdentifier","src":"16776:3:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16766:3:28"},"nodeType":"YulFunctionCall","src":"16766:14:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16743:6:28"},"nodeType":"YulFunctionCall","src":"16743:38:28"},"nodeType":"YulExpressionStatement","src":"16743:38:28"},{"nodeType":"YulAssignment","src":"16794:81:28","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16856:12:28"},{"name":"tail","nodeType":"YulIdentifier","src":"16870:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16802:53:28"},"nodeType":"YulFunctionCall","src":"16802:73:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16794:4:28"}]}]},{"nodeType":"YulBlock","src":"16896:171:28","statements":[{"nodeType":"YulVariableDeclaration","src":"16938:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16968:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"16975:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16964:3:28"},"nodeType":"YulFunctionCall","src":"16964:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16958:5:28"},"nodeType":"YulFunctionCall","src":"16958:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16942:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17028:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17046:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"17051:4:28","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17042:3:28"},"nodeType":"YulFunctionCall","src":"17042:14:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"16994:33:28"},"nodeType":"YulFunctionCall","src":"16994:63:28"},"nodeType":"YulExpressionStatement","src":"16994:63:28"}]},{"nodeType":"YulBlock","src":"17077:160:28","statements":[{"nodeType":"YulVariableDeclaration","src":"17114:43:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17144:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"17151:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17140:3:28"},"nodeType":"YulFunctionCall","src":"17140:16:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17134:5:28"},"nodeType":"YulFunctionCall","src":"17134:23:28"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17118:12:28","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"17198:12:28"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17216:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"17221:4:28","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17212:3:28"},"nodeType":"YulFunctionCall","src":"17212:14:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"17170:27:28"},"nodeType":"YulFunctionCall","src":"17170:57:28"},"nodeType":"YulExpressionStatement","src":"17170:57:28"}]},{"nodeType":"YulAssignment","src":"17247:11:28","value":{"name":"tail","nodeType":"YulIdentifier","src":"17254:4:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17247:3:28"}]}]},"name":"abi_encode_t_struct$_Event_$9008_memory_ptr_to_t_struct$_Event_$9008_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16229:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16236:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16245:3:28","type":""}],"src":"16130:1134:28"},{"body":{"nodeType":"YulBlock","src":"17414:221:28","statements":[{"nodeType":"YulAssignment","src":"17424:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17436:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17447:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17432:3:28"},"nodeType":"YulFunctionCall","src":"17432:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17424:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17471:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"17482:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17467:3:28"},"nodeType":"YulFunctionCall","src":"17467:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17490:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"17496:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17486:3:28"},"nodeType":"YulFunctionCall","src":"17486:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17460:6:28"},"nodeType":"YulFunctionCall","src":"17460:47:28"},"nodeType":"YulExpressionStatement","src":"17460:47:28"},{"nodeType":"YulAssignment","src":"17516:112:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17614:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"17623:4:28"}],"functionName":{"name":"abi_encode_t_struct$_Event_$9008_memory_ptr_to_t_struct$_Event_$9008_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17524:89:28"},"nodeType":"YulFunctionCall","src":"17524:104:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17516:4:28"}]}]},"name":"abi_encode_tuple_t_struct$_Event_$9008_memory_ptr__to_t_struct$_Event_$9008_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17386:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17398:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17409:4:28","type":""}],"src":"17270:365:28"},{"body":{"nodeType":"YulBlock","src":"17724:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"17770:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"17772:77:28"},"nodeType":"YulFunctionCall","src":"17772:79:28"},"nodeType":"YulExpressionStatement","src":"17772:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17745:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"17754:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17741:3:28"},"nodeType":"YulFunctionCall","src":"17741:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"17766:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17737:3:28"},"nodeType":"YulFunctionCall","src":"17737:32:28"},"nodeType":"YulIf","src":"17734:119:28"},{"nodeType":"YulBlock","src":"17863:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"17878:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"17892:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17882:6:28","type":""}]},{"nodeType":"YulAssignment","src":"17907:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17942:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"17953:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17938:3:28"},"nodeType":"YulFunctionCall","src":"17938:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17962:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"17917:20:28"},"nodeType":"YulFunctionCall","src":"17917:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17907:6:28"}]}]},{"nodeType":"YulBlock","src":"17990:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"18005:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"18019:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18009:6:28","type":""}]},{"nodeType":"YulAssignment","src":"18035:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18070:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"18081:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18066:3:28"},"nodeType":"YulFunctionCall","src":"18066:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"18090:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18045:20:28"},"nodeType":"YulFunctionCall","src":"18045:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18035:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17686:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17697:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17709:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17717:6:28","type":""}],"src":"17641:474:28"},{"body":{"nodeType":"YulBlock","src":"18219:124:28","statements":[{"nodeType":"YulAssignment","src":"18229:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18241:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18252:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18237:3:28"},"nodeType":"YulFunctionCall","src":"18237:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18229:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18309:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18322:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"18333:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18318:3:28"},"nodeType":"YulFunctionCall","src":"18318:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"18265:43:28"},"nodeType":"YulFunctionCall","src":"18265:71:28"},"nodeType":"YulExpressionStatement","src":"18265:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18191:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"18203:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18214:4:28","type":""}],"src":"18121:222:28"},{"body":{"nodeType":"YulBlock","src":"18416:241:28","statements":[{"body":{"nodeType":"YulBlock","src":"18521:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"18523:16:28"},"nodeType":"YulFunctionCall","src":"18523:18:28"},"nodeType":"YulExpressionStatement","src":"18523:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18493:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"18501:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18490:2:28"},"nodeType":"YulFunctionCall","src":"18490:30:28"},"nodeType":"YulIf","src":"18487:56:28"},{"nodeType":"YulAssignment","src":"18553:37:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18583:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"18561:21:28"},"nodeType":"YulFunctionCall","src":"18561:29:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18553:4:28"}]},{"nodeType":"YulAssignment","src":"18627:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"18639:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"18645:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18635:3:28"},"nodeType":"YulFunctionCall","src":"18635:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"18627:4:28"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"18400:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"18411:4:28","type":""}],"src":"18349:308:28"},{"body":{"nodeType":"YulBlock","src":"18747:341:28","statements":[{"nodeType":"YulAssignment","src":"18757:75:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18824:6:28"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18782:41:28"},"nodeType":"YulFunctionCall","src":"18782:49:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"18766:15:28"},"nodeType":"YulFunctionCall","src":"18766:66:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18757:5:28"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18848:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"18855:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18841:6:28"},"nodeType":"YulFunctionCall","src":"18841:21:28"},"nodeType":"YulExpressionStatement","src":"18841:21:28"},{"nodeType":"YulVariableDeclaration","src":"18871:27:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18886:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"18893:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18882:3:28"},"nodeType":"YulFunctionCall","src":"18882:16:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"18875:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"18936:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"18938:77:28"},"nodeType":"YulFunctionCall","src":"18938:79:28"},"nodeType":"YulExpressionStatement","src":"18938:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18917:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"18922:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18913:3:28"},"nodeType":"YulFunctionCall","src":"18913:16:28"},{"name":"end","nodeType":"YulIdentifier","src":"18931:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18910:2:28"},"nodeType":"YulFunctionCall","src":"18910:25:28"},"nodeType":"YulIf","src":"18907:112:28"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"19065:3:28"},{"name":"dst","nodeType":"YulIdentifier","src":"19070:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"19075:6:28"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"19028:36:28"},"nodeType":"YulFunctionCall","src":"19028:54:28"},"nodeType":"YulExpressionStatement","src":"19028:54:28"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"18720:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"18725:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"18733:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18741:5:28","type":""}],"src":"18663:425:28"},{"body":{"nodeType":"YulBlock","src":"19170:278:28","statements":[{"body":{"nodeType":"YulBlock","src":"19219:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"19221:77:28"},"nodeType":"YulFunctionCall","src":"19221:79:28"},"nodeType":"YulExpressionStatement","src":"19221:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19198:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"19206:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19194:3:28"},"nodeType":"YulFunctionCall","src":"19194:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"19213:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19190:3:28"},"nodeType":"YulFunctionCall","src":"19190:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19183:6:28"},"nodeType":"YulFunctionCall","src":"19183:35:28"},"nodeType":"YulIf","src":"19180:122:28"},{"nodeType":"YulVariableDeclaration","src":"19311:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19338:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19325:12:28"},"nodeType":"YulFunctionCall","src":"19325:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19315:6:28","type":""}]},{"nodeType":"YulAssignment","src":"19354:88:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19415:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"19423:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19411:3:28"},"nodeType":"YulFunctionCall","src":"19411:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"19430:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"19438:3:28"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19363:47:28"},"nodeType":"YulFunctionCall","src":"19363:79:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"19354:5:28"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"19148:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"19156:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"19164:5:28","type":""}],"src":"19108:340:28"},{"body":{"nodeType":"YulBlock","src":"19530:433:28","statements":[{"body":{"nodeType":"YulBlock","src":"19576:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"19578:77:28"},"nodeType":"YulFunctionCall","src":"19578:79:28"},"nodeType":"YulExpressionStatement","src":"19578:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"19551:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"19560:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19547:3:28"},"nodeType":"YulFunctionCall","src":"19547:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"19572:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"19543:3:28"},"nodeType":"YulFunctionCall","src":"19543:32:28"},"nodeType":"YulIf","src":"19540:119:28"},{"nodeType":"YulBlock","src":"19669:287:28","statements":[{"nodeType":"YulVariableDeclaration","src":"19684:45:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19715:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"19726:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19711:3:28"},"nodeType":"YulFunctionCall","src":"19711:17:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19698:12:28"},"nodeType":"YulFunctionCall","src":"19698:31:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19688:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"19776:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19778:77:28"},"nodeType":"YulFunctionCall","src":"19778:79:28"},"nodeType":"YulExpressionStatement","src":"19778:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19748:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"19756:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19745:2:28"},"nodeType":"YulFunctionCall","src":"19745:30:28"},"nodeType":"YulIf","src":"19742:117:28"},{"nodeType":"YulAssignment","src":"19873:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19918:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"19929:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19914:3:28"},"nodeType":"YulFunctionCall","src":"19914:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19938:7:28"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19883:30:28"},"nodeType":"YulFunctionCall","src":"19883:63:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"19873:6:28"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19500:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"19511:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"19523:6:28","type":""}],"src":"19454:509:28"},{"body":{"nodeType":"YulBlock","src":"20009:76:28","statements":[{"body":{"nodeType":"YulBlock","src":"20063:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20072:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20075:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20065:6:28"},"nodeType":"YulFunctionCall","src":"20065:12:28"},"nodeType":"YulExpressionStatement","src":"20065:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20032:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20054:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"20039:14:28"},"nodeType":"YulFunctionCall","src":"20039:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"20029:2:28"},"nodeType":"YulFunctionCall","src":"20029:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20022:6:28"},"nodeType":"YulFunctionCall","src":"20022:40:28"},"nodeType":"YulIf","src":"20019:60:28"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20002:5:28","type":""}],"src":"19969:116:28"},{"body":{"nodeType":"YulBlock","src":"20140:84:28","statements":[{"nodeType":"YulAssignment","src":"20150:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20172:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20159:12:28"},"nodeType":"YulFunctionCall","src":"20159:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"20150:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20212:5:28"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"20188:23:28"},"nodeType":"YulFunctionCall","src":"20188:30:28"},"nodeType":"YulExpressionStatement","src":"20188:30:28"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"20118:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"20126:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"20134:5:28","type":""}],"src":"20091:133:28"},{"body":{"nodeType":"YulBlock","src":"20310:388:28","statements":[{"body":{"nodeType":"YulBlock","src":"20356:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20358:77:28"},"nodeType":"YulFunctionCall","src":"20358:79:28"},"nodeType":"YulExpressionStatement","src":"20358:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20331:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"20340:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20327:3:28"},"nodeType":"YulFunctionCall","src":"20327:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"20352:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20323:3:28"},"nodeType":"YulFunctionCall","src":"20323:32:28"},"nodeType":"YulIf","src":"20320:119:28"},{"nodeType":"YulBlock","src":"20449:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"20464:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"20478:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20468:6:28","type":""}]},{"nodeType":"YulAssignment","src":"20493:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20528:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"20539:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20524:3:28"},"nodeType":"YulFunctionCall","src":"20524:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20548:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20503:20:28"},"nodeType":"YulFunctionCall","src":"20503:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20493:6:28"}]}]},{"nodeType":"YulBlock","src":"20576:115:28","statements":[{"nodeType":"YulVariableDeclaration","src":"20591:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"20605:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20595:6:28","type":""}]},{"nodeType":"YulAssignment","src":"20621:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20653:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"20664:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20649:3:28"},"nodeType":"YulFunctionCall","src":"20649:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20673:7:28"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"20631:17:28"},"nodeType":"YulFunctionCall","src":"20631:50:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"20621:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20272:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20283:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20295:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20303:6:28","type":""}],"src":"20230:468:28"},{"body":{"nodeType":"YulBlock","src":"20787:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"20833:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20835:77:28"},"nodeType":"YulFunctionCall","src":"20835:79:28"},"nodeType":"YulExpressionStatement","src":"20835:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20808:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"20817:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20804:3:28"},"nodeType":"YulFunctionCall","src":"20804:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"20829:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20800:3:28"},"nodeType":"YulFunctionCall","src":"20800:32:28"},"nodeType":"YulIf","src":"20797:119:28"},{"nodeType":"YulBlock","src":"20926:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"20941:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"20955:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20945:6:28","type":""}]},{"nodeType":"YulAssignment","src":"20970:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21005:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21016:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21001:3:28"},"nodeType":"YulFunctionCall","src":"21001:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21025:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"20980:20:28"},"nodeType":"YulFunctionCall","src":"20980:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20970:6:28"}]}]},{"nodeType":"YulBlock","src":"21053:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21068:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21082:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21072:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21098:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21133:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21144:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21129:3:28"},"nodeType":"YulFunctionCall","src":"21129:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21153:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21108:20:28"},"nodeType":"YulFunctionCall","src":"21108:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21098:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20749:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20760:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20772:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20780:6:28","type":""}],"src":"20704:474:28"},{"body":{"nodeType":"YulBlock","src":"21327:946:28","statements":[{"body":{"nodeType":"YulBlock","src":"21374:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"21376:77:28"},"nodeType":"YulFunctionCall","src":"21376:79:28"},"nodeType":"YulExpressionStatement","src":"21376:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"21348:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"21357:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"21344:3:28"},"nodeType":"YulFunctionCall","src":"21344:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"21369:3:28","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"21340:3:28"},"nodeType":"YulFunctionCall","src":"21340:33:28"},"nodeType":"YulIf","src":"21337:120:28"},{"nodeType":"YulBlock","src":"21467:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21482:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21496:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21486:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21511:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21546:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21557:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21542:3:28"},"nodeType":"YulFunctionCall","src":"21542:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21566:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21521:20:28"},"nodeType":"YulFunctionCall","src":"21521:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"21511:6:28"}]}]},{"nodeType":"YulBlock","src":"21594:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21609:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21623:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21613:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21639:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21674:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21685:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21670:3:28"},"nodeType":"YulFunctionCall","src":"21670:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21694:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21649:20:28"},"nodeType":"YulFunctionCall","src":"21649:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21639:6:28"}]}]},{"nodeType":"YulBlock","src":"21722:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21737:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21751:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21741:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21767:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21802:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21813:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21798:3:28"},"nodeType":"YulFunctionCall","src":"21798:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21822:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21777:20:28"},"nodeType":"YulFunctionCall","src":"21777:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21767:6:28"}]}]},{"nodeType":"YulBlock","src":"21850:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21865:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"21879:2:28","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21869:6:28","type":""}]},{"nodeType":"YulAssignment","src":"21895:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21930:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"21941:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21926:3:28"},"nodeType":"YulFunctionCall","src":"21926:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21950:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21905:20:28"},"nodeType":"YulFunctionCall","src":"21905:53:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21895:6:28"}]}]},{"nodeType":"YulBlock","src":"21978:288:28","statements":[{"nodeType":"YulVariableDeclaration","src":"21993:47:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22024:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"22035:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22020:3:28"},"nodeType":"YulFunctionCall","src":"22020:19:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"22007:12:28"},"nodeType":"YulFunctionCall","src":"22007:33:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21997:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"22087:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"22089:77:28"},"nodeType":"YulFunctionCall","src":"22089:79:28"},"nodeType":"YulExpressionStatement","src":"22089:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22059:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"22067:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22056:2:28"},"nodeType":"YulFunctionCall","src":"22056:30:28"},"nodeType":"YulIf","src":"22053:117:28"},{"nodeType":"YulAssignment","src":"22184:72:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22228:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"22239:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22224:3:28"},"nodeType":"YulFunctionCall","src":"22224:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22248:7:28"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"22194:29:28"},"nodeType":"YulFunctionCall","src":"22194:62:28"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"22184:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21265:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"21276:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"21288:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21296:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21304:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"21312:6:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"21320:6:28","type":""}],"src":"21184:1089:28"},{"body":{"nodeType":"YulBlock","src":"22345:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"22391:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"22393:77:28"},"nodeType":"YulFunctionCall","src":"22393:79:28"},"nodeType":"YulExpressionStatement","src":"22393:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"22366:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"22375:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22362:3:28"},"nodeType":"YulFunctionCall","src":"22362:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"22387:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22358:3:28"},"nodeType":"YulFunctionCall","src":"22358:32:28"},"nodeType":"YulIf","src":"22355:119:28"},{"nodeType":"YulBlock","src":"22484:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"22499:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"22513:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"22503:6:28","type":""}]},{"nodeType":"YulAssignment","src":"22528:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22563:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"22574:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22559:3:28"},"nodeType":"YulFunctionCall","src":"22559:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"22583:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"22538:20:28"},"nodeType":"YulFunctionCall","src":"22538:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"22528:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22315:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22326:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22338:6:28","type":""}],"src":"22279:329:28"},{"body":{"nodeType":"YulBlock","src":"22642:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22659:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22662:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22652:6:28"},"nodeType":"YulFunctionCall","src":"22652:88:28"},"nodeType":"YulExpressionStatement","src":"22652:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22756:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"22759:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22749:6:28"},"nodeType":"YulFunctionCall","src":"22749:15:28"},"nodeType":"YulExpressionStatement","src":"22749:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22780:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22783:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22773:6:28"},"nodeType":"YulFunctionCall","src":"22773:15:28"},"nodeType":"YulExpressionStatement","src":"22773:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"22614:180:28"},{"body":{"nodeType":"YulBlock","src":"22851:269:28","statements":[{"nodeType":"YulAssignment","src":"22861:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22875:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"22881:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"22871:3:28"},"nodeType":"YulFunctionCall","src":"22871:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22861:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"22892:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"22922:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"22928:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22918:3:28"},"nodeType":"YulFunctionCall","src":"22918:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"22896:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"22969:51:28","statements":[{"nodeType":"YulAssignment","src":"22983:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"22997:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23005:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"22993:3:28"},"nodeType":"YulFunctionCall","src":"22993:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"22983:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"22949:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22942:6:28"},"nodeType":"YulFunctionCall","src":"22942:26:28"},"nodeType":"YulIf","src":"22939:81:28"},{"body":{"nodeType":"YulBlock","src":"23072:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"23086:16:28"},"nodeType":"YulFunctionCall","src":"23086:18:28"},"nodeType":"YulExpressionStatement","src":"23086:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"23036:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"23059:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23067:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"23056:2:28"},"nodeType":"YulFunctionCall","src":"23056:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"23033:2:28"},"nodeType":"YulFunctionCall","src":"23033:38:28"},"nodeType":"YulIf","src":"23030:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"22835:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"22844:6:28","type":""}],"src":"22800:320:28"},{"body":{"nodeType":"YulBlock","src":"23232:64:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23254:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"23262:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23250:3:28"},"nodeType":"YulFunctionCall","src":"23250:14:28"},{"hexValue":"4576656e7420646f6573206e6f74206578697374","kind":"string","nodeType":"YulLiteral","src":"23266:22:28","type":"","value":"Event does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23243:6:28"},"nodeType":"YulFunctionCall","src":"23243:46:28"},"nodeType":"YulExpressionStatement","src":"23243:46:28"}]},"name":"store_literal_in_memory_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23224:6:28","type":""}],"src":"23126:170:28"},{"body":{"nodeType":"YulBlock","src":"23448:220:28","statements":[{"nodeType":"YulAssignment","src":"23458:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23524:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"23529:2:28","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23465:58:28"},"nodeType":"YulFunctionCall","src":"23465:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23458:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23630:3:28"}],"functionName":{"name":"store_literal_in_memory_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b","nodeType":"YulIdentifier","src":"23541:88:28"},"nodeType":"YulFunctionCall","src":"23541:93:28"},"nodeType":"YulExpressionStatement","src":"23541:93:28"},{"nodeType":"YulAssignment","src":"23643:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"23654:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"23659:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23650:3:28"},"nodeType":"YulFunctionCall","src":"23650:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23643:3:28"}]}]},"name":"abi_encode_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23436:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"23444:3:28","type":""}],"src":"23302:366:28"},{"body":{"nodeType":"YulBlock","src":"23845:248:28","statements":[{"nodeType":"YulAssignment","src":"23855:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23867:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23878:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23863:3:28"},"nodeType":"YulFunctionCall","src":"23863:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23855:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23902:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"23913:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23898:3:28"},"nodeType":"YulFunctionCall","src":"23898:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23921:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"23927:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23917:3:28"},"nodeType":"YulFunctionCall","src":"23917:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23891:6:28"},"nodeType":"YulFunctionCall","src":"23891:47:28"},"nodeType":"YulExpressionStatement","src":"23891:47:28"},{"nodeType":"YulAssignment","src":"23947:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24081:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23955:124:28"},"nodeType":"YulFunctionCall","src":"23955:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23947:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23825:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23840:4:28","type":""}],"src":"23674:419:28"},{"body":{"nodeType":"YulBlock","src":"24225:206:28","statements":[{"nodeType":"YulAssignment","src":"24235:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24247:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24258:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24243:3:28"},"nodeType":"YulFunctionCall","src":"24243:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24235:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24315:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24328:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24339:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24324:3:28"},"nodeType":"YulFunctionCall","src":"24324:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24271:43:28"},"nodeType":"YulFunctionCall","src":"24271:71:28"},"nodeType":"YulExpressionStatement","src":"24271:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24396:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24409:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24420:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24405:3:28"},"nodeType":"YulFunctionCall","src":"24405:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24352:43:28"},"nodeType":"YulFunctionCall","src":"24352:72:28"},"nodeType":"YulExpressionStatement","src":"24352:72:28"}]},"name":"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24189:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24201:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24209:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24220:4:28","type":""}],"src":"24099:332:28"},{"body":{"nodeType":"YulBlock","src":"24563:206:28","statements":[{"nodeType":"YulAssignment","src":"24573:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24585:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24596:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24581:3:28"},"nodeType":"YulFunctionCall","src":"24581:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24573:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24653:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24666:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24677:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24662:3:28"},"nodeType":"YulFunctionCall","src":"24662:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24609:43:28"},"nodeType":"YulFunctionCall","src":"24609:71:28"},"nodeType":"YulExpressionStatement","src":"24609:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24734:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24747:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"24758:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24743:3:28"},"nodeType":"YulFunctionCall","src":"24743:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"24690:43:28"},"nodeType":"YulFunctionCall","src":"24690:72:28"},"nodeType":"YulExpressionStatement","src":"24690:72:28"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24527:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24539:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24547:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24558:4:28","type":""}],"src":"24437:332:28"},{"body":{"nodeType":"YulBlock","src":"24803:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24820:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24823:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24813:6:28"},"nodeType":"YulFunctionCall","src":"24813:88:28"},"nodeType":"YulExpressionStatement","src":"24813:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24917:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"24920:4:28","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24910:6:28"},"nodeType":"YulFunctionCall","src":"24910:15:28"},"nodeType":"YulExpressionStatement","src":"24910:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24941:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24944:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24934:6:28"},"nodeType":"YulFunctionCall","src":"24934:15:28"},"nodeType":"YulExpressionStatement","src":"24934:15:28"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"24775:180:28"},{"body":{"nodeType":"YulBlock","src":"24989:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25006:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25009:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24999:6:28"},"nodeType":"YulFunctionCall","src":"24999:88:28"},"nodeType":"YulExpressionStatement","src":"24999:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25103:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"25106:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25096:6:28"},"nodeType":"YulFunctionCall","src":"25096:15:28"},"nodeType":"YulExpressionStatement","src":"25096:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25127:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25130:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25120:6:28"},"nodeType":"YulFunctionCall","src":"25120:15:28"},"nodeType":"YulExpressionStatement","src":"25120:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"24961:180:28"},{"body":{"nodeType":"YulBlock","src":"25190:190:28","statements":[{"nodeType":"YulAssignment","src":"25200:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25227:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"25209:17:28"},"nodeType":"YulFunctionCall","src":"25209:24:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25200:5:28"}]},{"body":{"nodeType":"YulBlock","src":"25323:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"25325:16:28"},"nodeType":"YulFunctionCall","src":"25325:18:28"},"nodeType":"YulExpressionStatement","src":"25325:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25248:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"25255:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25245:2:28"},"nodeType":"YulFunctionCall","src":"25245:77:28"},"nodeType":"YulIf","src":"25242:103:28"},{"nodeType":"YulAssignment","src":"25354:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25365:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"25372:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25361:3:28"},"nodeType":"YulFunctionCall","src":"25361:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"25354:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25176:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"25186:3:28","type":""}],"src":"25147:233:28"},{"body":{"nodeType":"YulBlock","src":"25440:87:28","statements":[{"nodeType":"YulAssignment","src":"25450:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"25458:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25450:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25478:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"25481:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25471:6:28"},"nodeType":"YulFunctionCall","src":"25471:14:28"},"nodeType":"YulExpressionStatement","src":"25471:14:28"},{"nodeType":"YulAssignment","src":"25494:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25512:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25515:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"25502:9:28"},"nodeType":"YulFunctionCall","src":"25502:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"25494:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"25427:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"25435:4:28","type":""}],"src":"25386:141:28"},{"body":{"nodeType":"YulBlock","src":"25577:49:28","statements":[{"nodeType":"YulAssignment","src":"25587:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25605:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"25612:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25601:3:28"},"nodeType":"YulFunctionCall","src":"25601:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"25617:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"25597:3:28"},"nodeType":"YulFunctionCall","src":"25597:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"25587:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25560:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25570:6:28","type":""}],"src":"25533:93:28"},{"body":{"nodeType":"YulBlock","src":"25685:54:28","statements":[{"nodeType":"YulAssignment","src":"25695:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"25720:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"25726:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"25716:3:28"},"nodeType":"YulFunctionCall","src":"25716:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"25695:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"25660:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"25666:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"25676:8:28","type":""}],"src":"25632:107:28"},{"body":{"nodeType":"YulBlock","src":"25821:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"25831:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"25852:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"25864:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"25848:3:28"},"nodeType":"YulFunctionCall","src":"25848:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"25835:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"25875:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"25906:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"25917:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"25887:18:28"},"nodeType":"YulFunctionCall","src":"25887:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"25879:4:28","type":""}]},{"nodeType":"YulAssignment","src":"25993:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"26024:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"26035:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"26005:18:28"},"nodeType":"YulFunctionCall","src":"26005:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"25993:8:28"}]},{"nodeType":"YulAssignment","src":"26053:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26066:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"26077:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"26073:3:28"},"nodeType":"YulFunctionCall","src":"26073:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26062:3:28"},"nodeType":"YulFunctionCall","src":"26062:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26053:5:28"}]},{"nodeType":"YulAssignment","src":"26092:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26105:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"26116:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"26126:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26112:3:28"},"nodeType":"YulFunctionCall","src":"26112:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"26102:2:28"},"nodeType":"YulFunctionCall","src":"26102:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"26092:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25782:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"25789:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"25801:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"25814:6:28","type":""}],"src":"25745:393:28"},{"body":{"nodeType":"YulBlock","src":"26176:28:28","statements":[{"nodeType":"YulAssignment","src":"26186:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"26193:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26186:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26162:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26172:3:28","type":""}],"src":"26144:60:28"},{"body":{"nodeType":"YulBlock","src":"26270:82:28","statements":[{"nodeType":"YulAssignment","src":"26280:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"26338:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26320:17:28"},"nodeType":"YulFunctionCall","src":"26320:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"26311:8:28"},"nodeType":"YulFunctionCall","src":"26311:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"26293:17:28"},"nodeType":"YulFunctionCall","src":"26293:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"26280:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26250:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"26260:9:28","type":""}],"src":"26210:142:28"},{"body":{"nodeType":"YulBlock","src":"26405:28:28","statements":[{"nodeType":"YulAssignment","src":"26415:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"26422:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26415:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26391:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26401:3:28","type":""}],"src":"26358:75:28"},{"body":{"nodeType":"YulBlock","src":"26515:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"26525:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"26580:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26549:30:28"},"nodeType":"YulFunctionCall","src":"26549:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"26529:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26604:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26644:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"26638:5:28"},"nodeType":"YulFunctionCall","src":"26638:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"26651:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"26683:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"26659:23:28"},"nodeType":"YulFunctionCall","src":"26659:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"26610:27:28"},"nodeType":"YulFunctionCall","src":"26610:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"26597:6:28"},"nodeType":"YulFunctionCall","src":"26597:105:28"},"nodeType":"YulExpressionStatement","src":"26597:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26492:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26498:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"26506:7:28","type":""}],"src":"26439:269:28"},{"body":{"nodeType":"YulBlock","src":"26763:24:28","statements":[{"nodeType":"YulAssignment","src":"26773:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"26780:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"26773:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26759:3:28","type":""}],"src":"26714:73:28"},{"body":{"nodeType":"YulBlock","src":"26846:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"26856:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"26870:30:28"},"nodeType":"YulFunctionCall","src":"26870:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"26860:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"26955:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"26961:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"26969:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"26911:43:28"},"nodeType":"YulFunctionCall","src":"26911:65:28"},"nodeType":"YulExpressionStatement","src":"26911:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"26832:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"26838:6:28","type":""}],"src":"26793:189:28"},{"body":{"nodeType":"YulBlock","src":"27038:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"27105:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"27149:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"27156:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"27119:29:28"},"nodeType":"YulFunctionCall","src":"27119:39:28"},"nodeType":"YulExpressionStatement","src":"27119:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"27058:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"27065:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27055:2:28"},"nodeType":"YulFunctionCall","src":"27055:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"27070:26:28","statements":[{"nodeType":"YulAssignment","src":"27072:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"27085:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"27092:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27081:3:28"},"nodeType":"YulFunctionCall","src":"27081:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"27072:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"27052:2:28","statements":[]},"src":"27048:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"27026:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"27033:3:28","type":""}],"src":"26988:186:28"},{"body":{"nodeType":"YulBlock","src":"27259:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"27285:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"27299:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"27347:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"27315:31:28"},"nodeType":"YulFunctionCall","src":"27315:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"27303:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"27366:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27389:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27417:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27399:17:28"},"nodeType":"YulFunctionCall","src":"27399:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27385:3:28"},"nodeType":"YulFunctionCall","src":"27385:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"27370:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"27586:27:28","statements":[{"nodeType":"YulAssignment","src":"27588:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"27603:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27588:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"27570:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"27582:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27567:2:28"},"nodeType":"YulFunctionCall","src":"27567:18:28"},"nodeType":"YulIf","src":"27564:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"27655:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"27672:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27700:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"27682:17:28"},"nodeType":"YulFunctionCall","src":"27682:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27668:3:28"},"nodeType":"YulFunctionCall","src":"27668:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"27626:28:28"},"nodeType":"YulFunctionCall","src":"27626:80:28"},"nodeType":"YulExpressionStatement","src":"27626:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"27276:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"27281:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"27273:2:28"},"nodeType":"YulFunctionCall","src":"27273:11:28"},"nodeType":"YulIf","src":"27270:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"27235:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"27242:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"27247:10:28","type":""}],"src":"27180:543:28"},{"body":{"nodeType":"YulBlock","src":"27792:54:28","statements":[{"nodeType":"YulAssignment","src":"27802:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"27827:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"27833:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"27823:3:28"},"nodeType":"YulFunctionCall","src":"27823:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"27802:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"27767:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"27773:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"27783:8:28","type":""}],"src":"27729:117:28"},{"body":{"nodeType":"YulBlock","src":"27903:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"27913:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27962:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"27965:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"27958:3:28"},"nodeType":"YulFunctionCall","src":"27958:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27977:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27973:3:28"},"nodeType":"YulFunctionCall","src":"27973:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"27929:28:28"},"nodeType":"YulFunctionCall","src":"27929:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"27925:3:28"},"nodeType":"YulFunctionCall","src":"27925:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"27917:4:28","type":""}]},{"nodeType":"YulAssignment","src":"27990:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28004:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"28010:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28000:3:28"},"nodeType":"YulFunctionCall","src":"28000:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"27990:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27880:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"27886:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"27896:6:28","type":""}],"src":"27852:169:28"},{"body":{"nodeType":"YulBlock","src":"28107:214:28","statements":[{"nodeType":"YulAssignment","src":"28240:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28267:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"28273:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"28248:18:28"},"nodeType":"YulFunctionCall","src":"28248:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"28240:4:28"}]},{"nodeType":"YulAssignment","src":"28286:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"28297:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28307:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"28310:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"28303:3:28"},"nodeType":"YulFunctionCall","src":"28303:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"28294:2:28"},"nodeType":"YulFunctionCall","src":"28294:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"28286:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"28088:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"28094:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"28102:4:28","type":""}],"src":"28026:295:28"},{"body":{"nodeType":"YulBlock","src":"28418:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28429:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"28476:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"28443:32:28"},"nodeType":"YulFunctionCall","src":"28443:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"28433:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"28565:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"28567:16:28"},"nodeType":"YulFunctionCall","src":"28567:18:28"},"nodeType":"YulExpressionStatement","src":"28567:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28537:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"28545:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28534:2:28"},"nodeType":"YulFunctionCall","src":"28534:30:28"},"nodeType":"YulIf","src":"28531:56:28"},{"nodeType":"YulVariableDeclaration","src":"28597:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28643:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"28637:5:28"},"nodeType":"YulFunctionCall","src":"28637:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"28611:25:28"},"nodeType":"YulFunctionCall","src":"28611:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"28601:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28742:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"28748:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"28756:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"28696:45:28"},"nodeType":"YulFunctionCall","src":"28696:67:28"},"nodeType":"YulExpressionStatement","src":"28696:67:28"},{"nodeType":"YulVariableDeclaration","src":"28773:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28790:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"28777:9:28","type":""}]},{"nodeType":"YulAssignment","src":"28801:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28814:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"28801:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"28865:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"28879:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28898:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"28910:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"28906:3:28"},"nodeType":"YulFunctionCall","src":"28906:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"28894:3:28"},"nodeType":"YulFunctionCall","src":"28894:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"28883:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28930:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"28976:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"28944:31:28"},"nodeType":"YulFunctionCall","src":"28944:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"28934:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"28994:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"29003:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"28998:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"29062:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29087:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29105:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29110:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29101:3:28"},"nodeType":"YulFunctionCall","src":"29101:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29095:5:28"},"nodeType":"YulFunctionCall","src":"29095:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29080:6:28"},"nodeType":"YulFunctionCall","src":"29080:42:28"},"nodeType":"YulExpressionStatement","src":"29080:42:28"},{"nodeType":"YulAssignment","src":"29139:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29153:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"29161:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29149:3:28"},"nodeType":"YulFunctionCall","src":"29149:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29139:6:28"}]},{"nodeType":"YulAssignment","src":"29180:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"29197:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"29208:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29193:3:28"},"nodeType":"YulFunctionCall","src":"29193:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"29180:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29028:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"29031:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29025:2:28"},"nodeType":"YulFunctionCall","src":"29025:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"29040:21:28","statements":[{"nodeType":"YulAssignment","src":"29042:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"29051:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"29054:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29047:3:28"},"nodeType":"YulFunctionCall","src":"29047:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"29042:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"29021:3:28","statements":[]},"src":"29017:208:28"},{"body":{"nodeType":"YulBlock","src":"29261:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"29279:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29306:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29311:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29302:3:28"},"nodeType":"YulFunctionCall","src":"29302:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29296:5:28"},"nodeType":"YulFunctionCall","src":"29296:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"29283:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"29346:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"29373:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29388:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"29396:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"29384:3:28"},"nodeType":"YulFunctionCall","src":"29384:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"29354:18:28"},"nodeType":"YulFunctionCall","src":"29354:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29339:6:28"},"nodeType":"YulFunctionCall","src":"29339:64:28"},"nodeType":"YulExpressionStatement","src":"29339:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"29244:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"29253:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"29241:2:28"},"nodeType":"YulFunctionCall","src":"29241:19:28"},"nodeType":"YulIf","src":"29238:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29437:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"29451:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"29459:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"29447:3:28"},"nodeType":"YulFunctionCall","src":"29447:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"29463:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29443:3:28"},"nodeType":"YulFunctionCall","src":"29443:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29430:6:28"},"nodeType":"YulFunctionCall","src":"29430:36:28"},"nodeType":"YulExpressionStatement","src":"29430:36:28"}]},"nodeType":"YulCase","src":"28858:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"28863:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"29493:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"29507:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"29520:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"29511:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"29544:67:28","statements":[{"nodeType":"YulAssignment","src":"29562:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"29581:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"29586:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29577:3:28"},"nodeType":"YulFunctionCall","src":"29577:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"29571:5:28"},"nodeType":"YulFunctionCall","src":"29571:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"29562:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"29537:6:28"},"nodeType":"YulIf","src":"29534:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"29631:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29690:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"29697:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"29637:52:28"},"nodeType":"YulFunctionCall","src":"29637:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"29624:6:28"},"nodeType":"YulFunctionCall","src":"29624:81:28"},"nodeType":"YulExpressionStatement","src":"29624:81:28"}]},"nodeType":"YulCase","src":"29485:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"28838:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"28846:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"28835:2:28"},"nodeType":"YulFunctionCall","src":"28835:14:28"},"nodeType":"YulSwitch","src":"28828:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"28407:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"28413:3:28","type":""}],"src":"28326:1395:28"},{"body":{"nodeType":"YulBlock","src":"29780:32:28","statements":[{"nodeType":"YulAssignment","src":"29790:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"29801:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"29790:7:28"}]}]},"name":"cleanup_t_rational_1_by_1","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29762:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"29772:7:28","type":""}],"src":"29727:85:28"},{"body":{"nodeType":"YulBlock","src":"29886:90:28","statements":[{"nodeType":"YulAssignment","src":"29896:74:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"29962:5:28"}],"functionName":{"name":"cleanup_t_rational_1_by_1","nodeType":"YulIdentifier","src":"29936:25:28"},"nodeType":"YulFunctionCall","src":"29936:32:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"29927:8:28"},"nodeType":"YulFunctionCall","src":"29927:42:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"29909:17:28"},"nodeType":"YulFunctionCall","src":"29909:61:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"29896:9:28"}]}]},"name":"convert_t_rational_1_by_1_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"29866:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"29876:9:28","type":""}],"src":"29818:158:28"},{"body":{"nodeType":"YulBlock","src":"30055:74:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30072:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"30116:5:28"}],"functionName":{"name":"convert_t_rational_1_by_1_to_t_uint256","nodeType":"YulIdentifier","src":"30077:38:28"},"nodeType":"YulFunctionCall","src":"30077:45:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30065:6:28"},"nodeType":"YulFunctionCall","src":"30065:58:28"},"nodeType":"YulExpressionStatement","src":"30065:58:28"}]},"name":"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"30043:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"30050:3:28","type":""}],"src":"29982:147:28"},{"body":{"nodeType":"YulBlock","src":"30241:132:28","statements":[{"nodeType":"YulAssignment","src":"30251:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30263:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"30274:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30259:3:28"},"nodeType":"YulFunctionCall","src":"30259:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30251:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"30339:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30352:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"30363:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30348:3:28"},"nodeType":"YulFunctionCall","src":"30348:17:28"}],"functionName":{"name":"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"30287:51:28"},"nodeType":"YulFunctionCall","src":"30287:79:28"},"nodeType":"YulExpressionStatement","src":"30287:79:28"}]},"name":"abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30213:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30225:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30236:4:28","type":""}],"src":"30135:238:28"},{"body":{"nodeType":"YulBlock","src":"30485:117:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30507:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"30515:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30503:3:28"},"nodeType":"YulFunctionCall","src":"30503:14:28"},{"hexValue":"416c726561647920636c61696d656420746f6b656e20666f7220746869732065","kind":"string","nodeType":"YulLiteral","src":"30519:34:28","type":"","value":"Already claimed token for this e"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30496:6:28"},"nodeType":"YulFunctionCall","src":"30496:58:28"},"nodeType":"YulExpressionStatement","src":"30496:58:28"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30575:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"30583:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30571:3:28"},"nodeType":"YulFunctionCall","src":"30571:15:28"},{"hexValue":"76656e74","kind":"string","nodeType":"YulLiteral","src":"30588:6:28","type":"","value":"vent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30564:6:28"},"nodeType":"YulFunctionCall","src":"30564:31:28"},"nodeType":"YulExpressionStatement","src":"30564:31:28"}]},"name":"store_literal_in_memory_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30477:6:28","type":""}],"src":"30379:223:28"},{"body":{"nodeType":"YulBlock","src":"30754:220:28","statements":[{"nodeType":"YulAssignment","src":"30764:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30830:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"30835:2:28","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30771:58:28"},"nodeType":"YulFunctionCall","src":"30771:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30764:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30936:3:28"}],"functionName":{"name":"store_literal_in_memory_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68","nodeType":"YulIdentifier","src":"30847:88:28"},"nodeType":"YulFunctionCall","src":"30847:93:28"},"nodeType":"YulExpressionStatement","src":"30847:93:28"},{"nodeType":"YulAssignment","src":"30949:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30960:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"30965:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30956:3:28"},"nodeType":"YulFunctionCall","src":"30956:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30949:3:28"}]}]},"name":"abi_encode_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30742:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30750:3:28","type":""}],"src":"30608:366:28"},{"body":{"nodeType":"YulBlock","src":"31151:248:28","statements":[{"nodeType":"YulAssignment","src":"31161:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31173:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31184:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31169:3:28"},"nodeType":"YulFunctionCall","src":"31169:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31161:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31208:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31219:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31204:3:28"},"nodeType":"YulFunctionCall","src":"31204:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31227:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"31233:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31223:3:28"},"nodeType":"YulFunctionCall","src":"31223:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31197:6:28"},"nodeType":"YulFunctionCall","src":"31197:47:28"},"nodeType":"YulExpressionStatement","src":"31197:47:28"},{"nodeType":"YulAssignment","src":"31253:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31387:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31261:124:28"},"nodeType":"YulFunctionCall","src":"31261:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31253:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31131:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31146:4:28","type":""}],"src":"30980:419:28"},{"body":{"nodeType":"YulBlock","src":"31587:371:28","statements":[{"nodeType":"YulAssignment","src":"31597:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31609:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31620:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31605:3:28"},"nodeType":"YulFunctionCall","src":"31605:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31597:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31678:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31691:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31702:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31687:3:28"},"nodeType":"YulFunctionCall","src":"31687:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"31634:43:28"},"nodeType":"YulFunctionCall","src":"31634:71:28"},"nodeType":"YulExpressionStatement","src":"31634:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31759:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31772:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31783:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31768:3:28"},"nodeType":"YulFunctionCall","src":"31768:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31715:43:28"},"nodeType":"YulFunctionCall","src":"31715:72:28"},"nodeType":"YulExpressionStatement","src":"31715:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"31841:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31854:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31865:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31850:3:28"},"nodeType":"YulFunctionCall","src":"31850:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31797:43:28"},"nodeType":"YulFunctionCall","src":"31797:72:28"},"nodeType":"YulExpressionStatement","src":"31797:72:28"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"31923:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31936:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"31947:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31932:3:28"},"nodeType":"YulFunctionCall","src":"31932:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"31879:43:28"},"nodeType":"YulFunctionCall","src":"31879:72:28"},"nodeType":"YulExpressionStatement","src":"31879:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31535:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"31547:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"31555:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"31563:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"31571:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31582:4:28","type":""}],"src":"31405:553:28"},{"body":{"nodeType":"YulBlock","src":"32008:147:28","statements":[{"nodeType":"YulAssignment","src":"32018:25:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32041:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32023:17:28"},"nodeType":"YulFunctionCall","src":"32023:20:28"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"32018:1:28"}]},{"nodeType":"YulAssignment","src":"32052:25:28","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"32075:1:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32057:17:28"},"nodeType":"YulFunctionCall","src":"32057:20:28"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"32052:1:28"}]},{"nodeType":"YulAssignment","src":"32086:16:28","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32097:1:28"},{"name":"y","nodeType":"YulIdentifier","src":"32100:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32093:3:28"},"nodeType":"YulFunctionCall","src":"32093:9:28"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"32086:3:28"}]},{"body":{"nodeType":"YulBlock","src":"32126:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32128:16:28"},"nodeType":"YulFunctionCall","src":"32128:18:28"},"nodeType":"YulExpressionStatement","src":"32128:18:28"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"32118:1:28"},{"name":"sum","nodeType":"YulIdentifier","src":"32121:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"32115:2:28"},"nodeType":"YulFunctionCall","src":"32115:10:28"},"nodeType":"YulIf","src":"32112:36:28"}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"31995:1:28","type":""},{"name":"y","nodeType":"YulTypedName","src":"31998:1:28","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"32004:3:28","type":""}],"src":"31964:191:28"},{"body":{"nodeType":"YulBlock","src":"32387:408:28","statements":[{"nodeType":"YulAssignment","src":"32397:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32409:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"32420:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32405:3:28"},"nodeType":"YulFunctionCall","src":"32405:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32397:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32444:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"32455:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32440:3:28"},"nodeType":"YulFunctionCall","src":"32440:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32463:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"32469:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32459:3:28"},"nodeType":"YulFunctionCall","src":"32459:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32433:6:28"},"nodeType":"YulFunctionCall","src":"32433:47:28"},"nodeType":"YulExpressionStatement","src":"32433:47:28"},{"nodeType":"YulAssignment","src":"32489:116:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"32591:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"32600:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32497:93:28"},"nodeType":"YulFunctionCall","src":"32497:108:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32489:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32626:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"32637:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32622:3:28"},"nodeType":"YulFunctionCall","src":"32622:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32646:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"32652:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32642:3:28"},"nodeType":"YulFunctionCall","src":"32642:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32615:6:28"},"nodeType":"YulFunctionCall","src":"32615:48:28"},"nodeType":"YulExpressionStatement","src":"32615:48:28"},{"nodeType":"YulAssignment","src":"32672:116:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"32774:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"32783:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32680:93:28"},"nodeType":"YulFunctionCall","src":"32680:108:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32672:4:28"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32351:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"32363:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"32371:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32382:4:28","type":""}],"src":"32161:634:28"},{"body":{"nodeType":"YulBlock","src":"32859:40:28","statements":[{"nodeType":"YulAssignment","src":"32870:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32886:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"32880:5:28"},"nodeType":"YulFunctionCall","src":"32880:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"32870:6:28"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32842:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"32852:6:28","type":""}],"src":"32801:98:28"},{"body":{"nodeType":"YulBlock","src":"33000:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33017:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"33022:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33010:6:28"},"nodeType":"YulFunctionCall","src":"33010:19:28"},"nodeType":"YulExpressionStatement","src":"33010:19:28"},{"nodeType":"YulAssignment","src":"33038:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33057:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"33062:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33053:3:28"},"nodeType":"YulFunctionCall","src":"33053:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"33038:11:28"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32972:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"32977:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"32988:11:28","type":""}],"src":"32905:168:28"},{"body":{"nodeType":"YulBlock","src":"33169:283:28","statements":[{"nodeType":"YulVariableDeclaration","src":"33179:52:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33225:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"33193:31:28"},"nodeType":"YulFunctionCall","src":"33193:38:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"33183:6:28","type":""}]},{"nodeType":"YulAssignment","src":"33240:77:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33305:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"33310:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33247:57:28"},"nodeType":"YulFunctionCall","src":"33247:70:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"33240:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"33365:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"33372:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33361:3:28"},"nodeType":"YulFunctionCall","src":"33361:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"33379:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"33384:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"33326:34:28"},"nodeType":"YulFunctionCall","src":"33326:65:28"},"nodeType":"YulExpressionStatement","src":"33326:65:28"},{"nodeType":"YulAssignment","src":"33400:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"33411:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"33438:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"33416:21:28"},"nodeType":"YulFunctionCall","src":"33416:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33407:3:28"},"nodeType":"YulFunctionCall","src":"33407:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"33400:3:28"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"33150:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"33157:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"33165:3:28","type":""}],"src":"33079:373:28"},{"body":{"nodeType":"YulBlock","src":"33686:523:28","statements":[{"nodeType":"YulAssignment","src":"33696:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33708:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"33719:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33704:3:28"},"nodeType":"YulFunctionCall","src":"33704:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33696:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"33777:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33790:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"33801:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33786:3:28"},"nodeType":"YulFunctionCall","src":"33786:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33733:43:28"},"nodeType":"YulFunctionCall","src":"33733:71:28"},"nodeType":"YulExpressionStatement","src":"33733:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"33858:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33871:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"33882:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33867:3:28"},"nodeType":"YulFunctionCall","src":"33867:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"33814:43:28"},"nodeType":"YulFunctionCall","src":"33814:72:28"},"nodeType":"YulExpressionStatement","src":"33814:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"33940:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"33953:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"33964:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33949:3:28"},"nodeType":"YulFunctionCall","src":"33949:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33896:43:28"},"nodeType":"YulFunctionCall","src":"33896:72:28"},"nodeType":"YulExpressionStatement","src":"33896:72:28"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"34022:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34035:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"34046:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34031:3:28"},"nodeType":"YulFunctionCall","src":"34031:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"33978:43:28"},"nodeType":"YulFunctionCall","src":"33978:72:28"},"nodeType":"YulExpressionStatement","src":"33978:72:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34071:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"34082:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34067:3:28"},"nodeType":"YulFunctionCall","src":"34067:19:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"34092:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"34098:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34088:3:28"},"nodeType":"YulFunctionCall","src":"34088:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"34060:6:28"},"nodeType":"YulFunctionCall","src":"34060:49:28"},"nodeType":"YulExpressionStatement","src":"34060:49:28"},{"nodeType":"YulAssignment","src":"34118:84:28","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"34188:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"34197:4:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"34126:61:28"},"nodeType":"YulFunctionCall","src":"34126:76:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"34118:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"33626:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"33638:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"33646:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"33654:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"33662:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"33670:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"33681:4:28","type":""}],"src":"33458:751:28"},{"body":{"nodeType":"YulBlock","src":"34277:79:28","statements":[{"nodeType":"YulAssignment","src":"34287:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"34302:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"34296:5:28"},"nodeType":"YulFunctionCall","src":"34296:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"34287:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"34344:5:28"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"34318:25:28"},"nodeType":"YulFunctionCall","src":"34318:32:28"},"nodeType":"YulExpressionStatement","src":"34318:32:28"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"34255:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"34263:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"34271:5:28","type":""}],"src":"34215:141:28"},{"body":{"nodeType":"YulBlock","src":"34438:273:28","statements":[{"body":{"nodeType":"YulBlock","src":"34484:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"34486:77:28"},"nodeType":"YulFunctionCall","src":"34486:79:28"},"nodeType":"YulExpressionStatement","src":"34486:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"34459:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"34468:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"34455:3:28"},"nodeType":"YulFunctionCall","src":"34455:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"34480:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"34451:3:28"},"nodeType":"YulFunctionCall","src":"34451:32:28"},"nodeType":"YulIf","src":"34448:119:28"},{"nodeType":"YulBlock","src":"34577:127:28","statements":[{"nodeType":"YulVariableDeclaration","src":"34592:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"34606:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"34596:6:28","type":""}]},{"nodeType":"YulAssignment","src":"34621:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"34666:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"34677:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34662:3:28"},"nodeType":"YulFunctionCall","src":"34662:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"34686:7:28"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"34631:30:28"},"nodeType":"YulFunctionCall","src":"34631:63:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"34621:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34408:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"34419:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"34431:6:28","type":""}],"src":"34362:349:28"},{"body":{"nodeType":"YulBlock","src":"35045:725:28","statements":[{"nodeType":"YulAssignment","src":"35055:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35067:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"35078:3:28","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35063:3:28"},"nodeType":"YulFunctionCall","src":"35063:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35055:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"35136:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35149:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"35160:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35145:3:28"},"nodeType":"YulFunctionCall","src":"35145:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35092:43:28"},"nodeType":"YulFunctionCall","src":"35092:71:28"},"nodeType":"YulExpressionStatement","src":"35092:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"35217:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35230:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"35241:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35226:3:28"},"nodeType":"YulFunctionCall","src":"35226:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"35173:43:28"},"nodeType":"YulFunctionCall","src":"35173:72:28"},"nodeType":"YulExpressionStatement","src":"35173:72:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35266:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"35277:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35262:3:28"},"nodeType":"YulFunctionCall","src":"35262:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35286:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"35292:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35282:3:28"},"nodeType":"YulFunctionCall","src":"35282:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35255:6:28"},"nodeType":"YulFunctionCall","src":"35255:48:28"},"nodeType":"YulExpressionStatement","src":"35255:48:28"},{"nodeType":"YulAssignment","src":"35312:116:28","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"35414:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"35423:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35320:93:28"},"nodeType":"YulFunctionCall","src":"35320:108:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35312:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35449:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"35460:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35445:3:28"},"nodeType":"YulFunctionCall","src":"35445:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35469:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"35475:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35465:3:28"},"nodeType":"YulFunctionCall","src":"35465:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35438:6:28"},"nodeType":"YulFunctionCall","src":"35438:48:28"},"nodeType":"YulExpressionStatement","src":"35438:48:28"},{"nodeType":"YulAssignment","src":"35495:116:28","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"35597:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"35606:4:28"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35503:93:28"},"nodeType":"YulFunctionCall","src":"35503:108:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35495:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"35632:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"35643:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35628:3:28"},"nodeType":"YulFunctionCall","src":"35628:19:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"35653:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"35659:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"35649:3:28"},"nodeType":"YulFunctionCall","src":"35649:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"35621:6:28"},"nodeType":"YulFunctionCall","src":"35621:49:28"},"nodeType":"YulExpressionStatement","src":"35621:49:28"},{"nodeType":"YulAssignment","src":"35679:84:28","value":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"35749:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"35758:4:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"35687:61:28"},"nodeType":"YulFunctionCall","src":"35687:76:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"35679:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"34985:9:28","type":""},{"name":"value4","nodeType":"YulTypedName","src":"34997:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"35005:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"35013:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"35021:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"35029:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"35040:4:28","type":""}],"src":"34717:1053:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__to_t_uint256_t_address_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    // address[]\n    function abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_address_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_address(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // address[]\n    function abi_decode_t_array$_t_address_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_address_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_address_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct AfterpartyEventToken.Event -> struct AfterpartyEventToken.Event\n    function abi_encode_t_struct$_Event_$9008_memory_ptr_to_t_struct$_Event_$9008_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // organizer\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // uri\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // totalMinted\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // exists\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Event_$9008_memory_ptr__to_t_struct$_Event_$9008_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Event_$9008_memory_ptr_to_t_struct$_Event_$9008_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Event does not exist\")\n\n    }\n\n    function abi_encode_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d6a0a1b0de2660245b1b2118b6d2e9d5a4b7d37cb6ad58f2fde377db8093825b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed token for this e\")\n\n        mstore(add(memPtr, 32), \"vent\")\n\n    }\n\n    function abi_encode_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cb67b9bbd1e49f5bec8254f21128adddee33cd8bf316ff2bb1a18bec151dbd68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value1,  tail)\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value2,  tail)\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value3,  tail)\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value4,  tail)\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101155760003560e01c80638da5cb5b116100a2578063e4aa47e311610071578063e4aa47e31461031a578063e985e9c51461034a578063f242432a1461037a578063f2fde38b14610396578063ff9f5970146103b257610115565b80638da5cb5b146102945780639bc2bc71146102b2578063a22cb465146102e2578063da4e5a2c146102fe57610115565b80632eb2c2d6116100e95780632eb2c2d6146101de5780634e1273f4146101fa5780636d1884e01461022a578063715018a61461025a578063873f6f9e1461026457610115565b8062fdd58e1461011a57806301ffc9a71461014a5780630b7914301461017a5780630e89341c146101ae575b600080fd5b610134600480360381019061012f91906120fa565b6103e2565b6040516101419190612149565b60405180910390f35b610164600480360381019061015f91906121bc565b61043c565b6040516101719190612204565b60405180910390f35b610194600480360381019061018f919061221f565b61051e565b6040516101a59594939291906122eb565b60405180910390f35b6101c860048036038101906101c3919061221f565b610609565b6040516101d59190612345565b60405180910390f35b6101f860048036038101906101f39190612564565b610714565b005b610214600480360381019061020f91906126f6565b6107bc565b604051610221919061282c565b60405180910390f35b610244600480360381019061023f919061221f565b6108cb565b604051610251919061292c565b60405180910390f35b610262610a72565b005b61027e6004803603810190610279919061294e565b610a86565b60405161028b9190612204565b60405180910390f35b61029c610ab5565b6040516102a9919061298e565b60405180910390f35b6102cc60048036038101906102c79190612a4a565b610adf565b6040516102d99190612149565b60405180910390f35b6102fc60048036038101906102f79190612abf565b610d7b565b005b6103186004803603810190610313919061221f565b610d91565b005b610334600480360381019061032f91906120fa565b610f96565b6040516103419190612149565b60405180910390f35b610364600480360381019061035f9190612aff565b610fc7565b6040516103719190612204565b60405180910390f35b610394600480360381019061038f9190612b3f565b61105b565b005b6103b060048036038101906103ab9190612bd6565b611103565b005b6103cc60048036038101906103c79190612bd6565b611189565b6040516103d9919061282c565b60405180910390f35b600080600083815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b60007fd9b67a26000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061050757507f0e89341c000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610517575061051682611220565b5b9050919050565b60056020528060005260406000206000915090508060000154908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169080600201805461056d90612c32565b80601f016020809104026020016040519081016040528092919081815260200182805461059990612c32565b80156105e65780601f106105bb576101008083540402835291602001916105e6565b820191906000526020600020905b8154815290600101906020018083116105c957829003601f168201915b5050505050908060030154908060040160009054906101000a900460ff16905085565b60606005600083815260200190815260200160002060040160009054906101000a900460ff1661066e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161066590612caf565b60405180910390fd5b60056000838152602001908152602001600020600201805461068f90612c32565b80601f01602080910402602001604051908101604052809291908181526020018280546106bb90612c32565b80156107085780601f106106dd57610100808354040283529160200191610708565b820191906000526020600020905b8154815290600101906020018083116106eb57829003601f168201915b50505050509050919050565b600061071e61128a565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff161415801561076357506107618682610fc7565b155b156107a75780866040517fe237d92200000000000000000000000000000000000000000000000000000000815260040161079e929190612ccf565b60405180910390fd5b6107b48686868686611292565b505050505050565b6060815183511461080857815183516040517f5b0599910000000000000000000000000000000000000000000000000000000081526004016107ff929190612cf8565b60405180910390fd5b6000835167ffffffffffffffff8111156108255761082461236c565b5b6040519080825280602002602001820160405280156108535781602001602082028036833780820191505090505b50905060005b84518110156108c057610890610878828761138a90919063ffffffff16565b61088b838761139e90919063ffffffff16565b6103e2565b8282815181106108a3576108a2612d21565b5b602002602001018181525050806108b990612d7f565b9050610859565b508091505092915050565b6108d361200b565b6005600083815260200190815260200160002060040160009054906101000a900460ff16610936576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161092d90612caf565b60405180910390fd5b600560008381526020019081526020016000206040518060a0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820180546109c490612c32565b80601f01602080910402602001604051908101604052809291908181526020018280546109f090612c32565b8015610a3d5780601f10610a1257610100808354040283529160200191610a3d565b820191906000526020600020905b815481529060010190602001808311610a2057829003601f168201915b50505050508152602001600382015481526020016004820160009054906101000a900460ff1615151515815250509050919050565b610a7a6113b2565b610a846000611439565b565b60076020528160005260406000206020528060005260406000206000915091509054906101000a900460ff1681565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600060046000815480929190610af490612d7f565b9190505550600060045490506040518060a001604052808281526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016001815260200160011515815250600560008381526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002019081610bba9190612f73565b506060820151816003015560808201518160040160006101000a81548160ff021916908315150217905550905050600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050600190039060005260206000200160009091909190915055610c6a33826001604051806020016040528060008152506114ff565b60016007600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055503373ffffffffffffffffffffffffffffffffffffffff16817ffc695dea2478fb938a11068aeedddd7046a5fe655f136e30a325d353fe187a4585604051610d1a9190612345565b60405180910390a33373ffffffffffffffffffffffffffffffffffffffff16817f2d03118aa776f7008445f6ca8490a6782ede2db364d741513555ba656ab1879f6001604051610d6a9190613080565b60405180910390a380915050919050565b610d8d610d8661128a565b8383611598565b5050565b6005600082815260200190815260200160002060040160009054906101000a900460ff16610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb90612caf565b60405180910390fd5b6007600082815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610e92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e899061310d565b60405180910390fd5b610eae33826001604051806020016040528060008152506114ff565b60016007600083815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600560008281526020019081526020016000206003016000815480929190610f3e90612d7f565b91905055503373ffffffffffffffffffffffffffffffffffffffff16817f2d03118aa776f7008445f6ca8490a6782ede2db364d741513555ba656ab1879f6001604051610f8b9190613080565b60405180910390a350565b60066020528160005260406000208181548110610fb257600080fd5b90600052602060002001600091509150505481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600061106561128a565b90508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16141580156110aa57506110a88682610fc7565b155b156110ee5780866040517fe237d9220000000000000000000000000000000000000000000000000000000081526004016110e5929190612ccf565b60405180910390fd5b6110fb8686868686611708565b505050505050565b61110b6113b2565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361117d5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611174919061298e565b60405180910390fd5b61118681611439565b50565b6060600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561121457602002820191906000526020600020905b815481526020019060010190808311611200575b50505050509050919050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036113045760006040517f57f447ce0000000000000000000000000000000000000000000000000000000081526004016112fb919061298e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036113765760006040517f01a8351400000000000000000000000000000000000000000000000000000000815260040161136d919061298e565b60405180910390fd5b6113838585858585611813565b5050505050565b600060208202602084010151905092915050565b600060208202602084010151905092915050565b6113ba61128a565b73ffffffffffffffffffffffffffffffffffffffff166113d8610ab5565b73ffffffffffffffffffffffffffffffffffffffff1614611437576113fb61128a565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161142e919061298e565b60405180910390fd5b565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16036115715760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611568919061298e565b60405180910390fd5b60008061157e85856118c5565b91509150611590600087848487611813565b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361160a5760006040517fced3e100000000000000000000000000000000000000000000000000000000008152600401611601919061298e565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516116fb9190612204565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff160361177a5760006040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611771919061298e565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16036117ec5760006040517f01a835140000000000000000000000000000000000000000000000000000000081526004016117e3919061298e565b60405180910390fd5b6000806117f985856118c5565b9150915061180a8787848487611813565b50505050505050565b61181f858585856118f5565b600073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16146118be57600061185d61128a565b905060018451036118ad57600061187e60008661139e90919063ffffffff16565b9050600061189660008661139e90919063ffffffff16565b90506118a6838989858589611ca3565b50506118bc565b6118bb818787878787611e57565b5b505b5050505050565b60608060405191506001825283602083015260408201905060018152826020820152604081016040529250929050565b805182511461193f57815181516040517f5b059991000000000000000000000000000000000000000000000000000000008152600401611936929190612cf8565b60405180910390fd5b600061194961128a565b905060005b8351811015611b5e57600061196c828661139e90919063ffffffff16565b90506000611983838661139e90919063ffffffff16565b9050600073ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff1614611ab057600080600084815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611a5857888183856040517f03dee4c5000000000000000000000000000000000000000000000000000000008152600401611a4f949392919061312d565b60405180910390fd5b81810360008085815260200190815260200160002060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505b600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614611b4b578060008084815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611b439190613172565b925050819055505b505080611b5790612d7f565b905061194e565b506001835103611c1d576000611b7e60008561139e90919063ffffffff16565b90506000611b9660008561139e90919063ffffffff16565b90508573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f628585604051611c0e929190612cf8565b60405180910390a45050611c9c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051611c939291906131a6565b60405180910390a45b5050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115611e4f578373ffffffffffffffffffffffffffffffffffffffff1663f23a6e6187878686866040518663ffffffff1660e01b8152600401611d04959493929190613232565b6020604051808303816000875af1925050508015611d4057506040513d601f19601f82011682018060405250810190611d3d91906132a1565b60015b611dc4573d8060008114611d70576040519150601f19603f3d011682016040523d82523d6000602084013e611d75565b606091505b506000815103611dbc57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611db3919061298e565b60405180910390fd5b805181602001fd5b63f23a6e6160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614611e4d57846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611e44919061298e565b60405180910390fd5b505b505050505050565b60008473ffffffffffffffffffffffffffffffffffffffff163b1115612003578373ffffffffffffffffffffffffffffffffffffffff1663bc197c8187878686866040518663ffffffff1660e01b8152600401611eb89594939291906132ce565b6020604051808303816000875af1925050508015611ef457506040513d601f19601f82011682018060405250810190611ef191906132a1565b60015b611f78573d8060008114611f24576040519150601f19603f3d011682016040523d82523d6000602084013e611f29565b606091505b506000815103611f7057846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611f67919061298e565b60405180910390fd5b805181602001fd5b63bc197c8160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461200157846040517f57f447ce000000000000000000000000000000000000000000000000000000008152600401611ff8919061298e565b60405180910390fd5b505b505050505050565b6040518060a0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001600081526020016000151581525090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061209182612066565b9050919050565b6120a181612086565b81146120ac57600080fd5b50565b6000813590506120be81612098565b92915050565b6000819050919050565b6120d7816120c4565b81146120e257600080fd5b50565b6000813590506120f4816120ce565b92915050565b600080604083850312156121115761211061205c565b5b600061211f858286016120af565b9250506020612130858286016120e5565b9150509250929050565b612143816120c4565b82525050565b600060208201905061215e600083018461213a565b92915050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61219981612164565b81146121a457600080fd5b50565b6000813590506121b681612190565b92915050565b6000602082840312156121d2576121d161205c565b5b60006121e0848285016121a7565b91505092915050565b60008115159050919050565b6121fe816121e9565b82525050565b600060208201905061221960008301846121f5565b92915050565b6000602082840312156122355761223461205c565b5b6000612243848285016120e5565b91505092915050565b61225581612086565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561229557808201518184015260208101905061227a565b60008484015250505050565b6000601f19601f8301169050919050565b60006122bd8261225b565b6122c78185612266565b93506122d7818560208601612277565b6122e0816122a1565b840191505092915050565b600060a082019050612300600083018861213a565b61230d602083018761224c565b818103604083015261231f81866122b2565b905061232e606083018561213a565b61233b60808301846121f5565b9695505050505050565b6000602082019050818103600083015261235f81846122b2565b905092915050565b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6123a4826122a1565b810181811067ffffffffffffffff821117156123c3576123c261236c565b5b80604052505050565b60006123d6612052565b90506123e2828261239b565b919050565b600067ffffffffffffffff8211156124025761240161236c565b5b602082029050602081019050919050565b600080fd5b600061242b612426846123e7565b6123cc565b9050808382526020820190506020840283018581111561244e5761244d612413565b5b835b81811015612477578061246388826120e5565b845260208401935050602081019050612450565b5050509392505050565b600082601f83011261249657612495612367565b5b81356124a6848260208601612418565b91505092915050565b600080fd5b600067ffffffffffffffff8211156124cf576124ce61236c565b5b6124d8826122a1565b9050602081019050919050565b82818337600083830152505050565b6000612507612502846124b4565b6123cc565b905082815260208101848484011115612523576125226124af565b5b61252e8482856124e5565b509392505050565b600082601f83011261254b5761254a612367565b5b813561255b8482602086016124f4565b91505092915050565b600080600080600060a086880312156125805761257f61205c565b5b600061258e888289016120af565b955050602061259f888289016120af565b945050604086013567ffffffffffffffff8111156125c0576125bf612061565b5b6125cc88828901612481565b935050606086013567ffffffffffffffff8111156125ed576125ec612061565b5b6125f988828901612481565b925050608086013567ffffffffffffffff81111561261a57612619612061565b5b61262688828901612536565b9150509295509295909350565b600067ffffffffffffffff82111561264e5761264d61236c565b5b602082029050602081019050919050565b600061267261266d84612633565b6123cc565b9050808382526020820190506020840283018581111561269557612694612413565b5b835b818110156126be57806126aa88826120af565b845260208401935050602081019050612697565b5050509392505050565b600082601f8301126126dd576126dc612367565b5b81356126ed84826020860161265f565b91505092915050565b6000806040838503121561270d5761270c61205c565b5b600083013567ffffffffffffffff81111561272b5761272a612061565b5b612737858286016126c8565b925050602083013567ffffffffffffffff81111561275857612757612061565b5b61276485828601612481565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6127a3816120c4565b82525050565b60006127b5838361279a565b60208301905092915050565b6000602082019050919050565b60006127d98261276e565b6127e38185612779565b93506127ee8361278a565b8060005b8381101561281f57815161280688826127a9565b9750612811836127c1565b9250506001810190506127f2565b5085935050505092915050565b6000602082019050818103600083015261284681846127ce565b905092915050565b61285781612086565b82525050565b600082825260208201905092915050565b60006128798261225b565b612883818561285d565b9350612893818560208601612277565b61289c816122a1565b840191505092915050565b6128b0816121e9565b82525050565b600060a0830160008301516128ce600086018261279a565b5060208301516128e1602086018261284e565b50604083015184820360408601526128f9828261286e565b915050606083015161290e606086018261279a565b50608083015161292160808601826128a7565b508091505092915050565b6000602082019050818103600083015261294681846128b6565b905092915050565b600080604083850312156129655761296461205c565b5b6000612973858286016120e5565b9250506020612984858286016120af565b9150509250929050565b60006020820190506129a3600083018461224c565b92915050565b600067ffffffffffffffff8211156129c4576129c361236c565b5b6129cd826122a1565b9050602081019050919050565b60006129ed6129e8846129a9565b6123cc565b905082815260208101848484011115612a0957612a086124af565b5b612a148482856124e5565b509392505050565b600082601f830112612a3157612a30612367565b5b8135612a418482602086016129da565b91505092915050565b600060208284031215612a6057612a5f61205c565b5b600082013567ffffffffffffffff811115612a7e57612a7d612061565b5b612a8a84828501612a1c565b91505092915050565b612a9c816121e9565b8114612aa757600080fd5b50565b600081359050612ab981612a93565b92915050565b60008060408385031215612ad657612ad561205c565b5b6000612ae4858286016120af565b9250506020612af585828601612aaa565b9150509250929050565b60008060408385031215612b1657612b1561205c565b5b6000612b24858286016120af565b9250506020612b35858286016120af565b9150509250929050565b600080600080600060a08688031215612b5b57612b5a61205c565b5b6000612b69888289016120af565b9550506020612b7a888289016120af565b9450506040612b8b888289016120e5565b9350506060612b9c888289016120e5565b925050608086013567ffffffffffffffff811115612bbd57612bbc612061565b5b612bc988828901612536565b9150509295509295909350565b600060208284031215612bec57612beb61205c565b5b6000612bfa848285016120af565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612c4a57607f821691505b602082108103612c5d57612c5c612c03565b5b50919050565b7f4576656e7420646f6573206e6f74206578697374000000000000000000000000600082015250565b6000612c99601483612266565b9150612ca482612c63565b602082019050919050565b60006020820190508181036000830152612cc881612c8c565b9050919050565b6000604082019050612ce4600083018561224c565b612cf1602083018461224c565b9392505050565b6000604082019050612d0d600083018561213a565b612d1a602083018461213a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612d8a826120c4565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612dbc57612dbb612d50565b5b600182019050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302612e297fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82612dec565b612e338683612dec565b95508019841693508086168417925050509392505050565b6000819050919050565b6000612e70612e6b612e66846120c4565b612e4b565b6120c4565b9050919050565b6000819050919050565b612e8a83612e55565b612e9e612e9682612e77565b848454612df9565b825550505050565b600090565b612eb3612ea6565b612ebe818484612e81565b505050565b5b81811015612ee257612ed7600082612eab565b600181019050612ec4565b5050565b601f821115612f2757612ef881612dc7565b612f0184612ddc565b81016020851015612f10578190505b612f24612f1c85612ddc565b830182612ec3565b50505b505050565b600082821c905092915050565b6000612f4a60001984600802612f2c565b1980831691505092915050565b6000612f638383612f39565b9150826002028217905092915050565b612f7c8261225b565b67ffffffffffffffff811115612f9557612f9461236c565b5b612f9f8254612c32565b612faa828285612ee6565b600060209050601f831160018114612fdd5760008415612fcb578287015190505b612fd58582612f57565b86555061303d565b601f198416612feb86612dc7565b60005b8281101561301357848901518255600182019150602085019450602081019050612fee565b86831015613030578489015161302c601f891682612f39565b8355505b6001600288020188555050505b505050505050565b6000819050919050565b600061306a61306561306084613045565b612e4b565b6120c4565b9050919050565b61307a8161304f565b82525050565b60006020820190506130956000830184613071565b92915050565b7f416c726561647920636c61696d656420746f6b656e20666f722074686973206560008201527f76656e7400000000000000000000000000000000000000000000000000000000602082015250565b60006130f7602483612266565b91506131028261309b565b604082019050919050565b60006020820190508181036000830152613126816130ea565b9050919050565b6000608082019050613142600083018761224c565b61314f602083018661213a565b61315c604083018561213a565b613169606083018461213a565b95945050505050565b600061317d826120c4565b9150613188836120c4565b92508282019050808211156131a05761319f612d50565b5b92915050565b600060408201905081810360008301526131c081856127ce565b905081810360208301526131d481846127ce565b90509392505050565b600081519050919050565b600082825260208201905092915050565b6000613204826131dd565b61320e81856131e8565b935061321e818560208601612277565b613227816122a1565b840191505092915050565b600060a082019050613247600083018861224c565b613254602083018761224c565b613261604083018661213a565b61326e606083018561213a565b818103608083015261328081846131f9565b90509695505050505050565b60008151905061329b81612190565b92915050565b6000602082840312156132b7576132b661205c565b5b60006132c58482850161328c565b91505092915050565b600060a0820190506132e3600083018861224c565b6132f0602083018761224c565b818103604083015261330281866127ce565b9050818103606083015261331681856127ce565b9050818103608083015261332a81846131f9565b9050969550505050505056fea2646970667358221220e043fcd8cf27ddb52c8c7ee67993bdbe2c2b7c27918567ae6c94c6fcdf5136dc64736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x115 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xE4AA47E3 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xE4AA47E3 EQ PUSH2 0x31A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x37A JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x396 JUMPI DUP1 PUSH4 0xFF9F5970 EQ PUSH2 0x3B2 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x294 JUMPI DUP1 PUSH4 0x9BC2BC71 EQ PUSH2 0x2B2 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xDA4E5A2C EQ PUSH2 0x2FE JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1FA JUMPI DUP1 PUSH4 0x6D1884E0 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x873F6F9E EQ PUSH2 0x264 JUMPI PUSH2 0x115 JUMP JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0xB791430 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x1AE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x164 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15F SWAP2 SWAP1 PUSH2 0x21BC JUMP JUMPDEST PUSH2 0x43C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x171 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x194 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18F SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0x51E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A5 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C3 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0x2564 JUMP JUMPDEST PUSH2 0x714 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20F SWAP2 SWAP1 PUSH2 0x26F6 JUMP JUMPDEST PUSH2 0x7BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0x8CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x292C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0xA72 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x294E JUMP JUMPDEST PUSH2 0xA86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29C PUSH2 0xAB5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A9 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x2A4A JUMP JUMPDEST PUSH2 0xADF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0x2ABF JUMP JUMPDEST PUSH2 0xD7B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x221F JUMP JUMPDEST PUSH2 0xD91 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x334 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x20FA JUMP JUMPDEST PUSH2 0xF96 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x341 SWAP2 SWAP1 PUSH2 0x2149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x2AFF JUMP JUMPDEST PUSH2 0xFC7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x371 SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x394 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x38F SWAP2 SWAP1 PUSH2 0x2B3F JUMP JUMPDEST PUSH2 0x105B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AB SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1103 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3C7 SWAP2 SWAP1 PUSH2 0x2BD6 JUMP JUMPDEST PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D9 SWAP2 SWAP1 PUSH2 0x282C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xD9B67A2600000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x507 JUMPI POP PUSH32 0xE89341C00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x517 JUMPI POP PUSH2 0x516 DUP3 PUSH2 0x1220 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x56D SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x599 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5E6 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5BB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x5E6 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x5C9 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP6 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x66E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x665 SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x68F SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BB SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x708 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x708 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6EB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x71E PUSH2 0x128A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x763 JUMPI POP PUSH2 0x761 DUP7 DUP3 PUSH2 0xFC7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x7A7 JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x79E SWAP3 SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7B4 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1292 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x808 JUMPI DUP2 MLOAD DUP4 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FF SWAP3 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x825 JUMPI PUSH2 0x824 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x853 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x8C0 JUMPI PUSH2 0x890 PUSH2 0x878 DUP3 DUP8 PUSH2 0x138A SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x88B DUP4 DUP8 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x3E2 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A2 PUSH2 0x2D21 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP DUP1 PUSH2 0x8B9 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP PUSH2 0x859 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8D3 PUSH2 0x200B JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x936 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x92D SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x9C4 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x9F0 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xA3D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA12 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xA3D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xA20 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA7A PUSH2 0x13B2 JUMP JUMPDEST PUSH2 0xA84 PUSH1 0x0 PUSH2 0x1439 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xAF4 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 PUSH1 0x4 SLOAD SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0xBBA SWAP2 SWAP1 PUSH2 0x2F73 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH2 0xC6A CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0xFC695DEA2478FB938A11068AEEDDDD7046A5FE655F136E30A325D353FE187A45 DUP6 PUSH1 0x40 MLOAD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x2D03118AA776F7008445F6CA8490A6782EDE2DB364D741513555BA656AB1879F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xD6A SWAP2 SWAP1 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xD8D PUSH2 0xD86 PUSH2 0x128A JUMP JUMPDEST DUP4 DUP4 PUSH2 0x1598 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xDF4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDEB SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE89 SWAP1 PUSH2 0x310D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xEAE CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x14FF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x7 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0xF3E SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH32 0x2D03118AA776F7008445F6CA8490A6782EDE2DB364D741513555BA656AB1879F PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0xF8B SWAP2 SWAP1 PUSH2 0x3080 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xFB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP2 POP SWAP2 POP POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1065 PUSH2 0x128A JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x10AA JUMPI POP PUSH2 0x10A8 DUP7 DUP3 PUSH2 0xFC7 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x10EE JUMPI DUP1 DUP7 PUSH1 0x40 MLOAD PUSH32 0xE237D92200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10E5 SWAP3 SWAP2 SWAP1 PUSH2 0x2CCF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10FB DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x1708 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x110B PUSH2 0x13B2 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x117D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1186 DUP2 PUSH2 0x1439 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x1214 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x1200 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1304 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12FB SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1376 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x136D SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1383 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MUL PUSH1 0x20 DUP5 ADD ADD MLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13BA PUSH2 0x128A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13D8 PUSH2 0xAB5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1437 JUMPI PUSH2 0x13FB PUSH2 0x128A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x142E SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1571 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x157E DUP6 DUP6 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x1590 PUSH1 0x0 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x160A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0xCED3E10000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1601 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x16FB SWAP2 SWAP1 PUSH2 0x2204 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x177A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1771 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17EC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1A8351400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17E3 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x17F9 DUP6 DUP6 PUSH2 0x18C5 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x180A DUP8 DUP8 DUP5 DUP5 DUP8 PUSH2 0x1813 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x181F DUP6 DUP6 DUP6 DUP6 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x18BE JUMPI PUSH1 0x0 PUSH2 0x185D PUSH2 0x128A JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP5 MLOAD SUB PUSH2 0x18AD JUMPI PUSH1 0x0 PUSH2 0x187E PUSH1 0x0 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1896 PUSH1 0x0 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH2 0x18A6 DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x1CA3 JUMP JUMPDEST POP POP PUSH2 0x18BC JUMP JUMPDEST PUSH2 0x18BB DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1E57 JUMP JUMPDEST JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP1 PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH1 0x1 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x40 MSTORE SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0x193F JUMPI DUP2 MLOAD DUP2 MLOAD PUSH1 0x40 MLOAD PUSH32 0x5B05999100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1936 SWAP3 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1949 PUSH2 0x128A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x1B5E JUMPI PUSH1 0x0 PUSH2 0x196C DUP3 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1983 DUP4 DUP7 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1AB0 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP11 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1A58 JUMPI DUP9 DUP2 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH32 0x3DEE4C500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A4F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x312D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP12 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B4B JUMPI DUP1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1B43 SWAP2 SWAP1 PUSH2 0x3172 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST POP POP DUP1 PUSH2 0x1B57 SWAP1 PUSH2 0x2D7F JUMP JUMPDEST SWAP1 POP PUSH2 0x194E JUMP JUMPDEST POP PUSH1 0x1 DUP4 MLOAD SUB PUSH2 0x1C1D JUMPI PUSH1 0x0 PUSH2 0x1B7E PUSH1 0x0 DUP6 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1B96 PUSH1 0x0 DUP6 PUSH2 0x139E SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1C0E SWAP3 SWAP2 SWAP1 PUSH2 0x2CF8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP PUSH2 0x1C9C JUMP JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1C93 SWAP3 SWAP2 SWAP1 PUSH2 0x31A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x1E4F JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF23A6E61 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D04 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3232 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1D40 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D3D SWAP2 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1DC4 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1D70 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D75 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1DBC JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB3 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xF23A6E61 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x1E4D JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E44 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x2003 JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xBC197C81 DUP8 DUP8 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x32CE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1EF4 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1EF1 SWAP2 SWAP1 PUSH2 0x32A1 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1F78 JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1F24 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1F29 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1F70 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F67 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0xBC197C81 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x2001 JUMPI DUP5 PUSH1 0x40 MLOAD PUSH32 0x57F447CE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FF8 SWAP2 SWAP1 PUSH2 0x298E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2091 DUP3 PUSH2 0x2066 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A1 DUP2 PUSH2 0x2086 JUMP JUMPDEST DUP2 EQ PUSH2 0x20AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20BE DUP2 PUSH2 0x2098 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20D7 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x20E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x20F4 DUP2 PUSH2 0x20CE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2111 JUMPI PUSH2 0x2110 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x211F DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2130 DUP6 DUP3 DUP7 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2143 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x215E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x213A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2199 DUP2 PUSH2 0x2164 JUMP JUMPDEST DUP2 EQ PUSH2 0x21A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21B6 DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21D2 JUMPI PUSH2 0x21D1 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x21E0 DUP5 DUP3 DUP6 ADD PUSH2 0x21A7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21FE DUP2 PUSH2 0x21E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2219 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x21F5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2235 JUMPI PUSH2 0x2234 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2243 DUP5 DUP3 DUP6 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2255 DUP2 PUSH2 0x2086 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2295 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x227A JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22BD DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x22C7 DUP2 DUP6 PUSH2 0x2266 JUMP JUMPDEST SWAP4 POP PUSH2 0x22D7 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x22E0 DUP2 PUSH2 0x22A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2300 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x230D PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x231F DUP2 DUP7 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP PUSH2 0x232E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x233B PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x21F5 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x235F DUP2 DUP5 PUSH2 0x22B2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x23A4 DUP3 PUSH2 0x22A1 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x23C3 JUMPI PUSH2 0x23C2 PUSH2 0x236C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x23D6 PUSH2 0x2052 JUMP JUMPDEST SWAP1 POP PUSH2 0x23E2 DUP3 DUP3 PUSH2 0x239B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2402 JUMPI PUSH2 0x2401 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x242B PUSH2 0x2426 DUP5 PUSH2 0x23E7 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x244E JUMPI PUSH2 0x244D PUSH2 0x2413 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2477 JUMPI DUP1 PUSH2 0x2463 DUP9 DUP3 PUSH2 0x20E5 JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2450 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2496 JUMPI PUSH2 0x2495 PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x24A6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH2 0x24D8 DUP3 PUSH2 0x22A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2507 PUSH2 0x2502 DUP5 PUSH2 0x24B4 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2523 JUMPI PUSH2 0x2522 PUSH2 0x24AF JUMP JUMPDEST JUMPDEST PUSH2 0x252E DUP5 DUP3 DUP6 PUSH2 0x24E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x254B JUMPI PUSH2 0x254A PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x255B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2580 JUMPI PUSH2 0x257F PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x258E DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x259F DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C0 JUMPI PUSH2 0x25BF PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x25CC DUP9 DUP3 DUP10 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25ED JUMPI PUSH2 0x25EC PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x25F9 DUP9 DUP3 DUP10 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2626 DUP9 DUP3 DUP10 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x264E JUMPI PUSH2 0x264D PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2672 PUSH2 0x266D DUP5 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2695 JUMPI PUSH2 0x2694 PUSH2 0x2413 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x26BE JUMPI DUP1 PUSH2 0x26AA DUP9 DUP3 PUSH2 0x20AF JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2697 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x26DD JUMPI PUSH2 0x26DC PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x26ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x265F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x270D JUMPI PUSH2 0x270C PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x272B JUMPI PUSH2 0x272A PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2737 DUP6 DUP3 DUP7 ADD PUSH2 0x26C8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2758 JUMPI PUSH2 0x2757 PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2764 DUP6 DUP3 DUP7 ADD PUSH2 0x2481 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27A3 DUP2 PUSH2 0x20C4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B5 DUP4 DUP4 PUSH2 0x279A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27D9 DUP3 PUSH2 0x276E JUMP JUMPDEST PUSH2 0x27E3 DUP2 DUP6 PUSH2 0x2779 JUMP JUMPDEST SWAP4 POP PUSH2 0x27EE DUP4 PUSH2 0x278A JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x281F JUMPI DUP2 MLOAD PUSH2 0x2806 DUP9 DUP3 PUSH2 0x27A9 JUMP JUMPDEST SWAP8 POP PUSH2 0x2811 DUP4 PUSH2 0x27C1 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27F2 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2846 DUP2 DUP5 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2857 DUP2 PUSH2 0x2086 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2879 DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH2 0x2883 DUP2 DUP6 PUSH2 0x285D JUMP JUMPDEST SWAP4 POP PUSH2 0x2893 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x289C DUP2 PUSH2 0x22A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28B0 DUP2 PUSH2 0x21E9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x28CE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x279A JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x28E1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x284E JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x28F9 DUP3 DUP3 PUSH2 0x286E JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x290E PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x279A JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2921 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x28A7 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2946 DUP2 DUP5 PUSH2 0x28B6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2965 JUMPI PUSH2 0x2964 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2973 DUP6 DUP3 DUP7 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2984 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x29A3 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x29C4 JUMPI PUSH2 0x29C3 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH2 0x29CD DUP3 PUSH2 0x22A1 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29ED PUSH2 0x29E8 DUP5 PUSH2 0x29A9 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2A09 JUMPI PUSH2 0x2A08 PUSH2 0x24AF JUMP JUMPDEST JUMPDEST PUSH2 0x2A14 DUP5 DUP3 DUP6 PUSH2 0x24E5 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2A31 JUMPI PUSH2 0x2A30 PUSH2 0x2367 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2A41 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x29DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A60 JUMPI PUSH2 0x2A5F PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2A7E JUMPI PUSH2 0x2A7D PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2A8A DUP5 DUP3 DUP6 ADD PUSH2 0x2A1C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2A9C DUP2 PUSH2 0x21E9 JUMP JUMPDEST DUP2 EQ PUSH2 0x2AA7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2AB9 DUP2 PUSH2 0x2A93 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AD6 JUMPI PUSH2 0x2AD5 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2AE4 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2AF5 DUP6 DUP3 DUP7 ADD PUSH2 0x2AAA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B16 JUMPI PUSH2 0x2B15 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B24 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2B35 DUP6 DUP3 DUP7 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2B5B JUMPI PUSH2 0x2B5A PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B69 DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2B7A DUP9 DUP3 DUP10 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x2B8B DUP9 DUP3 DUP10 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x2B9C DUP9 DUP3 DUP10 ADD PUSH2 0x20E5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2BBD JUMPI PUSH2 0x2BBC PUSH2 0x2061 JUMP JUMPDEST JUMPDEST PUSH2 0x2BC9 DUP9 DUP3 DUP10 ADD PUSH2 0x2536 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BEC JUMPI PUSH2 0x2BEB PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BFA DUP5 DUP3 DUP6 ADD PUSH2 0x20AF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2C4A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2C5D JUMPI PUSH2 0x2C5C PUSH2 0x2C03 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4576656E7420646F6573206E6F74206578697374000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2C99 PUSH1 0x14 DUP4 PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA4 DUP3 PUSH2 0x2C63 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x2CC8 DUP2 PUSH2 0x2C8C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CE4 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x2CF1 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x224C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2D0D PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x2D1A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2D8A DUP3 PUSH2 0x20C4 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2DBC JUMPI PUSH2 0x2DBB PUSH2 0x2D50 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x2E29 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x2E33 DUP7 DUP4 PUSH2 0x2DEC JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E70 PUSH2 0x2E6B PUSH2 0x2E66 DUP5 PUSH2 0x20C4 JUMP JUMPDEST PUSH2 0x2E4B JUMP JUMPDEST PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E8A DUP4 PUSH2 0x2E55 JUMP JUMPDEST PUSH2 0x2E9E PUSH2 0x2E96 DUP3 PUSH2 0x2E77 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2DF9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x2EB3 PUSH2 0x2EA6 JUMP JUMPDEST PUSH2 0x2EBE DUP2 DUP5 DUP5 PUSH2 0x2E81 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2EE2 JUMPI PUSH2 0x2ED7 PUSH1 0x0 DUP3 PUSH2 0x2EAB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2EC4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x2F27 JUMPI PUSH2 0x2EF8 DUP2 PUSH2 0x2DC7 JUMP JUMPDEST PUSH2 0x2F01 DUP5 PUSH2 0x2DDC JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2F10 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x2F24 PUSH2 0x2F1C DUP6 PUSH2 0x2DDC JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x2EC3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F4A PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2F2C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F63 DUP4 DUP4 PUSH2 0x2F39 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2F7C DUP3 PUSH2 0x225B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F95 JUMPI PUSH2 0x2F94 PUSH2 0x236C JUMP JUMPDEST JUMPDEST PUSH2 0x2F9F DUP3 SLOAD PUSH2 0x2C32 JUMP JUMPDEST PUSH2 0x2FAA DUP3 DUP3 DUP6 PUSH2 0x2EE6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2FDD JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2FCB JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2FD5 DUP6 DUP3 PUSH2 0x2F57 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x303D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2FEB DUP7 PUSH2 0x2DC7 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3013 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2FEE JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3030 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x302C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x2F39 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x306A PUSH2 0x3065 PUSH2 0x3060 DUP5 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x2E4B JUMP JUMPDEST PUSH2 0x20C4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x307A DUP2 PUSH2 0x304F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3095 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3071 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D656420746F6B656E20666F7220746869732065 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x76656E7400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F7 PUSH1 0x24 DUP4 PUSH2 0x2266 JUMP JUMPDEST SWAP2 POP PUSH2 0x3102 DUP3 PUSH2 0x309B JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3126 DUP2 PUSH2 0x30EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x3142 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x314F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x315C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x3169 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317D DUP3 PUSH2 0x20C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3188 DUP4 PUSH2 0x20C4 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x31A0 JUMPI PUSH2 0x319F PUSH2 0x2D50 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x31C0 DUP2 DUP6 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x31D4 DUP2 DUP5 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3204 DUP3 PUSH2 0x31DD JUMP JUMPDEST PUSH2 0x320E DUP2 DUP6 PUSH2 0x31E8 JUMP JUMPDEST SWAP4 POP PUSH2 0x321E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2277 JUMP JUMPDEST PUSH2 0x3227 DUP2 PUSH2 0x22A1 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x3247 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x3254 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x3261 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x213A JUMP JUMPDEST PUSH2 0x326E PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x213A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x3280 DUP2 DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x329B DUP2 PUSH2 0x2190 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x32B7 JUMPI PUSH2 0x32B6 PUSH2 0x205C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32C5 DUP5 DUP3 DUP6 ADD PUSH2 0x328C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x32E3 PUSH1 0x0 DUP4 ADD DUP9 PUSH2 0x224C JUMP JUMPDEST PUSH2 0x32F0 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x224C JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x3302 DUP2 DUP7 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x3316 DUP2 DUP6 PUSH2 0x27CE JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x332A DUP2 DUP5 PUSH2 0x31F9 JUMP JUMPDEST SWAP1 POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 NUMBER 0xFC 0xD8 0xCF 0x27 0xDD 0xB5 0x2C DUP13 PUSH31 0xE67993BDBE2C2B7C27918567AE6C94C6FCDF5136DC64736F6C634300081400 CALLER ","sourceMap":"316:3055:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2245:132:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1378:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;566:39:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;3186:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4012:429:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2534:552;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2014:176:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;669:62:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1183:686:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3154:144:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2306:416:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;611:52;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3365:157:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3589:351;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2876:138:25;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2245:132:2;2322:7;2348:9;:13;2358:2;2348:13;;;;;;;;;;;:22;2362:7;2348:22;;;;;;;;;;;;;;;;2341:29;;2245:132;;;;:::o;1378:305::-;1480:4;1530:26;1515:41;;;:11;:41;;;;:109;;;;1587:37;1572:52;;;:11;:52;;;;1515:109;:161;;;;1640:36;1664:11;1640:23;:36::i;:::-;1515:161;1496:180;;1378:305;;;:::o;566:39:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3186:183::-;3246:13;3279:6;:15;3286:7;3279:15;;;;;;;;;;;:22;;;;;;;;;;;;3271:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;3343:6;:15;3350:7;3343:15;;;;;;;;;;;:19;;3336:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3186:183;;;:::o;4012:429:2:-;4206:14;4223:12;:10;:12::i;:::-;4206:29;;4257:6;4249:14;;:4;:14;;;;:49;;;;;4268:30;4285:4;4291:6;4268:16;:30::i;:::-;4267:31;4249:49;4245:129;;;4350:6;4358:4;4321:42;;;;;;;;;;;;:::i;:::-;;;;;;;;4245:129;4383:51;4406:4;4412:2;4416:3;4421:6;4429:4;4383:22;:51::i;:::-;4196:245;4012:429;;;;;:::o;2534:552::-;2658:16;2709:3;:10;2690:8;:15;:29;2686:121;;2768:3;:10;2780:8;:15;2742:54;;;;;;;;;;;;:::i;:::-;;;;;;;;2686:121;2817:30;2864:8;:15;2850:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2817:63;;2896:9;2891:158;2915:8;:15;2911:1;:19;2891:158;;;2970:68;2980:30;3008:1;2980:8;:27;;:30;;;;:::i;:::-;3012:25;3035:1;3012:3;:22;;:25;;;;:::i;:::-;2970:9;:68::i;:::-;2951:13;2965:1;2951:16;;;;;;;;:::i;:::-;;;;;;;:87;;;;;2932:3;;;;:::i;:::-;;;2891:158;;;;3066:13;3059:20;;;2534:552;;;;:::o;2014:176:25:-;2072:12;;:::i;:::-;2104:6;:15;2111:7;2104:15;;;;;;;;;;;:22;;;;;;;;;;;;2096:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2168:6;:15;2175:7;2168:15;;;;;;;;;;;2161:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2014:176;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;669:62:25:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1183:686:25:-;1246:7;1265:15;;:17;;;;;;;;;:::i;:::-;;;;;;1292:18;1313:15;;1292:36;;1368:166;;;;;;;;1397:10;1368:166;;;;1432:10;1368:166;;;;;;1461:8;1368:166;;;;1496:1;1368:166;;;;1519:4;1368:166;;;;;1347:6;:18;1354:10;1347:18;;;;;;;;;;;:187;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1553:15;:27;1569:10;1553:27;;;;;;;;;;;;;;;1586:10;1553:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:36;1622:10;1634;1646:1;1616:36;;;;;;;;;;;;:5;:36::i;:::-;1699:4;1662:10;:22;1673:10;1662:22;;;;;;;;;;;:34;1685:10;1662:34;;;;;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;1752:10;1727:46;;1740:10;1727:46;1764:8;1727:46;;;;;;:::i;:::-;;;;;;;;1812:10;1788:38;;1800:10;1788:38;1824:1;1788:38;;;;;;:::i;:::-;;;;;;;;1852:10;1845:17;;;1183:686;;;:::o;3154:144:2:-;3239:52;3258:12;:10;:12::i;:::-;3272:8;3282;3239:18;:52::i;:::-;3154:144;;:::o;2306:416:25:-;2379:6;:15;2386:7;2379:15;;;;;;;;;;;:22;;;;;;;;;;;;2371:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2445:10;:19;2456:7;2445:19;;;;;;;;;;;:31;2465:10;2445:31;;;;;;;;;;;;;;;;;;;;;;;;;2444:32;2436:81;;;;;;;;;;;;:::i;:::-;;;;;;;;;2536:33;2542:10;2554:7;2563:1;2536:33;;;;;;;;;;;;:5;:33::i;:::-;2613:4;2579:10;:19;2590:7;2579:19;;;;;;;;;;;:31;2599:10;2579:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2627:6;:15;2634:7;2627:15;;;;;;;;;;;:27;;;:29;;;;;;;;;:::i;:::-;;;;;;2701:10;2680:35;;2692:7;2680:35;2713:1;2680:35;;;;;;:::i;:::-;;;;;;;;2306:416;:::o;611:52::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3365:157:2:-;3455:4;3478:18;:27;3497:7;3478:27;;;;;;;;;;;;;;;:37;3506:8;3478:37;;;;;;;;;;;;;;;;;;;;;;;;;3471:44;;3365:157;;;;:::o;3589:351::-;3712:14;3729:12;:10;:12::i;:::-;3712:29;;3763:6;3755:14;;:4;:14;;;;:49;;;;;3774:30;3791:4;3797:6;3774:16;:30::i;:::-;3773:31;3755:49;3751:129;;;3856:6;3864:4;3827:42;;;;;;;;;;;;:::i;:::-;;;;;;;;3751:129;3889:44;3907:4;3913:2;3917;3921:5;3928:4;3889:17;:44::i;:::-;3702:238;3589:351;;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;2876:138:25:-;2946:16;2981:15;:26;2997:9;2981:26;;;;;;;;;;;;;;;2974:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2876:138;;;:::o;763:146:19:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;9023:445:2:-;9230:1;9216:16;;:2;:16;;;9212:88;;9286:1;9255:34;;;;;;;;;;;:::i;:::-;;;;;;;;9212:88;9329:1;9313:18;;:4;:18;;;9309:88;;9383:1;9354:32;;;;;;;;;;;:::i;:::-;;;;;;;;9309:88;9406:55;9433:4;9439:2;9443:3;9448:6;9456:4;9406:26;:55::i;:::-;9023:445;;;;;:::o;16128:197:12:-;16214:11;16302:4;16297:3;16293:14;16286:4;16281:3;16277:14;16273:35;16267:42;16260:49;;16128:197;;;;:::o;16926:::-;17012:11;17100:4;17095:3;17091:14;17084:4;17079:3;17075:14;17071:35;17065:42;17058:49;;16926:197;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;10754:346:2:-;10864:1;10850:16;;:2;:16;;;10846:88;;10920:1;10889:34;;;;;;;;;;;:::i;:::-;;;;;;;;10846:88;10944:20;10966:23;10993:29;11012:2;11016:5;10993:18;:29::i;:::-;10943:79;;;;11032:61;11067:1;11071:2;11075:3;11080:6;11088:4;11032:26;:61::i;:::-;10836:264;;10754:346;;;;:::o;13276:315::-;13403:1;13383:22;;:8;:22;;;13379:94;;13459:1;13428:34;;;;;;;;;;;:::i;:::-;;;;;;;;13379:94;13520:8;13482:18;:25;13501:5;13482:25;;;;;;;;;;;;;;;:35;13508:8;13482:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;13565:8;13543:41;;13558:5;13543:41;;;13575:8;13543:41;;;;;;:::i;:::-;;;;;;;;13276:315;;;:::o;8159:463::-;8295:1;8281:16;;:2;:16;;;8277:88;;8351:1;8320:34;;;;;;;;;;;:::i;:::-;;;;;;;;8277:88;8394:1;8378:18;;:4;:18;;;8374:88;;8448:1;8419:32;;;;;;;;;;;:::i;:::-;;;;;;;;8374:88;8472:20;8494:23;8521:29;8540:2;8544:5;8521:18;:29::i;:::-;8471:79;;;;8560:55;8587:4;8593:2;8597:3;8602:6;8610:4;8560:26;:55::i;:::-;8267:355;;8159:463;;;;;:::o;7002:700::-;7203:30;7211:4;7217:2;7221:3;7226:6;7203:7;:30::i;:::-;7261:1;7247:16;;:2;:16;;;7243:453;;7279:16;7298:12;:10;:12::i;:::-;7279:31;;7342:1;7328:3;:10;:15;7324:362;;7363:10;7376:25;7399:1;7376:3;:22;;:25;;;;:::i;:::-;7363:38;;7419:13;7435:28;7461:1;7435:6;:25;;:28;;;;:::i;:::-;7419:44;;7481:72;7517:8;7527:4;7533:2;7537;7541:5;7548:4;7481:35;:72::i;:::-;7345:223;;7324:362;;;7592:79;7633:8;7643:4;7649:2;7653:3;7658:6;7666:4;7592:40;:79::i;:::-;7324:362;7265:431;7243:453;7002:700;;;;;:::o;13707:822::-;13815:23;13840;13974:4;13968:11;13958:21;;14044:1;14036:6;14029:17;14182:8;14175:4;14167:6;14163:17;14156:35;14304:4;14296:6;14292:17;14282:27;;14337:1;14329:6;14322:17;14378:8;14371:4;14363:6;14359:17;14352:35;14507:4;14499:6;14495:17;14489:4;14482:31;13707:822;;;;;:::o;5142:1281::-;5277:6;:13;5263:3;:10;:27;5259:117;;5339:3;:10;5351:6;:13;5313:52;;;;;;;;;;;;:::i;:::-;;;;;;;;5259:117;5386:16;5405:12;:10;:12::i;:::-;5386:31;;5433:9;5428:691;5452:3;:10;5448:1;:14;5428:691;;;5483:10;5496:25;5519:1;5496:3;:22;;:25;;;;:::i;:::-;5483:38;;5535:13;5551:28;5577:1;5551:6;:25;;:28;;;;:::i;:::-;5535:44;;5614:1;5598:18;;:4;:18;;;5594:420;;5636:19;5658:9;:13;5668:2;5658:13;;;;;;;;;;;:19;5672:4;5658:19;;;;;;;;;;;;;;;;5636:41;;5713:5;5699:11;:19;5695:129;;;5776:4;5782:11;5795:5;5802:2;5749:56;;;;;;;;;;;;;;:::i;:::-;;;;;;;;5695:129;5976:5;5962:11;:19;5940:9;:13;5950:2;5940:13;;;;;;;;;;;:19;5954:4;5940:19;;;;;;;;;;;;;;;:41;;;;5618:396;5594:420;6046:1;6032:16;;:2;:16;;;6028:81;;6089:5;6068:9;:13;6078:2;6068:13;;;;;;;;;;;:17;6082:2;6068:17;;;;;;;;;;;;;;;;:26;;;;;;;:::i;:::-;;;;;;;;6028:81;5469:650;;5464:3;;;;:::i;:::-;;;5428:691;;;;6147:1;6133:3;:10;:15;6129:288;;6164:10;6177:25;6200:1;6177:3;:22;;:25;;;;:::i;:::-;6164:38;;6216:13;6232:28;6258:1;6232:6;:25;;:28;;;;:::i;:::-;6216:44;;6310:2;6279:45;;6304:4;6279:45;;6294:8;6279:45;;;6314:2;6318:5;6279:45;;;;;;;:::i;:::-;;;;;;;;6150:185;;6129:288;;;6390:2;6360:46;;6384:4;6360:46;;6374:8;6360:46;;;6394:3;6399:6;6360:46;;;;;;;:::i;:::-;;;;;;;;6129:288;5249:1174;5142:1281;;;;:::o;1006:959:6:-;1222:1;1205:2;:14;;;:18;1201:758;;;1260:2;1243:38;;;1282:8;1292:4;1298:2;1302:5;1309:4;1243:71;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1239:710;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1630:1;1613:6;:13;:18;1609:326;;1756:2;1718:41;;;;;;;;;;;:::i;:::-;;;;;;;;1609:326;1887:6;1881:13;1872:6;1868:2;1864:15;1857:38;1239:710;1375:43;;;1363:55;;;:8;:55;;;;1359:189;;1526:2;1488:41;;;;;;;;;;;:::i;:::-;;;;;;;;1359:189;1315:247;1201:758;1006:959;;;;;;:::o;2521:1026::-;2762:1;2745:2;:14;;;:18;2741:800;;;2800:2;2783:43;;;2827:8;2837:4;2843:3;2848:6;2856:4;2783:78;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;2779:752;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3212:1;3195:6;:13;:18;3191:326;;3338:2;3300:41;;;;;;;;;;;:::i;:::-;;;;;;;;3191:326;3469:6;3463:13;3454:6;3450:2;3446:15;3439:38;2779:752;2952:48;;;2940:60;;;:8;:60;;;;2936:194;;3108:2;3070:41;;;;;;;;;;;:::i;:::-;;;;;;;;2936:194;2862:282;2741:800;2521:1026;;;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:28:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:118::-;1764:24;1782:5;1764:24;:::i;:::-;1759:3;1752:37;1677:118;;:::o;1801:222::-;1894:4;1932:2;1921:9;1917:18;1909:26;;1945:71;2013:1;2002:9;1998:17;1989:6;1945:71;:::i;:::-;1801:222;;;;:::o;2029:149::-;2065:7;2105:66;2098:5;2094:78;2083:89;;2029:149;;;:::o;2184:120::-;2256:23;2273:5;2256:23;:::i;:::-;2249:5;2246:34;2236:62;;2294:1;2291;2284:12;2236:62;2184:120;:::o;2310:137::-;2355:5;2393:6;2380:20;2371:29;;2409:32;2435:5;2409:32;:::i;:::-;2310:137;;;;:::o;2453:327::-;2511:6;2560:2;2548:9;2539:7;2535:23;2531:32;2528:119;;;2566:79;;:::i;:::-;2528:119;2686:1;2711:52;2755:7;2746:6;2735:9;2731:22;2711:52;:::i;:::-;2701:62;;2657:116;2453:327;;;;:::o;2786:90::-;2820:7;2863:5;2856:13;2849:21;2838:32;;2786:90;;;:::o;2882:109::-;2963:21;2978:5;2963:21;:::i;:::-;2958:3;2951:34;2882:109;;:::o;2997:210::-;3084:4;3122:2;3111:9;3107:18;3099:26;;3135:65;3197:1;3186:9;3182:17;3173:6;3135:65;:::i;:::-;2997:210;;;;:::o;3213:329::-;3272:6;3321:2;3309:9;3300:7;3296:23;3292:32;3289:119;;;3327:79;;:::i;:::-;3289:119;3447:1;3472:53;3517:7;3508:6;3497:9;3493:22;3472:53;:::i;:::-;3462:63;;3418:117;3213:329;;;;:::o;3548:118::-;3635:24;3653:5;3635:24;:::i;:::-;3630:3;3623:37;3548:118;;:::o;3672:99::-;3724:6;3758:5;3752:12;3742:22;;3672:99;;;:::o;3777:169::-;3861:11;3895:6;3890:3;3883:19;3935:4;3930:3;3926:14;3911:29;;3777:169;;;;:::o;3952:246::-;4033:1;4043:113;4057:6;4054:1;4051:13;4043:113;;;4142:1;4137:3;4133:11;4127:18;4123:1;4118:3;4114:11;4107:39;4079:2;4076:1;4072:10;4067:15;;4043:113;;;4190:1;4181:6;4176:3;4172:16;4165:27;4014:184;3952:246;;;:::o;4204:102::-;4245:6;4296:2;4292:7;4287:2;4280:5;4276:14;4272:28;4262:38;;4204:102;;;:::o;4312:377::-;4400:3;4428:39;4461:5;4428:39;:::i;:::-;4483:71;4547:6;4542:3;4483:71;:::i;:::-;4476:78;;4563:65;4621:6;4616:3;4609:4;4602:5;4598:16;4563:65;:::i;:::-;4653:29;4675:6;4653:29;:::i;:::-;4648:3;4644:39;4637:46;;4404:285;4312:377;;;;:::o;4695:743::-;4914:4;4952:3;4941:9;4937:19;4929:27;;4966:71;5034:1;5023:9;5019:17;5010:6;4966:71;:::i;:::-;5047:72;5115:2;5104:9;5100:18;5091:6;5047:72;:::i;:::-;5166:9;5160:4;5156:20;5151:2;5140:9;5136:18;5129:48;5194:78;5267:4;5258:6;5194:78;:::i;:::-;5186:86;;5282:72;5350:2;5339:9;5335:18;5326:6;5282:72;:::i;:::-;5364:67;5426:3;5415:9;5411:19;5402:6;5364:67;:::i;:::-;4695:743;;;;;;;;:::o;5444:313::-;5557:4;5595:2;5584:9;5580:18;5572:26;;5644:9;5638:4;5634:20;5630:1;5619:9;5615:17;5608:47;5672:78;5745:4;5736:6;5672:78;:::i;:::-;5664:86;;5444:313;;;;:::o;5763:117::-;5872:1;5869;5862:12;5886:180;5934:77;5931:1;5924:88;6031:4;6028:1;6021:15;6055:4;6052:1;6045:15;6072:281;6155:27;6177:4;6155:27;:::i;:::-;6147:6;6143:40;6285:6;6273:10;6270:22;6249:18;6237:10;6234:34;6231:62;6228:88;;;6296:18;;:::i;:::-;6228:88;6336:10;6332:2;6325:22;6115:238;6072:281;;:::o;6359:129::-;6393:6;6420:20;;:::i;:::-;6410:30;;6449:33;6477:4;6469:6;6449:33;:::i;:::-;6359:129;;;:::o;6494:311::-;6571:4;6661:18;6653:6;6650:30;6647:56;;;6683:18;;:::i;:::-;6647:56;6733:4;6725:6;6721:17;6713:25;;6793:4;6787;6783:15;6775:23;;6494:311;;;:::o;6811:117::-;6920:1;6917;6910:12;6951:710;7047:5;7072:81;7088:64;7145:6;7088:64;:::i;:::-;7072:81;:::i;:::-;7063:90;;7173:5;7202:6;7195:5;7188:21;7236:4;7229:5;7225:16;7218:23;;7289:4;7281:6;7277:17;7269:6;7265:30;7318:3;7310:6;7307:15;7304:122;;;7337:79;;:::i;:::-;7304:122;7452:6;7435:220;7469:6;7464:3;7461:15;7435:220;;;7544:3;7573:37;7606:3;7594:10;7573:37;:::i;:::-;7568:3;7561:50;7640:4;7635:3;7631:14;7624:21;;7511:144;7495:4;7490:3;7486:14;7479:21;;7435:220;;;7439:21;7053:608;;6951:710;;;;;:::o;7684:370::-;7755:5;7804:3;7797:4;7789:6;7785:17;7781:27;7771:122;;7812:79;;:::i;:::-;7771:122;7929:6;7916:20;7954:94;8044:3;8036:6;8029:4;8021:6;8017:17;7954:94;:::i;:::-;7945:103;;7761:293;7684:370;;;;:::o;8060:117::-;8169:1;8166;8159:12;8183:307;8244:4;8334:18;8326:6;8323:30;8320:56;;;8356:18;;:::i;:::-;8320:56;8394:29;8416:6;8394:29;:::i;:::-;8386:37;;8478:4;8472;8468:15;8460:23;;8183:307;;;:::o;8496:146::-;8593:6;8588:3;8583;8570:30;8634:1;8625:6;8620:3;8616:16;8609:27;8496:146;;;:::o;8648:423::-;8725:5;8750:65;8766:48;8807:6;8766:48;:::i;:::-;8750:65;:::i;:::-;8741:74;;8838:6;8831:5;8824:21;8876:4;8869:5;8865:16;8914:3;8905:6;8900:3;8896:16;8893:25;8890:112;;;8921:79;;:::i;:::-;8890:112;9011:54;9058:6;9053:3;9048;9011:54;:::i;:::-;8731:340;8648:423;;;;;:::o;9090:338::-;9145:5;9194:3;9187:4;9179:6;9175:17;9171:27;9161:122;;9202:79;;:::i;:::-;9161:122;9319:6;9306:20;9344:78;9418:3;9410:6;9403:4;9395:6;9391:17;9344:78;:::i;:::-;9335:87;;9151:277;9090:338;;;;:::o;9434:1509::-;9588:6;9596;9604;9612;9620;9669:3;9657:9;9648:7;9644:23;9640:33;9637:120;;;9676:79;;:::i;:::-;9637:120;9796:1;9821:53;9866:7;9857:6;9846:9;9842:22;9821:53;:::i;:::-;9811:63;;9767:117;9923:2;9949:53;9994:7;9985:6;9974:9;9970:22;9949:53;:::i;:::-;9939:63;;9894:118;10079:2;10068:9;10064:18;10051:32;10110:18;10102:6;10099:30;10096:117;;;10132:79;;:::i;:::-;10096:117;10237:78;10307:7;10298:6;10287:9;10283:22;10237:78;:::i;:::-;10227:88;;10022:303;10392:2;10381:9;10377:18;10364:32;10423:18;10415:6;10412:30;10409:117;;;10445:79;;:::i;:::-;10409:117;10550:78;10620:7;10611:6;10600:9;10596:22;10550:78;:::i;:::-;10540:88;;10335:303;10705:3;10694:9;10690:19;10677:33;10737:18;10729:6;10726:30;10723:117;;;10759:79;;:::i;:::-;10723:117;10864:62;10918:7;10909:6;10898:9;10894:22;10864:62;:::i;:::-;10854:72;;10648:288;9434:1509;;;;;;;;:::o;10949:311::-;11026:4;11116:18;11108:6;11105:30;11102:56;;;11138:18;;:::i;:::-;11102:56;11188:4;11180:6;11176:17;11168:25;;11248:4;11242;11238:15;11230:23;;10949:311;;;:::o;11283:710::-;11379:5;11404:81;11420:64;11477:6;11420:64;:::i;:::-;11404:81;:::i;:::-;11395:90;;11505:5;11534:6;11527:5;11520:21;11568:4;11561:5;11557:16;11550:23;;11621:4;11613:6;11609:17;11601:6;11597:30;11650:3;11642:6;11639:15;11636:122;;;11669:79;;:::i;:::-;11636:122;11784:6;11767:220;11801:6;11796:3;11793:15;11767:220;;;11876:3;11905:37;11938:3;11926:10;11905:37;:::i;:::-;11900:3;11893:50;11972:4;11967:3;11963:14;11956:21;;11843:144;11827:4;11822:3;11818:14;11811:21;;11767:220;;;11771:21;11385:608;;11283:710;;;;;:::o;12016:370::-;12087:5;12136:3;12129:4;12121:6;12117:17;12113:27;12103:122;;12144:79;;:::i;:::-;12103:122;12261:6;12248:20;12286:94;12376:3;12368:6;12361:4;12353:6;12349:17;12286:94;:::i;:::-;12277:103;;12093:293;12016:370;;;;:::o;12392:894::-;12510:6;12518;12567:2;12555:9;12546:7;12542:23;12538:32;12535:119;;;12573:79;;:::i;:::-;12535:119;12721:1;12710:9;12706:17;12693:31;12751:18;12743:6;12740:30;12737:117;;;12773:79;;:::i;:::-;12737:117;12878:78;12948:7;12939:6;12928:9;12924:22;12878:78;:::i;:::-;12868:88;;12664:302;13033:2;13022:9;13018:18;13005:32;13064:18;13056:6;13053:30;13050:117;;;13086:79;;:::i;:::-;13050:117;13191:78;13261:7;13252:6;13241:9;13237:22;13191:78;:::i;:::-;13181:88;;12976:303;12392:894;;;;;:::o;13292:114::-;13359:6;13393:5;13387:12;13377:22;;13292:114;;;:::o;13412:184::-;13511:11;13545:6;13540:3;13533:19;13585:4;13580:3;13576:14;13561:29;;13412:184;;;;:::o;13602:132::-;13669:4;13692:3;13684:11;;13722:4;13717:3;13713:14;13705:22;;13602:132;;;:::o;13740:108::-;13817:24;13835:5;13817:24;:::i;:::-;13812:3;13805:37;13740:108;;:::o;13854:179::-;13923:10;13944:46;13986:3;13978:6;13944:46;:::i;:::-;14022:4;14017:3;14013:14;13999:28;;13854:179;;;;:::o;14039:113::-;14109:4;14141;14136:3;14132:14;14124:22;;14039:113;;;:::o;14188:732::-;14307:3;14336:54;14384:5;14336:54;:::i;:::-;14406:86;14485:6;14480:3;14406:86;:::i;:::-;14399:93;;14516:56;14566:5;14516:56;:::i;:::-;14595:7;14626:1;14611:284;14636:6;14633:1;14630:13;14611:284;;;14712:6;14706:13;14739:63;14798:3;14783:13;14739:63;:::i;:::-;14732:70;;14825:60;14878:6;14825:60;:::i;:::-;14815:70;;14671:224;14658:1;14655;14651:9;14646:14;;14611:284;;;14615:14;14911:3;14904:10;;14312:608;;;14188:732;;;;:::o;14926:373::-;15069:4;15107:2;15096:9;15092:18;15084:26;;15156:9;15150:4;15146:20;15142:1;15131:9;15127:17;15120:47;15184:108;15287:4;15278:6;15184:108;:::i;:::-;15176:116;;14926:373;;;;:::o;15305:108::-;15382:24;15400:5;15382:24;:::i;:::-;15377:3;15370:37;15305:108;;:::o;15419:159::-;15493:11;15527:6;15522:3;15515:19;15567:4;15562:3;15558:14;15543:29;;15419:159;;;;:::o;15584:357::-;15662:3;15690:39;15723:5;15690:39;:::i;:::-;15745:61;15799:6;15794:3;15745:61;:::i;:::-;15738:68;;15815:65;15873:6;15868:3;15861:4;15854:5;15850:16;15815:65;:::i;:::-;15905:29;15927:6;15905:29;:::i;:::-;15900:3;15896:39;15889:46;;15666:275;15584:357;;;;:::o;15947:99::-;16018:21;16033:5;16018:21;:::i;:::-;16013:3;16006:34;15947:99;;:::o;16130:1134::-;16245:3;16281:4;16276:3;16272:14;16371:4;16364:5;16360:16;16354:23;16390:63;16447:4;16442:3;16438:14;16424:12;16390:63;:::i;:::-;16296:167;16550:4;16543:5;16539:16;16533:23;16569:63;16626:4;16621:3;16617:14;16603:12;16569:63;:::i;:::-;16473:169;16723:4;16716:5;16712:16;16706:23;16776:3;16770:4;16766:14;16759:4;16754:3;16750:14;16743:38;16802:73;16870:4;16856:12;16802:73;:::i;:::-;16794:81;;16652:234;16975:4;16968:5;16964:16;16958:23;16994:63;17051:4;17046:3;17042:14;17028:12;16994:63;:::i;:::-;16896:171;17151:4;17144:5;17140:16;17134:23;17170:57;17221:4;17216:3;17212:14;17198:12;17170:57;:::i;:::-;17077:160;17254:4;17247:11;;16250:1014;16130:1134;;;;:::o;17270:365::-;17409:4;17447:2;17436:9;17432:18;17424:26;;17496:9;17490:4;17486:20;17482:1;17471:9;17467:17;17460:47;17524:104;17623:4;17614:6;17524:104;:::i;:::-;17516:112;;17270:365;;;;:::o;17641:474::-;17709:6;17717;17766:2;17754:9;17745:7;17741:23;17737:32;17734:119;;;17772:79;;:::i;:::-;17734:119;17892:1;17917:53;17962:7;17953:6;17942:9;17938:22;17917:53;:::i;:::-;17907:63;;17863:117;18019:2;18045:53;18090:7;18081:6;18070:9;18066:22;18045:53;:::i;:::-;18035:63;;17990:118;17641:474;;;;;:::o;18121:222::-;18214:4;18252:2;18241:9;18237:18;18229:26;;18265:71;18333:1;18322:9;18318:17;18309:6;18265:71;:::i;:::-;18121:222;;;;:::o;18349:308::-;18411:4;18501:18;18493:6;18490:30;18487:56;;;18523:18;;:::i;:::-;18487:56;18561:29;18583:6;18561:29;:::i;:::-;18553:37;;18645:4;18639;18635:15;18627:23;;18349:308;;;:::o;18663:425::-;18741:5;18766:66;18782:49;18824:6;18782:49;:::i;:::-;18766:66;:::i;:::-;18757:75;;18855:6;18848:5;18841:21;18893:4;18886:5;18882:16;18931:3;18922:6;18917:3;18913:16;18910:25;18907:112;;;18938:79;;:::i;:::-;18907:112;19028:54;19075:6;19070:3;19065;19028:54;:::i;:::-;18747:341;18663:425;;;;;:::o;19108:340::-;19164:5;19213:3;19206:4;19198:6;19194:17;19190:27;19180:122;;19221:79;;:::i;:::-;19180:122;19338:6;19325:20;19363:79;19438:3;19430:6;19423:4;19415:6;19411:17;19363:79;:::i;:::-;19354:88;;19170:278;19108:340;;;;:::o;19454:509::-;19523:6;19572:2;19560:9;19551:7;19547:23;19543:32;19540:119;;;19578:79;;:::i;:::-;19540:119;19726:1;19715:9;19711:17;19698:31;19756:18;19748:6;19745:30;19742:117;;;19778:79;;:::i;:::-;19742:117;19883:63;19938:7;19929:6;19918:9;19914:22;19883:63;:::i;:::-;19873:73;;19669:287;19454:509;;;;:::o;19969:116::-;20039:21;20054:5;20039:21;:::i;:::-;20032:5;20029:32;20019:60;;20075:1;20072;20065:12;20019:60;19969:116;:::o;20091:133::-;20134:5;20172:6;20159:20;20150:29;;20188:30;20212:5;20188:30;:::i;:::-;20091:133;;;;:::o;20230:468::-;20295:6;20303;20352:2;20340:9;20331:7;20327:23;20323:32;20320:119;;;20358:79;;:::i;:::-;20320:119;20478:1;20503:53;20548:7;20539:6;20528:9;20524:22;20503:53;:::i;:::-;20493:63;;20449:117;20605:2;20631:50;20673:7;20664:6;20653:9;20649:22;20631:50;:::i;:::-;20621:60;;20576:115;20230:468;;;;;:::o;20704:474::-;20772:6;20780;20829:2;20817:9;20808:7;20804:23;20800:32;20797:119;;;20835:79;;:::i;:::-;20797:119;20955:1;20980:53;21025:7;21016:6;21005:9;21001:22;20980:53;:::i;:::-;20970:63;;20926:117;21082:2;21108:53;21153:7;21144:6;21133:9;21129:22;21108:53;:::i;:::-;21098:63;;21053:118;20704:474;;;;;:::o;21184:1089::-;21288:6;21296;21304;21312;21320;21369:3;21357:9;21348:7;21344:23;21340:33;21337:120;;;21376:79;;:::i;:::-;21337:120;21496:1;21521:53;21566:7;21557:6;21546:9;21542:22;21521:53;:::i;:::-;21511:63;;21467:117;21623:2;21649:53;21694:7;21685:6;21674:9;21670:22;21649:53;:::i;:::-;21639:63;;21594:118;21751:2;21777:53;21822:7;21813:6;21802:9;21798:22;21777:53;:::i;:::-;21767:63;;21722:118;21879:2;21905:53;21950:7;21941:6;21930:9;21926:22;21905:53;:::i;:::-;21895:63;;21850:118;22035:3;22024:9;22020:19;22007:33;22067:18;22059:6;22056:30;22053:117;;;22089:79;;:::i;:::-;22053:117;22194:62;22248:7;22239:6;22228:9;22224:22;22194:62;:::i;:::-;22184:72;;21978:288;21184:1089;;;;;;;;:::o;22279:329::-;22338:6;22387:2;22375:9;22366:7;22362:23;22358:32;22355:119;;;22393:79;;:::i;:::-;22355:119;22513:1;22538:53;22583:7;22574:6;22563:9;22559:22;22538:53;:::i;:::-;22528:63;;22484:117;22279:329;;;;:::o;22614:180::-;22662:77;22659:1;22652:88;22759:4;22756:1;22749:15;22783:4;22780:1;22773:15;22800:320;22844:6;22881:1;22875:4;22871:12;22861:22;;22928:1;22922:4;22918:12;22949:18;22939:81;;23005:4;22997:6;22993:17;22983:27;;22939:81;23067:2;23059:6;23056:14;23036:18;23033:38;23030:84;;23086:18;;:::i;:::-;23030:84;22851:269;22800:320;;;:::o;23126:170::-;23266:22;23262:1;23254:6;23250:14;23243:46;23126:170;:::o;23302:366::-;23444:3;23465:67;23529:2;23524:3;23465:67;:::i;:::-;23458:74;;23541:93;23630:3;23541:93;:::i;:::-;23659:2;23654:3;23650:12;23643:19;;23302:366;;;:::o;23674:419::-;23840:4;23878:2;23867:9;23863:18;23855:26;;23927:9;23921:4;23917:20;23913:1;23902:9;23898:17;23891:47;23955:131;24081:4;23955:131;:::i;:::-;23947:139;;23674:419;;;:::o;24099:332::-;24220:4;24258:2;24247:9;24243:18;24235:26;;24271:71;24339:1;24328:9;24324:17;24315:6;24271:71;:::i;:::-;24352:72;24420:2;24409:9;24405:18;24396:6;24352:72;:::i;:::-;24099:332;;;;;:::o;24437:::-;24558:4;24596:2;24585:9;24581:18;24573:26;;24609:71;24677:1;24666:9;24662:17;24653:6;24609:71;:::i;:::-;24690:72;24758:2;24747:9;24743:18;24734:6;24690:72;:::i;:::-;24437:332;;;;;:::o;24775:180::-;24823:77;24820:1;24813:88;24920:4;24917:1;24910:15;24944:4;24941:1;24934:15;24961:180;25009:77;25006:1;24999:88;25106:4;25103:1;25096:15;25130:4;25127:1;25120:15;25147:233;25186:3;25209:24;25227:5;25209:24;:::i;:::-;25200:33;;25255:66;25248:5;25245:77;25242:103;;25325:18;;:::i;:::-;25242:103;25372:1;25365:5;25361:13;25354:20;;25147:233;;;:::o;25386:141::-;25435:4;25458:3;25450:11;;25481:3;25478:1;25471:14;25515:4;25512:1;25502:18;25494:26;;25386:141;;;:::o;25533:93::-;25570:6;25617:2;25612;25605:5;25601:14;25597:23;25587:33;;25533:93;;;:::o;25632:107::-;25676:8;25726:5;25720:4;25716:16;25695:37;;25632:107;;;;:::o;25745:393::-;25814:6;25864:1;25852:10;25848:18;25887:97;25917:66;25906:9;25887:97;:::i;:::-;26005:39;26035:8;26024:9;26005:39;:::i;:::-;25993:51;;26077:4;26073:9;26066:5;26062:21;26053:30;;26126:4;26116:8;26112:19;26105:5;26102:30;26092:40;;25821:317;;25745:393;;;;;:::o;26144:60::-;26172:3;26193:5;26186:12;;26144:60;;;:::o;26210:142::-;26260:9;26293:53;26311:34;26320:24;26338:5;26320:24;:::i;:::-;26311:34;:::i;:::-;26293:53;:::i;:::-;26280:66;;26210:142;;;:::o;26358:75::-;26401:3;26422:5;26415:12;;26358:75;;;:::o;26439:269::-;26549:39;26580:7;26549:39;:::i;:::-;26610:91;26659:41;26683:16;26659:41;:::i;:::-;26651:6;26644:4;26638:11;26610:91;:::i;:::-;26604:4;26597:105;26515:193;26439:269;;;:::o;26714:73::-;26759:3;26714:73;:::o;26793:189::-;26870:32;;:::i;:::-;26911:65;26969:6;26961;26955:4;26911:65;:::i;:::-;26846:136;26793:189;;:::o;26988:186::-;27048:120;27065:3;27058:5;27055:14;27048:120;;;27119:39;27156:1;27149:5;27119:39;:::i;:::-;27092:1;27085:5;27081:13;27072:22;;27048:120;;;26988:186;;:::o;27180:543::-;27281:2;27276:3;27273:11;27270:446;;;27315:38;27347:5;27315:38;:::i;:::-;27399:29;27417:10;27399:29;:::i;:::-;27389:8;27385:44;27582:2;27570:10;27567:18;27564:49;;;27603:8;27588:23;;27564:49;27626:80;27682:22;27700:3;27682:22;:::i;:::-;27672:8;27668:37;27655:11;27626:80;:::i;:::-;27285:431;;27270:446;27180:543;;;:::o;27729:117::-;27783:8;27833:5;27827:4;27823:16;27802:37;;27729:117;;;;:::o;27852:169::-;27896:6;27929:51;27977:1;27973:6;27965:5;27962:1;27958:13;27929:51;:::i;:::-;27925:56;28010:4;28004;28000:15;27990:25;;27903:118;27852:169;;;;:::o;28026:295::-;28102:4;28248:29;28273:3;28267:4;28248:29;:::i;:::-;28240:37;;28310:3;28307:1;28303:11;28297:4;28294:21;28286:29;;28026:295;;;;:::o;28326:1395::-;28443:37;28476:3;28443:37;:::i;:::-;28545:18;28537:6;28534:30;28531:56;;;28567:18;;:::i;:::-;28531:56;28611:38;28643:4;28637:11;28611:38;:::i;:::-;28696:67;28756:6;28748;28742:4;28696:67;:::i;:::-;28790:1;28814:4;28801:17;;28846:2;28838:6;28835:14;28863:1;28858:618;;;;29520:1;29537:6;29534:77;;;29586:9;29581:3;29577:19;29571:26;29562:35;;29534:77;29637:67;29697:6;29690:5;29637:67;:::i;:::-;29631:4;29624:81;29493:222;28828:887;;28858:618;28910:4;28906:9;28898:6;28894:22;28944:37;28976:4;28944:37;:::i;:::-;29003:1;29017:208;29031:7;29028:1;29025:14;29017:208;;;29110:9;29105:3;29101:19;29095:26;29087:6;29080:42;29161:1;29153:6;29149:14;29139:24;;29208:2;29197:9;29193:18;29180:31;;29054:4;29051:1;29047:12;29042:17;;29017:208;;;29253:6;29244:7;29241:19;29238:179;;;29311:9;29306:3;29302:19;29296:26;29354:48;29396:4;29388:6;29384:17;29373:9;29354:48;:::i;:::-;29346:6;29339:64;29261:156;29238:179;29463:1;29459;29451:6;29447:14;29443:22;29437:4;29430:36;28865:611;;;28828:887;;28418:1303;;;28326:1395;;:::o;29727:85::-;29772:7;29801:5;29790:16;;29727:85;;;:::o;29818:158::-;29876:9;29909:61;29927:42;29936:32;29962:5;29936:32;:::i;:::-;29927:42;:::i;:::-;29909:61;:::i;:::-;29896:74;;29818:158;;;:::o;29982:147::-;30077:45;30116:5;30077:45;:::i;:::-;30072:3;30065:58;29982:147;;:::o;30135:238::-;30236:4;30274:2;30263:9;30259:18;30251:26;;30287:79;30363:1;30352:9;30348:17;30339:6;30287:79;:::i;:::-;30135:238;;;;:::o;30379:223::-;30519:34;30515:1;30507:6;30503:14;30496:58;30588:6;30583:2;30575:6;30571:15;30564:31;30379:223;:::o;30608:366::-;30750:3;30771:67;30835:2;30830:3;30771:67;:::i;:::-;30764:74;;30847:93;30936:3;30847:93;:::i;:::-;30965:2;30960:3;30956:12;30949:19;;30608:366;;;:::o;30980:419::-;31146:4;31184:2;31173:9;31169:18;31161:26;;31233:9;31227:4;31223:20;31219:1;31208:9;31204:17;31197:47;31261:131;31387:4;31261:131;:::i;:::-;31253:139;;30980:419;;;:::o;31405:553::-;31582:4;31620:3;31609:9;31605:19;31597:27;;31634:71;31702:1;31691:9;31687:17;31678:6;31634:71;:::i;:::-;31715:72;31783:2;31772:9;31768:18;31759:6;31715:72;:::i;:::-;31797;31865:2;31854:9;31850:18;31841:6;31797:72;:::i;:::-;31879;31947:2;31936:9;31932:18;31923:6;31879:72;:::i;:::-;31405:553;;;;;;;:::o;31964:191::-;32004:3;32023:20;32041:1;32023:20;:::i;:::-;32018:25;;32057:20;32075:1;32057:20;:::i;:::-;32052:25;;32100:1;32097;32093:9;32086:16;;32121:3;32118:1;32115:10;32112:36;;;32128:18;;:::i;:::-;32112:36;31964:191;;;;:::o;32161:634::-;32382:4;32420:2;32409:9;32405:18;32397:26;;32469:9;32463:4;32459:20;32455:1;32444:9;32440:17;32433:47;32497:108;32600:4;32591:6;32497:108;:::i;:::-;32489:116;;32652:9;32646:4;32642:20;32637:2;32626:9;32622:18;32615:48;32680:108;32783:4;32774:6;32680:108;:::i;:::-;32672:116;;32161:634;;;;;:::o;32801:98::-;32852:6;32886:5;32880:12;32870:22;;32801:98;;;:::o;32905:168::-;32988:11;33022:6;33017:3;33010:19;33062:4;33057:3;33053:14;33038:29;;32905:168;;;;:::o;33079:373::-;33165:3;33193:38;33225:5;33193:38;:::i;:::-;33247:70;33310:6;33305:3;33247:70;:::i;:::-;33240:77;;33326:65;33384:6;33379:3;33372:4;33365:5;33361:16;33326:65;:::i;:::-;33416:29;33438:6;33416:29;:::i;:::-;33411:3;33407:39;33400:46;;33169:283;33079:373;;;;:::o;33458:751::-;33681:4;33719:3;33708:9;33704:19;33696:27;;33733:71;33801:1;33790:9;33786:17;33777:6;33733:71;:::i;:::-;33814:72;33882:2;33871:9;33867:18;33858:6;33814:72;:::i;:::-;33896;33964:2;33953:9;33949:18;33940:6;33896:72;:::i;:::-;33978;34046:2;34035:9;34031:18;34022:6;33978:72;:::i;:::-;34098:9;34092:4;34088:20;34082:3;34071:9;34067:19;34060:49;34126:76;34197:4;34188:6;34126:76;:::i;:::-;34118:84;;33458:751;;;;;;;;:::o;34215:141::-;34271:5;34302:6;34296:13;34287:22;;34318:32;34344:5;34318:32;:::i;:::-;34215:141;;;;:::o;34362:349::-;34431:6;34480:2;34468:9;34459:7;34455:23;34451:32;34448:119;;;34486:79;;:::i;:::-;34448:119;34606:1;34631:63;34686:7;34677:6;34666:9;34662:22;34631:63;:::i;:::-;34621:73;;34577:127;34362:349;;;;:::o;34717:1053::-;35040:4;35078:3;35067:9;35063:19;35055:27;;35092:71;35160:1;35149:9;35145:17;35136:6;35092:71;:::i;:::-;35173:72;35241:2;35230:9;35226:18;35217:6;35173:72;:::i;:::-;35292:9;35286:4;35282:20;35277:2;35266:9;35262:18;35255:48;35320:108;35423:4;35414:6;35320:108;:::i;:::-;35312:116;;35475:9;35469:4;35465:20;35460:2;35449:9;35445:18;35438:48;35503:108;35606:4;35597:6;35503:108;:::i;:::-;35495:116;;35659:9;35653:4;35649:20;35643:3;35632:9;35628:19;35621:49;35687:76;35758:4;35749:6;35687:76;:::i;:::-;35679:84;;34717:1053;;;;;;;;:::o"},"methodIdentifiers":{"balanceOf(address,uint256)":"00fdd58e","balanceOfBatch(address[],uint256[])":"4e1273f4","createEvent(string)":"9bc2bc71","events(uint256)":"0b791430","getEvent(uint256)":"6d1884e0","getOrganizerEvents(address)":"ff9f5970","hasClaimed(uint256,address)":"873f6f9e","isApprovedForAll(address,address)":"e985e9c5","mintAttendanceToken(uint256)":"da4e5a2c","organizerEvents(address,uint256)":"e4aa47e3","owner()":"8da5cb5b","renounceOwnership()":"715018a6","safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)":"2eb2c2d6","safeTransferFrom(address,address,uint256,uint256,bytes)":"f242432a","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferOwnership(address)":"f2fde38b","uri(uint256)":"0e89341c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"EventCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"attendee\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokenMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"eventUri\",\"type\":\"string\"}],\"name\":\"createEvent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"events\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"getEvent\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalMinted\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"internalType\":\"struct AfterpartyEventToken.Event\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"organizer\",\"type\":\"address\"}],\"name\":\"getOrganizerEvents\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"eventId\",\"type\":\"uint256\"}],\"name\":\"mintAttendanceToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"organizerEvents\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"createEvent(string)\":{\"params\":{\"eventUri\":\"The metadata URI for this event's tokens\"},\"returns\":{\"_0\":\"eventId The ID of the newly created event\"}},\"getEvent(uint256)\":{\"params\":{\"eventId\":\"The ID of the event\"},\"returns\":{\"_0\":\"Event struct with all event details\"}},\"getOrganizerEvents(address)\":{\"params\":{\"organizer\":\"The address of the organizer\"},\"returns\":{\"_0\":\"Array of event IDs\"}},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"mintAttendanceToken(uint256)\":{\"params\":{\"eventId\":\"The ID of the event to mint for\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"params\":{\"tokenId\":\"The token ID (event ID)\"},\"returns\":{\"_0\":\"The metadata URI for the token\"}}},\"title\":\"AfterpartyEventToken - ERC1155 tokens for event attendance\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createEvent(string)\":{\"notice\":\"Create a new event and mint the first token to the organizer\"},\"getEvent(uint256)\":{\"notice\":\"Get event details by ID\"},\"getOrganizerEvents(address)\":{\"notice\":\"Get all events created by an organizer\"},\"mintAttendanceToken(uint256)\":{\"notice\":\"Mint a token for an event attendee\"},\"uri(uint256)\":{\"notice\":\"Override URI function to return event-specific URIs\"}},\"notice\":\"Each event gets its own token ID, attendees can mint editions\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AfterpartyEventToken.sol\":\"AfterpartyEventToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\":{\"keccak256\":\"0x22933f0f4897ff70a991c3baebfbc2574fd052dc4bae7fcafec45b07c1f23dd3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://13674cffad18cec55f013056496d7d2e3a34bd7bdbe23d1ef0c7588088c73367\",\"dweb:/ipfs/QmcBkrwxNvCApG48Gyby2L6qCNtuhaFncGpbJt3zuukTmu\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x1d7a05b3219532ea5ece50a80cf390cac9109dc74e07763adfa463ab5a3af0dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://687e2ec572d0e63827bb0025b91f2246be4c938f830ef4b4c288ee2e3727d5ca\",\"dweb:/ipfs/QmZXWSAQ9ftVrqNEa5ZTpN4wxvzCgsSW12cgiSRkrLTpQ8\"]},\"@openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\":{\"keccak256\":\"0x61a23d601c2ab69dd726ac55058604cbda98e1d728ba31a51c379a3f9eeea715\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8cbb06152d82ebdd5ba1d33454e5759492040f309a82637c7e99c948a04fa20\",\"dweb:/ipfs/QmQQuLr6WSfLu97pMEh6XLefk99TSj9k5Qu1zXGPepwGiK\"]},\"@openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\":{\"keccak256\":\"0x35d120c427299af1525aaf07955314d9e36a62f14408eb93dec71a2e001f74d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://743e38acf441eece428c008be399c40a3ca5b2d595d58faf656cbdbac1a45374\",\"dweb:/ipfs/QmcWDuWkndox3dxa5P7ZgpKy3iuQKkxBq1cR9hPV1ZzAfa\"]},\"@openzeppelin/contracts/token/ERC1155/utils/ERC1155Utils.sol\":{\"keccak256\":\"0x22f099c02c252dd1f6ddc464916ce683294a63b23b3c6ee3d290b77398e2474b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://82d2ba4b77ecc4f70211e0de1a920e3ea29eb86c3e16ef8f2a7d746c72a97f1e\",\"dweb:/ipfs/QmYBqATARQEnxd33jW6iYCuEPaL6KdYyYSoQrjFXZka3of\"]},\"@openzeppelin/contracts/utils/Arrays.sol\":{\"keccak256\":\"0x55a4fdb408e3db950b48f4a6131e538980be8c5f48ee59829d92d66477140cd6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e1ad251e692822ce1494135a4ecb5b97c19b90aa82418fd2959ce32017953fd\",\"dweb:/ipfs/QmT6N7mf6heZYhY2BAQ5kwZp9o3SXzGVdkMqUszx67WRDN\"]},\"@openzeppelin/contracts/utils/Comparators.sol\":{\"keccak256\":\"0x302eecd8cf323b4690e3494a7d960b3cbce077032ab8ef655b323cdd136cec58\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49ba706f1bc476d68fe6c1fad75517acea4e9e275be0989b548e292eb3a3eacd\",\"dweb:/ipfs/QmeBpvcdGWzWMKTQESUCEhHgnEQYYATVwPxLMxa6vMT7jC\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/SlotDerivation.sol\":{\"keccak256\":\"0x67672e4ca1dafdcc661d4eba8475cfac631fa0933309258e3af7644b92e1fb26\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30192451f05ea5ddb0c18bd0f9003f098505836ba19c08a9c365adf829454da2\",\"dweb:/ipfs/QmfCuZSCTyCdFoSKn7MSaN6hZksnQn9ZhrZDAdRTCbwGu2\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"contracts/AfterpartyEventToken.sol\":{\"keccak256\":\"0xd77eabfdd9803fcd3e65014e9adca8c65b3b75dd8d2507e466b92edd0011a6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a672aef4669122f519b4332e57cdfb9024aba6bc2b27f3c0d2e98b6926b00578\",\"dweb:/ipfs/QmXWiQTkDLaEcfaY9oREECFAaYEjyNb1E3TfettsBdFNsP\"]}},\"version\":1}"}},"contracts/AttendanceToken.sol":{"AttendanceToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721IncorrectOwner","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721InsufficientApproval","type":"error"},{"inputs":[{"internalType":"address","name":"approver","type":"address"}],"name":"ERC721InvalidApprover","type":"error"},{"inputs":[{"internalType":"address","name":"operator","type":"address"}],"name":"ERC721InvalidOperator","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"ERC721InvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"receiver","type":"address"}],"name":"ERC721InvalidReceiver","type":"error"},{"inputs":[{"internalType":"address","name":"sender","type":"address"}],"name":"ERC721InvalidSender","type":"error"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ERC721NonexistentToken","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"}],"name":"claim","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"hasClaimed","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"nextTokenId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1606":{"entryPoint":null,"id":1606,"parameterSlots":2,"returnSlots":0},"@_50":{"entryPoint":null,"id":50,"parameterSlots":1,"returnSlots":0},"@_9265":{"entryPoint":null,"id":9265,"parameterSlots":0,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":311,"id":146,"parameterSlots":1,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1426,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":1443,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":667,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":509,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":988,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":1406,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":1374,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":803,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":949,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":823,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1143,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":688,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":614,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":1113,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":813,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":1081,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":567,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":520,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":863,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":704,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":1068,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":921,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":717,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":873,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":916,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5817:28","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:28","statements":[{"nodeType":"YulAssignment","src":"77:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:28"},"nodeType":"YulFunctionCall","src":"87:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:28","type":""}],"src":"7:99:28"},{"body":{"nodeType":"YulBlock","src":"140:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:28"},"nodeType":"YulFunctionCall","src":"150:88:28"},"nodeType":"YulExpressionStatement","src":"150:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:28"},"nodeType":"YulFunctionCall","src":"247:15:28"},"nodeType":"YulExpressionStatement","src":"247:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:28"},"nodeType":"YulFunctionCall","src":"271:15:28"},"nodeType":"YulExpressionStatement","src":"271:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:28"},{"body":{"nodeType":"YulBlock","src":"326:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:28"},"nodeType":"YulFunctionCall","src":"336:88:28"},"nodeType":"YulExpressionStatement","src":"336:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:28"},"nodeType":"YulFunctionCall","src":"433:15:28"},"nodeType":"YulExpressionStatement","src":"433:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:28"},"nodeType":"YulFunctionCall","src":"457:15:28"},"nodeType":"YulExpressionStatement","src":"457:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:28"},{"body":{"nodeType":"YulBlock","src":"535:269:28","statements":[{"nodeType":"YulAssignment","src":"545:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:28"},"nodeType":"YulFunctionCall","src":"555:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:28"},"nodeType":"YulFunctionCall","src":"602:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:28","statements":[{"nodeType":"YulAssignment","src":"667:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:28"},"nodeType":"YulFunctionCall","src":"677:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:28"},"nodeType":"YulFunctionCall","src":"626:26:28"},"nodeType":"YulIf","src":"623:81:28"},{"body":{"nodeType":"YulBlock","src":"756:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:28"},"nodeType":"YulFunctionCall","src":"770:18:28"},"nodeType":"YulExpressionStatement","src":"770:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:28"},"nodeType":"YulFunctionCall","src":"740:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:28"},"nodeType":"YulFunctionCall","src":"717:38:28"},"nodeType":"YulIf","src":"714:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:28","type":""}],"src":"484:320:28"},{"body":{"nodeType":"YulBlock","src":"864:87:28","statements":[{"nodeType":"YulAssignment","src":"874:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:28"},"nodeType":"YulFunctionCall","src":"895:14:28"},"nodeType":"YulExpressionStatement","src":"895:14:28"},{"nodeType":"YulAssignment","src":"918:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:28"},"nodeType":"YulFunctionCall","src":"926:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:28","type":""}],"src":"810:141:28"},{"body":{"nodeType":"YulBlock","src":"1001:49:28","statements":[{"nodeType":"YulAssignment","src":"1011:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:28"},"nodeType":"YulFunctionCall","src":"1025:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:28"},"nodeType":"YulFunctionCall","src":"1021:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:28","type":""}],"src":"957:93:28"},{"body":{"nodeType":"YulBlock","src":"1109:54:28","statements":[{"nodeType":"YulAssignment","src":"1119:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:28"},"nodeType":"YulFunctionCall","src":"1140:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:28","type":""}],"src":"1056:107:28"},{"body":{"nodeType":"YulBlock","src":"1245:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:28"},"nodeType":"YulFunctionCall","src":"1272:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:28"},"nodeType":"YulFunctionCall","src":"1311:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:28","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:28"},"nodeType":"YulFunctionCall","src":"1429:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:28"}]},{"nodeType":"YulAssignment","src":"1477:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:28"},"nodeType":"YulFunctionCall","src":"1497:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:28"},"nodeType":"YulFunctionCall","src":"1486:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:28"}]},{"nodeType":"YulAssignment","src":"1516:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:28"},"nodeType":"YulFunctionCall","src":"1536:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:28"},"nodeType":"YulFunctionCall","src":"1526:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:28","type":""}],"src":"1169:393:28"},{"body":{"nodeType":"YulBlock","src":"1613:32:28","statements":[{"nodeType":"YulAssignment","src":"1623:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:28","type":""}],"src":"1568:77:28"},{"body":{"nodeType":"YulBlock","src":"1683:28:28","statements":[{"nodeType":"YulAssignment","src":"1693:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:28","type":""}],"src":"1651:60:28"},{"body":{"nodeType":"YulBlock","src":"1777:82:28","statements":[{"nodeType":"YulAssignment","src":"1787:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:28"},"nodeType":"YulFunctionCall","src":"1827:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:28"},"nodeType":"YulFunctionCall","src":"1818:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:28"},"nodeType":"YulFunctionCall","src":"1800:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:28","type":""}],"src":"1717:142:28"},{"body":{"nodeType":"YulBlock","src":"1912:28:28","statements":[{"nodeType":"YulAssignment","src":"1922:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:28","type":""}],"src":"1865:75:28"},{"body":{"nodeType":"YulBlock","src":"2022:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:28"},"nodeType":"YulFunctionCall","src":"2056:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:28"},"nodeType":"YulFunctionCall","src":"2145:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:28"},"nodeType":"YulFunctionCall","src":"2166:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:28"},"nodeType":"YulFunctionCall","src":"2117:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:28"},"nodeType":"YulFunctionCall","src":"2104:105:28"},"nodeType":"YulExpressionStatement","src":"2104:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:28","type":""}],"src":"1946:269:28"},{"body":{"nodeType":"YulBlock","src":"2270:24:28","statements":[{"nodeType":"YulAssignment","src":"2280:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:28","type":""}],"src":"2221:73:28"},{"body":{"nodeType":"YulBlock","src":"2353:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:28"},"nodeType":"YulFunctionCall","src":"2377:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:28"},"nodeType":"YulFunctionCall","src":"2418:65:28"},"nodeType":"YulExpressionStatement","src":"2418:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:28","type":""}],"src":"2300:189:28"},{"body":{"nodeType":"YulBlock","src":"2545:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:28"},"nodeType":"YulFunctionCall","src":"2626:39:28"},"nodeType":"YulExpressionStatement","src":"2626:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:28"},"nodeType":"YulFunctionCall","src":"2562:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:28","statements":[{"nodeType":"YulAssignment","src":"2579:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:28"},"nodeType":"YulFunctionCall","src":"2588:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:28","statements":[]},"src":"2555:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:28","type":""}],"src":"2495:186:28"},{"body":{"nodeType":"YulBlock","src":"2766:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:28"},"nodeType":"YulFunctionCall","src":"2822:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:28"},"nodeType":"YulFunctionCall","src":"2906:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:28"},"nodeType":"YulFunctionCall","src":"2892:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:28","statements":[{"nodeType":"YulAssignment","src":"3095:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:28"},"nodeType":"YulFunctionCall","src":"3074:18:28"},"nodeType":"YulIf","src":"3071:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:28"},"nodeType":"YulFunctionCall","src":"3189:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:28"},"nodeType":"YulFunctionCall","src":"3175:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:28"},"nodeType":"YulFunctionCall","src":"3133:80:28"},"nodeType":"YulExpressionStatement","src":"3133:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:28"},"nodeType":"YulFunctionCall","src":"2780:11:28"},"nodeType":"YulIf","src":"2777:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:28","type":""}],"src":"2687:543:28"},{"body":{"nodeType":"YulBlock","src":"3299:54:28","statements":[{"nodeType":"YulAssignment","src":"3309:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:28"},"nodeType":"YulFunctionCall","src":"3330:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:28","type":""}],"src":"3236:117:28"},{"body":{"nodeType":"YulBlock","src":"3410:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:28"},"nodeType":"YulFunctionCall","src":"3465:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:28"},"nodeType":"YulFunctionCall","src":"3480:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:28"},"nodeType":"YulFunctionCall","src":"3436:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:28"},"nodeType":"YulFunctionCall","src":"3432:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:28","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:28"},"nodeType":"YulFunctionCall","src":"3507:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:28","type":""}],"src":"3359:169:28"},{"body":{"nodeType":"YulBlock","src":"3614:214:28","statements":[{"nodeType":"YulAssignment","src":"3747:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:28"},"nodeType":"YulFunctionCall","src":"3755:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:28"}]},{"nodeType":"YulAssignment","src":"3793:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:28"},"nodeType":"YulFunctionCall","src":"3810:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:28"},"nodeType":"YulFunctionCall","src":"3801:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:28","type":""}],"src":"3533:295:28"},{"body":{"nodeType":"YulBlock","src":"3925:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:28"},"nodeType":"YulFunctionCall","src":"3950:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:28"},"nodeType":"YulFunctionCall","src":"4074:18:28"},"nodeType":"YulExpressionStatement","src":"4074:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:28"},"nodeType":"YulFunctionCall","src":"4041:30:28"},"nodeType":"YulIf","src":"4038:56:28"},{"nodeType":"YulVariableDeclaration","src":"4104:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:28"},"nodeType":"YulFunctionCall","src":"4144:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:28"},"nodeType":"YulFunctionCall","src":"4118:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:28"},"nodeType":"YulFunctionCall","src":"4203:67:28"},"nodeType":"YulExpressionStatement","src":"4203:67:28"},{"nodeType":"YulVariableDeclaration","src":"4280:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:28","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:28"},"nodeType":"YulFunctionCall","src":"4413:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:28"},"nodeType":"YulFunctionCall","src":"4401:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:28"},"nodeType":"YulFunctionCall","src":"4451:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:28"},"nodeType":"YulFunctionCall","src":"4608:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:28"},"nodeType":"YulFunctionCall","src":"4602:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:28"},"nodeType":"YulFunctionCall","src":"4587:42:28"},"nodeType":"YulExpressionStatement","src":"4587:42:28"},{"nodeType":"YulAssignment","src":"4646:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:28"},"nodeType":"YulFunctionCall","src":"4656:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:28"}]},{"nodeType":"YulAssignment","src":"4687:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:28"},"nodeType":"YulFunctionCall","src":"4700:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:28"},"nodeType":"YulFunctionCall","src":"4532:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:28","statements":[{"nodeType":"YulAssignment","src":"4549:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:28"},"nodeType":"YulFunctionCall","src":"4554:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:28","statements":[]},"src":"4524:208:28"},{"body":{"nodeType":"YulBlock","src":"4768:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:28"},"nodeType":"YulFunctionCall","src":"4809:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:28"},"nodeType":"YulFunctionCall","src":"4803:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:28"},"nodeType":"YulFunctionCall","src":"4891:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:28"},"nodeType":"YulFunctionCall","src":"4861:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:28"},"nodeType":"YulFunctionCall","src":"4846:64:28"},"nodeType":"YulExpressionStatement","src":"4846:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:28"},"nodeType":"YulFunctionCall","src":"4748:19:28"},"nodeType":"YulIf","src":"4745:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:28"},"nodeType":"YulFunctionCall","src":"4954:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:28"},"nodeType":"YulFunctionCall","src":"4950:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:28"},"nodeType":"YulFunctionCall","src":"4937:36:28"},"nodeType":"YulExpressionStatement","src":"4937:36:28"}]},"nodeType":"YulCase","src":"4365:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:28","statements":[{"nodeType":"YulAssignment","src":"5069:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:28"},"nodeType":"YulFunctionCall","src":"5084:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:28"},"nodeType":"YulFunctionCall","src":"5078:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:28"},"nodeType":"YulIf","src":"5041:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:28"},"nodeType":"YulFunctionCall","src":"5144:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:28"},"nodeType":"YulFunctionCall","src":"5131:81:28"},"nodeType":"YulExpressionStatement","src":"5131:81:28"}]},"nodeType":"YulCase","src":"4992:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:28"},"nodeType":"YulFunctionCall","src":"4342:14:28"},"nodeType":"YulSwitch","src":"4335:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:28","type":""}],"src":"3833:1395:28"},{"body":{"nodeType":"YulBlock","src":"5279:81:28","statements":[{"nodeType":"YulAssignment","src":"5289:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5304:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"5311:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5300:3:28"},"nodeType":"YulFunctionCall","src":"5300:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5289:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5261:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5271:7:28","type":""}],"src":"5234:126:28"},{"body":{"nodeType":"YulBlock","src":"5411:51:28","statements":[{"nodeType":"YulAssignment","src":"5421:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5450:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5432:17:28"},"nodeType":"YulFunctionCall","src":"5432:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5421:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5393:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5403:7:28","type":""}],"src":"5366:96:28"},{"body":{"nodeType":"YulBlock","src":"5533:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5550:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5573:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5555:17:28"},"nodeType":"YulFunctionCall","src":"5555:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5543:6:28"},"nodeType":"YulFunctionCall","src":"5543:37:28"},"nodeType":"YulExpressionStatement","src":"5543:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5521:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5528:3:28","type":""}],"src":"5468:118:28"},{"body":{"nodeType":"YulBlock","src":"5690:124:28","statements":[{"nodeType":"YulAssignment","src":"5700:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5712:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5723:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5708:3:28"},"nodeType":"YulFunctionCall","src":"5708:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5700:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5780:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5793:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"5804:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5789:3:28"},"nodeType":"YulFunctionCall","src":"5789:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5736:43:28"},"nodeType":"YulFunctionCall","src":"5736:71:28"},"nodeType":"YulExpressionStatement","src":"5736:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5662:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5674:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5685:4:28","type":""}],"src":"5592:222:28"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405260016007553480156200001657600080fd5b50336040518060400160405280601081526020017f417474656e64616e636520546f6b656e000000000000000000000000000000008152506040518060400160405280600481526020017f4154544e00000000000000000000000000000000000000000000000000000000815250816000908162000095919062000477565b508060019081620000a7919062000477565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200011f5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620001169190620005a3565b60405180910390fd5b62000130816200013760201b60201c565b50620005c0565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200027f57607f821691505b60208210810362000295576200029462000237565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620002ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002c0565b6200030b8683620002c0565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b600062000358620003526200034c8462000323565b6200032d565b62000323565b9050919050565b6000819050919050565b620003748362000337565b6200038c62000383826200035f565b848454620002cd565b825550505050565b600090565b620003a362000394565b620003b081848462000369565b505050565b5b81811015620003d857620003cc60008262000399565b600181019050620003b6565b5050565b601f8211156200042757620003f1816200029b565b620003fc84620002b0565b810160208510156200040c578190505b620004246200041b85620002b0565b830182620003b5565b50505b505050565b600082821c905092915050565b60006200044c600019846008026200042c565b1980831691505092915050565b600062000467838362000439565b9150826002028217905092915050565b6200048282620001fd565b67ffffffffffffffff8111156200049e576200049d62000208565b5b620004aa825462000266565b620004b7828285620003dc565b600060209050601f831160018114620004ef5760008415620004da578287015190505b620004e6858262000459565b86555062000556565b601f198416620004ff866200029b565b60005b82811015620005295784890151825560018201915060208501945060208101905062000502565b8683101562000549578489015162000545601f89168262000439565b8355505b6001600288020188555050505b505050505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200058b826200055e565b9050919050565b6200059d816200057e565b82525050565b6000602082019050620005ba600083018462000592565b92915050565b6122a580620005d06000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a22cb46511610071578063a22cb46514610308578063b88d4fde14610324578063c87b56dd14610340578063e985e9c514610370578063f2fde38b146103a057610121565b8063715018a61461027457806373b2e80e1461027e57806375794a3c146102ae5780638da5cb5b146102cc57806395d89b41146102ea57610121565b80631e83409a116100f45780631e83409a146101c057806323b872dd146101dc57806342842e0e146101f85780636352211e1461021457806370a082311461024457610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611a0c565b6103bc565b60405161014d9190611a54565b60405180910390f35b61015e61049e565b60405161016b9190611aff565b60405180910390f35b61018e60048036038101906101899190611b57565b610530565b60405161019b9190611bc5565b60405180910390f35b6101be60048036038101906101b99190611c0c565b61054c565b005b6101da60048036038101906101d59190611c4c565b610562565b005b6101f660048036038101906101f19190611c79565b610676565b005b610212600480360381019061020d9190611c79565b610778565b005b61022e60048036038101906102299190611b57565b610798565b60405161023b9190611bc5565b60405180910390f35b61025e60048036038101906102599190611c4c565b6107aa565b60405161026b9190611cdb565b60405180910390f35b61027c610864565b005b61029860048036038101906102939190611c4c565b610878565b6040516102a59190611a54565b60405180910390f35b6102b6610898565b6040516102c39190611cdb565b60405180910390f35b6102d461089e565b6040516102e19190611bc5565b60405180910390f35b6102f26108c8565b6040516102ff9190611aff565b60405180910390f35b610322600480360381019061031d9190611d22565b61095a565b005b61033e60048036038101906103399190611e97565b610970565b005b61035a60048036038101906103559190611b57565b610995565b6040516103679190611aff565b60405180910390f35b61038a60048036038101906103859190611f1a565b6109fe565b6040516103979190611a54565b60405180910390f35b6103ba60048036038101906103b59190611c4c565b610a92565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610497575061049682610b18565b5b9050919050565b6060600080546104ad90611f89565b80601f01602080910402602001604051908101604052809291908181526020018280546104d990611f89565b80156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b5050505050905090565b600061053b82610b82565b5061054582610c0a565b9050919050565b61055e8282610559610c47565b610c4f565b5050565b61056a610c61565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90612006565b60405180910390fd5b61060381600754610ce8565b6007600081548092919061061690612055565b91905055506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e85760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106df9190611bc5565b60405180910390fd5b60006106fc83836106f7610c47565b610de1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610772578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107699392919061209d565b60405180910390fd5b50505050565b61079383838360405180602001604052806000815250610970565b505050565b60006107a382610b82565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361081d5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108149190611bc5565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61086c610c61565b6108766000610ffb565b565b60086020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108d790611f89565b80601f016020809104026020016040519081016040528092919081815260200182805461090390611f89565b80156109505780601f1061092557610100808354040283529160200191610950565b820191906000526020600020905b81548152906001019060200180831161093357829003601f168201915b5050505050905090565b61096c610965610c47565b83836110c1565b5050565b61097b848484610676565b61098f610986610c47565b85858585611230565b50505050565b60606109a082610b82565b5060006109ab6113e1565b905060008151116109cb57604051806020016040528060008152506109f6565b806109d5846113f8565b6040516020016109e6929190612110565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a9a610c61565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b0c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b039190611bc5565b60405180910390fd5b610b1581610ffb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610b8e836114c6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bf89190611cdb565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610c5c8383836001611503565b505050565b610c69610c47565b73ffffffffffffffffffffffffffffffffffffffff16610c8761089e565b73ffffffffffffffffffffffffffffffffffffffff1614610ce657610caa610c47565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cdd9190611bc5565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5a5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d519190611bc5565b60405180910390fd5b6000610d6883836000610de1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ddc5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610dd39190611bc5565b60405180910390fd5b505050565b600080610ded846114c6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e2f57610e2e8184866116c8565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec057610e71600085600080611503565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f43576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361113257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111299190611bc5565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112239190611a54565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156113da578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161128f9493929190612189565b6020604051808303816000875af19250505080156112cb57506040513d601f19601f820116820180604052508101906112c891906121ea565b60015b61134f573d80600081146112fb576040519150601f19603f3d011682016040523d82523d6000602084013e611300565b606091505b50600081510361134757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161133e9190611bc5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113d857836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113cf9190611bc5565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060600060016114078461178c565b01905060008167ffffffffffffffff81111561142657611425611d6c565b5b6040519080825280601f01601f1916602001820160405280156114585781602001600182028036833780820191505090505b509050600082602001820190505b6001156114bb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114af576114ae612217565b5b04945060008503611466575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061153c5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561167057600061154c84610b82565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115b757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115ca57506115c881846109fe565b155b1561160c57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116039190611bc5565b60405180910390fd5b811561166e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116d38383836118df565b61178757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174857806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161173f9190611cdb565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161177e929190612246565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106117ea577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117e0576117df612217565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611827576d04ee2d6d415b85acef8100000000838161181d5761181c612217565b5b0492506020810190505b662386f26fc10000831061185657662386f26fc10000838161184c5761184b612217565b5b0492506010810190505b6305f5e100831061187f576305f5e100838161187557611874612217565b5b0492506008810190505b61271083106118a457612710838161189a57611899612217565b5b0492506004810190505b606483106118c757606483816118bd576118bc612217565b5b0492506002810190505b600a83106118d6576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561199757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611958575061195784846109fe565b5b8061199657508273ffffffffffffffffffffffffffffffffffffffff1661197e83610c0a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119e9816119b4565b81146119f457600080fd5b50565b600081359050611a06816119e0565b92915050565b600060208284031215611a2257611a216119aa565b5b6000611a30848285016119f7565b91505092915050565b60008115159050919050565b611a4e81611a39565b82525050565b6000602082019050611a696000830184611a45565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aa9578082015181840152602081019050611a8e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad182611a6f565b611adb8185611a7a565b9350611aeb818560208601611a8b565b611af481611ab5565b840191505092915050565b60006020820190508181036000830152611b198184611ac6565b905092915050565b6000819050919050565b611b3481611b21565b8114611b3f57600080fd5b50565b600081359050611b5181611b2b565b92915050565b600060208284031215611b6d57611b6c6119aa565b5b6000611b7b84828501611b42565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611baf82611b84565b9050919050565b611bbf81611ba4565b82525050565b6000602082019050611bda6000830184611bb6565b92915050565b611be981611ba4565b8114611bf457600080fd5b50565b600081359050611c0681611be0565b92915050565b60008060408385031215611c2357611c226119aa565b5b6000611c3185828601611bf7565b9250506020611c4285828601611b42565b9150509250929050565b600060208284031215611c6257611c616119aa565b5b6000611c7084828501611bf7565b91505092915050565b600080600060608486031215611c9257611c916119aa565b5b6000611ca086828701611bf7565b9350506020611cb186828701611bf7565b9250506040611cc286828701611b42565b9150509250925092565b611cd581611b21565b82525050565b6000602082019050611cf06000830184611ccc565b92915050565b611cff81611a39565b8114611d0a57600080fd5b50565b600081359050611d1c81611cf6565b92915050565b60008060408385031215611d3957611d386119aa565b5b6000611d4785828601611bf7565b9250506020611d5885828601611d0d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da482611ab5565b810181811067ffffffffffffffff82111715611dc357611dc2611d6c565b5b80604052505050565b6000611dd66119a0565b9050611de28282611d9b565b919050565b600067ffffffffffffffff821115611e0257611e01611d6c565b5b611e0b82611ab5565b9050602081019050919050565b82818337600083830152505050565b6000611e3a611e3584611de7565b611dcc565b905082815260208101848484011115611e5657611e55611d67565b5b611e61848285611e18565b509392505050565b600082601f830112611e7e57611e7d611d62565b5b8135611e8e848260208601611e27565b91505092915050565b60008060008060808587031215611eb157611eb06119aa565b5b6000611ebf87828801611bf7565b9450506020611ed087828801611bf7565b9350506040611ee187828801611b42565b925050606085013567ffffffffffffffff811115611f0257611f016119af565b5b611f0e87828801611e69565b91505092959194509250565b60008060408385031215611f3157611f306119aa565b5b6000611f3f85828601611bf7565b9250506020611f5085828601611bf7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fa157607f821691505b602082108103611fb457611fb3611f5a565b5b50919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000611ff0600f83611a7a565b9150611ffb82611fba565b602082019050919050565b6000602082019050818103600083015261201f81611fe3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061206082611b21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361209257612091612026565b5b600182019050919050565b60006060820190506120b26000830186611bb6565b6120bf6020830185611ccc565b6120cc6040830184611bb6565b949350505050565b600081905092915050565b60006120ea82611a6f565b6120f481856120d4565b9350612104818560208601611a8b565b80840191505092915050565b600061211c82856120df565b915061212882846120df565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061215b82612134565b612165818561213f565b9350612175818560208601611a8b565b61217e81611ab5565b840191505092915050565b600060808201905061219e6000830187611bb6565b6121ab6020830186611bb6565b6121b86040830185611ccc565b81810360608301526121ca8184612150565b905095945050505050565b6000815190506121e4816119e0565b92915050565b600060208284031215612200576121ff6119aa565b5b600061220e848285016121d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060408201905061225b6000830185611bb6565b6122686020830184611ccc565b939250505056fea26469706673582212209a1abe8ed0ffd0266e88f309efe2ba46f59be29bb180593f9fb5453f37313ed464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1 PUSH1 0x7 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x16 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x417474656E64616E636520546F6B656E00000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4154544E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x0 SWAP1 DUP2 PUSH3 0x95 SWAP2 SWAP1 PUSH3 0x477 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0xA7 SWAP2 SWAP1 PUSH3 0x477 JUMP JUMPDEST POP POP POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x11F JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x116 SWAP2 SWAP1 PUSH3 0x5A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x130 DUP2 PUSH3 0x137 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x5C0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x27F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x295 JUMPI PUSH3 0x294 PUSH3 0x237 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH3 0x2FF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2C0 JUMP JUMPDEST PUSH3 0x30B DUP7 DUP4 PUSH3 0x2C0 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x358 PUSH3 0x352 PUSH3 0x34C DUP5 PUSH3 0x323 JUMP JUMPDEST PUSH3 0x32D JUMP JUMPDEST PUSH3 0x323 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x374 DUP4 PUSH3 0x337 JUMP JUMPDEST PUSH3 0x38C PUSH3 0x383 DUP3 PUSH3 0x35F JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x2CD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH3 0x3A3 PUSH3 0x394 JUMP JUMPDEST PUSH3 0x3B0 DUP2 DUP5 DUP5 PUSH3 0x369 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x3D8 JUMPI PUSH3 0x3CC PUSH1 0x0 DUP3 PUSH3 0x399 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3B6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x427 JUMPI PUSH3 0x3F1 DUP2 PUSH3 0x29B JUMP JUMPDEST PUSH3 0x3FC DUP5 PUSH3 0x2B0 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x40C JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x424 PUSH3 0x41B DUP6 PUSH3 0x2B0 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3B5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44C PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x42C JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x467 DUP4 DUP4 PUSH3 0x439 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x482 DUP3 PUSH3 0x1FD JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x49E JUMPI PUSH3 0x49D PUSH3 0x208 JUMP JUMPDEST JUMPDEST PUSH3 0x4AA DUP3 SLOAD PUSH3 0x266 JUMP JUMPDEST PUSH3 0x4B7 DUP3 DUP3 DUP6 PUSH3 0x3DC JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x4EF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x4DA JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x4E6 DUP6 DUP3 PUSH3 0x459 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x556 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x4FF DUP7 PUSH3 0x29B JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x529 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x502 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x549 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x545 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x439 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x58B DUP3 PUSH3 0x55E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x59D DUP2 PUSH3 0x57E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x5BA PUSH1 0x0 DUP4 ADD DUP5 PUSH3 0x592 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22A5 DUP1 PUSH3 0x5D0 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1E83409A GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x244 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x487 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x496 DUP3 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x526 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x526 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x509 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0xB82 JUMP JUMPDEST POP PUSH2 0x545 DUP3 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55E DUP3 DUP3 PUSH2 0x559 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56A PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x603 DUP2 PUSH1 0x7 SLOAD PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x616 SWAP1 PUSH2 0x2055 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6FC DUP4 DUP4 PUSH2 0x6F7 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x772 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x793 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x970 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x876 PUSH1 0x0 PUSH2 0xFFB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8D7 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x903 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x950 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x925 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x950 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x933 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x96C PUSH2 0x965 PUSH2 0xC47 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x97B DUP5 DUP5 DUP5 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x986 PUSH2 0xC47 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1230 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A0 DUP3 PUSH2 0xB82 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x9AB PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9F6 JUMP JUMPDEST DUP1 PUSH2 0x9D5 DUP5 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 DUP2 PUSH2 0xFFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB8E DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC01 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1503 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC69 PUSH2 0xC47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC87 PUSH2 0x89E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE6 JUMPI PUSH2 0xCAA PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP4 DUP4 PUSH1 0x0 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDED DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2F JUMPI PUSH2 0xE2E DUP2 DUP5 DUP7 PUSH2 0x16C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC0 JUMPI PUSH2 0xE71 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF43 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1132 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13DA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12CB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x134F JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1347 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13D8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1407 DUP5 PUSH2 0x178C JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1426 JUMPI PUSH2 0x1425 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1458 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14BB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14AF JUMPI PUSH2 0x14AE PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1466 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x153C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 PUSH2 0x154C DUP5 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15B7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15CA JUMPI POP PUSH2 0x15C8 DUP2 DUP5 PUSH2 0x9FE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x160C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x166E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP4 DUP4 DUP4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1787 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1748 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177E SWAP3 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x17EA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1827 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1856 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x187F JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18A4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18C7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18BD JUMPI PUSH2 0x18BC PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x18D6 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1997 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1958 JUMPI POP PUSH2 0x1957 DUP5 DUP5 PUSH2 0x9FE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1996 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x197E DUP4 PUSH2 0xC0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A06 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH2 0x1A21 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A30 DUP5 DUP3 DUP6 ADD PUSH2 0x19F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD1 DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1ADB DUP2 DUP6 PUSH2 0x1A7A JUMP JUMPDEST SWAP4 POP PUSH2 0x1AEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x1AF4 DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B19 DUP2 DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1B21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B51 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6D JUMPI PUSH2 0x1B6C PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7B DUP5 DUP3 DUP6 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP3 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C06 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C31 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C42 DUP6 DUP3 DUP7 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP5 DUP3 DUP6 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB1 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC2 DUP7 DUP3 DUP8 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CD5 DUP2 PUSH2 0x1B21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CFF DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1C DUP2 PUSH2 0x1CF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D47 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D58 DUP6 DUP3 DUP7 ADD PUSH2 0x1D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1DA4 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE2 DUP3 DUP3 PUSH2 0x1D9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH2 0x1E0B DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A PUSH2 0x1E35 DUP5 PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST PUSH2 0x1E61 DUP5 DUP3 DUP6 PUSH2 0x1E18 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1D62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB0 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED0 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE1 DUP8 DUP3 DUP9 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH2 0x1F0E DUP8 DUP3 DUP9 ADD PUSH2 0x1E69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F3F DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F50 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB4 JUMPI PUSH2 0x1FB3 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF0 PUSH1 0xF DUP4 PUSH2 0x1A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP3 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201F DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2060 DUP3 PUSH2 0x1B21 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x2026 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x20CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EA DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x20F4 DUP2 DUP6 PUSH2 0x20D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2104 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP3 DUP6 PUSH2 0x20DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2128 DUP3 DUP5 PUSH2 0x20DF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215B DUP3 PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2165 DUP2 DUP6 PUSH2 0x213F JUMP JUMPDEST SWAP4 POP PUSH2 0x2175 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x219E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x21AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x21B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CCC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21CA DUP2 DUP5 PUSH2 0x2150 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21E4 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220E DUP5 DUP3 DUP6 ADD PUSH2 0x21D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x225B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x2268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BYTE 0xBE DUP15 0xD0 SELFDESTRUCT 0xD0 0x26 PUSH15 0x88F309EFE2BA46F59BE29BB180593F SWAP16 0xB5 GASLIMIT EXTCODEHASH CALLDATACOPY BALANCE RETURNDATACOPY 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"222:406:26:-:0;;;301:1;272:30;;357:71;;;;;;;;;;414:10;1380:113:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:5;1446;:13;;;;;;:::i;:::-;;1479:7;1469;:17;;;;;;:::i;:::-;;1380:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;222:406:26;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:99:28:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;222:406:26:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_approve_2360":{"entryPoint":3151,"id":2360,"parameterSlots":3,"returnSlots":0},"@_approve_2426":{"entryPoint":5379,"id":2426,"parameterSlots":4,"returnSlots":0},"@_baseURI_1741":{"entryPoint":5089,"id":1741,"parameterSlots":0,"returnSlots":1},"@_checkAuthorized_2000":{"entryPoint":5832,"id":2000,"parameterSlots":3,"returnSlots":0},"@_checkOwner_84":{"entryPoint":3169,"id":84,"parameterSlots":0,"returnSlots":0},"@_getApproved_1927":{"entryPoint":3082,"id":1927,"parameterSlots":1,"returnSlots":1},"@_isAuthorized_1963":{"entryPoint":6367,"id":1963,"parameterSlots":3,"returnSlots":1},"@_mint_2156":{"entryPoint":3304,"id":2156,"parameterSlots":2,"returnSlots":0},"@_msgSender_3655":{"entryPoint":3143,"id":3655,"parameterSlots":0,"returnSlots":1},"@_ownerOf_1914":{"entryPoint":5318,"id":1914,"parameterSlots":1,"returnSlots":1},"@_requireOwned_2492":{"entryPoint":2946,"id":2492,"parameterSlots":1,"returnSlots":1},"@_setApprovalForAll_2463":{"entryPoint":4289,"id":2463,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_146":{"entryPoint":4091,"id":146,"parameterSlots":1,"returnSlots":0},"@_update_2106":{"entryPoint":3553,"id":2106,"parameterSlots":3,"returnSlots":1},"@approve_1757":{"entryPoint":1356,"id":1757,"parameterSlots":2,"returnSlots":0},"@balanceOf_1665":{"entryPoint":1962,"id":1665,"parameterSlots":1,"returnSlots":1},"@checkOnERC721Received_2732":{"entryPoint":4656,"id":2732,"parameterSlots":5,"returnSlots":0},"@claim_9295":{"entryPoint":1378,"id":9295,"parameterSlots":1,"returnSlots":0},"@getApproved_1774":{"entryPoint":1328,"id":1774,"parameterSlots":1,"returnSlots":1},"@hasClaimed_9253":{"entryPoint":2168,"id":9253,"parameterSlots":0,"returnSlots":0},"@isApprovedForAll_1807":{"entryPoint":2558,"id":1807,"parameterSlots":2,"returnSlots":1},"@log10_6870":{"entryPoint":6028,"id":6870,"parameterSlots":1,"returnSlots":1},"@name_1687":{"entryPoint":1182,"id":1687,"parameterSlots":0,"returnSlots":1},"@nextTokenId_9249":{"entryPoint":2200,"id":9249,"parameterSlots":0,"returnSlots":0},"@ownerOf_1678":{"entryPoint":1944,"id":1678,"parameterSlots":1,"returnSlots":1},"@owner_67":{"entryPoint":2206,"id":67,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_98":{"entryPoint":2148,"id":98,"parameterSlots":0,"returnSlots":0},"@safeTransferFrom_1871":{"entryPoint":1912,"id":1871,"parameterSlots":3,"returnSlots":0},"@safeTransferFrom_1901":{"entryPoint":2416,"id":1901,"parameterSlots":4,"returnSlots":0},"@setApprovalForAll_1790":{"entryPoint":2394,"id":1790,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1637":{"entryPoint":956,"id":1637,"parameterSlots":1,"returnSlots":1},"@supportsInterface_5404":{"entryPoint":2840,"id":5404,"parameterSlots":1,"returnSlots":1},"@symbol_1696":{"entryPoint":2248,"id":1696,"parameterSlots":0,"returnSlots":1},"@toString_4093":{"entryPoint":5112,"id":4093,"parameterSlots":1,"returnSlots":1},"@tokenURI_1732":{"entryPoint":2453,"id":1732,"parameterSlots":1,"returnSlots":1},"@transferFrom_1853":{"entryPoint":1654,"id":1853,"parameterSlots":3,"returnSlots":0},"@transferOwnership_126":{"entryPoint":2706,"id":126,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_bytes_memory_ptr":{"entryPoint":7719,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":7159,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":7437,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":6647,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4_fromMemory":{"entryPoint":8661,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes_memory_ptr":{"entryPoint":7785,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":6978,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":7244,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":7962,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":7289,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr":{"entryPoint":7831,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_bool":{"entryPoint":7458,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":7180,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":6668,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes4_fromMemory":{"entryPoint":8682,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":6999,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":7094,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":6725,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack":{"entryPoint":8528,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":6854,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8415,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack":{"entryPoint":8163,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":7372,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":8464,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":7109,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":8585,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":8774,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed":{"entryPoint":8349,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":6740,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6911,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":8198,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":7387,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":7628,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":6560,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_bytes_memory_ptr":{"entryPoint":7655,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_bytes_memory_ptr":{"entryPoint":8500,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":6767,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack":{"entryPoint":8511,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":6778,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":8404,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":7076,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":6713,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":6580,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":7044,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":6945,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory_with_cleanup":{"entryPoint":7704,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":6795,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":8073,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":7579,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":8277,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":8230,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x12":{"entryPoint":8727,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":8026,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":7532,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":7522,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":7527,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":6575,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":6570,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":6837,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf":{"entryPoint":8122,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":7136,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":7414,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":6624,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":6955,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:16141:28","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:28","statements":[{"nodeType":"YulAssignment","src":"57:19:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:28","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:28"},"nodeType":"YulFunctionCall","src":"67:9:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:28"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:28","type":""}],"src":"7:75:28"},{"body":{"nodeType":"YulBlock","src":"177:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:28"},"nodeType":"YulFunctionCall","src":"187:12:28"},"nodeType":"YulExpressionStatement","src":"187:12:28"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:28"},{"body":{"nodeType":"YulBlock","src":"300:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:28"},"nodeType":"YulFunctionCall","src":"310:12:28"},"nodeType":"YulExpressionStatement","src":"310:12:28"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:28"},{"body":{"nodeType":"YulBlock","src":"378:105:28","statements":[{"nodeType":"YulAssignment","src":"388:89:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:28","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:28"},"nodeType":"YulFunctionCall","src":"399:78:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:28"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:28","type":""}],"src":"334:149:28"},{"body":{"nodeType":"YulBlock","src":"531:78:28","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:28"},"nodeType":"YulFunctionCall","src":"589:12:28"},"nodeType":"YulExpressionStatement","src":"589:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:28"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:28"},"nodeType":"YulFunctionCall","src":"561:23:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:28"},"nodeType":"YulFunctionCall","src":"551:34:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:28"},"nodeType":"YulFunctionCall","src":"544:42:28"},"nodeType":"YulIf","src":"541:62:28"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:28","type":""}],"src":"489:120:28"},{"body":{"nodeType":"YulBlock","src":"666:86:28","statements":[{"nodeType":"YulAssignment","src":"676:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:28"},"nodeType":"YulFunctionCall","src":"685:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:28"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:28"},"nodeType":"YulFunctionCall","src":"714:32:28"},"nodeType":"YulExpressionStatement","src":"714:32:28"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:28","type":""}],"src":"615:137:28"},{"body":{"nodeType":"YulBlock","src":"823:262:28","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:28"},"nodeType":"YulFunctionCall","src":"871:79:28"},"nodeType":"YulExpressionStatement","src":"871:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:28"},"nodeType":"YulFunctionCall","src":"840:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:28"},"nodeType":"YulFunctionCall","src":"836:32:28"},"nodeType":"YulIf","src":"833:119:28"},{"nodeType":"YulBlock","src":"962:116:28","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:28","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:28"},"nodeType":"YulFunctionCall","src":"1036:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:28"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:28"},"nodeType":"YulFunctionCall","src":"1016:52:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:28","type":""}],"src":"758:327:28"},{"body":{"nodeType":"YulBlock","src":"1133:48:28","statements":[{"nodeType":"YulAssignment","src":"1143:32:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:28"},"nodeType":"YulFunctionCall","src":"1161:13:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:28"},"nodeType":"YulFunctionCall","src":"1154:21:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:28"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:28","type":""}],"src":"1091:90:28"},{"body":{"nodeType":"YulBlock","src":"1246:50:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:28"},"nodeType":"YulFunctionCall","src":"1268:21:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:28"},"nodeType":"YulFunctionCall","src":"1256:34:28"},"nodeType":"YulExpressionStatement","src":"1256:34:28"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:28","type":""}],"src":"1187:109:28"},{"body":{"nodeType":"YulBlock","src":"1394:118:28","statements":[{"nodeType":"YulAssignment","src":"1404:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:28"},"nodeType":"YulFunctionCall","src":"1412:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:28"},"nodeType":"YulFunctionCall","src":"1487:17:28"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:28"},"nodeType":"YulFunctionCall","src":"1440:65:28"},"nodeType":"YulExpressionStatement","src":"1440:65:28"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:28","type":""}],"src":"1302:210:28"},{"body":{"nodeType":"YulBlock","src":"1577:40:28","statements":[{"nodeType":"YulAssignment","src":"1588:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1604:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1598:5:28"},"nodeType":"YulFunctionCall","src":"1598:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1588:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1560:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1570:6:28","type":""}],"src":"1518:99:28"},{"body":{"nodeType":"YulBlock","src":"1719:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1736:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"1741:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1729:6:28"},"nodeType":"YulFunctionCall","src":"1729:19:28"},"nodeType":"YulExpressionStatement","src":"1729:19:28"},{"nodeType":"YulAssignment","src":"1757:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1776:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"1781:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1772:3:28"},"nodeType":"YulFunctionCall","src":"1772:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1757:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1691:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1696:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1707:11:28","type":""}],"src":"1623:169:28"},{"body":{"nodeType":"YulBlock","src":"1860:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1870:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"1879:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1874:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1939:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1964:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"1969:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1960:3:28"},"nodeType":"YulFunctionCall","src":"1960:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1983:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"1988:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1979:3:28"},"nodeType":"YulFunctionCall","src":"1979:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1973:5:28"},"nodeType":"YulFunctionCall","src":"1973:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1953:6:28"},"nodeType":"YulFunctionCall","src":"1953:39:28"},"nodeType":"YulExpressionStatement","src":"1953:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1900:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"1903:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1897:2:28"},"nodeType":"YulFunctionCall","src":"1897:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1911:19:28","statements":[{"nodeType":"YulAssignment","src":"1913:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1922:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"1925:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1918:3:28"},"nodeType":"YulFunctionCall","src":"1918:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1913:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"1893:3:28","statements":[]},"src":"1889:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2022:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2027:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2018:3:28"},"nodeType":"YulFunctionCall","src":"2018:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"2036:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2011:6:28"},"nodeType":"YulFunctionCall","src":"2011:27:28"},"nodeType":"YulExpressionStatement","src":"2011:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1842:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1847:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"1852:6:28","type":""}],"src":"1798:246:28"},{"body":{"nodeType":"YulBlock","src":"2098:54:28","statements":[{"nodeType":"YulAssignment","src":"2108:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2126:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2133:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2122:3:28"},"nodeType":"YulFunctionCall","src":"2122:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2142:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2138:3:28"},"nodeType":"YulFunctionCall","src":"2138:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2118:3:28"},"nodeType":"YulFunctionCall","src":"2118:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2108:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2081:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2091:6:28","type":""}],"src":"2050:102:28"},{"body":{"nodeType":"YulBlock","src":"2250:285:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2260:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2307:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2274:32:28"},"nodeType":"YulFunctionCall","src":"2274:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2264:6:28","type":""}]},{"nodeType":"YulAssignment","src":"2322:78:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2388:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2393:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2329:58:28"},"nodeType":"YulFunctionCall","src":"2329:71:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2322:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2448:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2455:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:28"},"nodeType":"YulFunctionCall","src":"2444:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"2462:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"2467:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2409:34:28"},"nodeType":"YulFunctionCall","src":"2409:65:28"},"nodeType":"YulExpressionStatement","src":"2409:65:28"},{"nodeType":"YulAssignment","src":"2483:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2494:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2521:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2499:21:28"},"nodeType":"YulFunctionCall","src":"2499:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2490:3:28"},"nodeType":"YulFunctionCall","src":"2490:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2483:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2231:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2238:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2246:3:28","type":""}],"src":"2158:377:28"},{"body":{"nodeType":"YulBlock","src":"2659:195:28","statements":[{"nodeType":"YulAssignment","src":"2669:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2681:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2692:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2677:3:28"},"nodeType":"YulFunctionCall","src":"2677:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2669:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2716:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"2727:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2712:3:28"},"nodeType":"YulFunctionCall","src":"2712:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2735:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"2741:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2731:3:28"},"nodeType":"YulFunctionCall","src":"2731:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2705:6:28"},"nodeType":"YulFunctionCall","src":"2705:47:28"},"nodeType":"YulExpressionStatement","src":"2705:47:28"},{"nodeType":"YulAssignment","src":"2761:86:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2833:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"2842:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2769:63:28"},"nodeType":"YulFunctionCall","src":"2769:78:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2761:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2631:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2643:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2654:4:28","type":""}],"src":"2541:313:28"},{"body":{"nodeType":"YulBlock","src":"2905:32:28","statements":[{"nodeType":"YulAssignment","src":"2915:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"2926:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2915:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2887:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2897:7:28","type":""}],"src":"2860:77:28"},{"body":{"nodeType":"YulBlock","src":"2986:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"3043:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3052:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3055:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3045:6:28"},"nodeType":"YulFunctionCall","src":"3045:12:28"},"nodeType":"YulExpressionStatement","src":"3045:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3009:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3034:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3016:17:28"},"nodeType":"YulFunctionCall","src":"3016:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3006:2:28"},"nodeType":"YulFunctionCall","src":"3006:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2999:6:28"},"nodeType":"YulFunctionCall","src":"2999:43:28"},"nodeType":"YulIf","src":"2996:63:28"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2979:5:28","type":""}],"src":"2943:122:28"},{"body":{"nodeType":"YulBlock","src":"3123:87:28","statements":[{"nodeType":"YulAssignment","src":"3133:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3155:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3142:12:28"},"nodeType":"YulFunctionCall","src":"3142:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3133:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3198:5:28"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"3171:26:28"},"nodeType":"YulFunctionCall","src":"3171:33:28"},"nodeType":"YulExpressionStatement","src":"3171:33:28"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3101:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"3109:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3117:5:28","type":""}],"src":"3071:139:28"},{"body":{"nodeType":"YulBlock","src":"3282:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"3328:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3330:77:28"},"nodeType":"YulFunctionCall","src":"3330:79:28"},"nodeType":"YulExpressionStatement","src":"3330:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3303:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"3312:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3299:3:28"},"nodeType":"YulFunctionCall","src":"3299:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"3324:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3295:3:28"},"nodeType":"YulFunctionCall","src":"3295:32:28"},"nodeType":"YulIf","src":"3292:119:28"},{"nodeType":"YulBlock","src":"3421:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3436:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"3450:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3440:6:28","type":""}]},{"nodeType":"YulAssignment","src":"3465:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3500:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"3511:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3496:3:28"},"nodeType":"YulFunctionCall","src":"3496:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3520:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"3475:20:28"},"nodeType":"YulFunctionCall","src":"3475:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3465:6:28"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3252:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3263:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3275:6:28","type":""}],"src":"3216:329:28"},{"body":{"nodeType":"YulBlock","src":"3596:81:28","statements":[{"nodeType":"YulAssignment","src":"3606:65:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3621:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"3628:42:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3617:3:28"},"nodeType":"YulFunctionCall","src":"3617:54:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3606:7:28"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3578:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3588:7:28","type":""}],"src":"3551:126:28"},{"body":{"nodeType":"YulBlock","src":"3728:51:28","statements":[{"nodeType":"YulAssignment","src":"3738:35:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3767:5:28"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"3749:17:28"},"nodeType":"YulFunctionCall","src":"3749:24:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3738:7:28"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3710:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3720:7:28","type":""}],"src":"3683:96:28"},{"body":{"nodeType":"YulBlock","src":"3850:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3867:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3890:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3872:17:28"},"nodeType":"YulFunctionCall","src":"3872:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3860:6:28"},"nodeType":"YulFunctionCall","src":"3860:37:28"},"nodeType":"YulExpressionStatement","src":"3860:37:28"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3838:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3845:3:28","type":""}],"src":"3785:118:28"},{"body":{"nodeType":"YulBlock","src":"4007:124:28","statements":[{"nodeType":"YulAssignment","src":"4017:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4029:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4040:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4025:3:28"},"nodeType":"YulFunctionCall","src":"4025:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4017:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4097:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4110:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4121:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4106:3:28"},"nodeType":"YulFunctionCall","src":"4106:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"4053:43:28"},"nodeType":"YulFunctionCall","src":"4053:71:28"},"nodeType":"YulExpressionStatement","src":"4053:71:28"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3979:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3991:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4002:4:28","type":""}],"src":"3909:222:28"},{"body":{"nodeType":"YulBlock","src":"4180:79:28","statements":[{"body":{"nodeType":"YulBlock","src":"4237:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4246:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4249:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4239:6:28"},"nodeType":"YulFunctionCall","src":"4239:12:28"},"nodeType":"YulExpressionStatement","src":"4239:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4203:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4228:5:28"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"4210:17:28"},"nodeType":"YulFunctionCall","src":"4210:24:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4200:2:28"},"nodeType":"YulFunctionCall","src":"4200:35:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4193:6:28"},"nodeType":"YulFunctionCall","src":"4193:43:28"},"nodeType":"YulIf","src":"4190:63:28"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4173:5:28","type":""}],"src":"4137:122:28"},{"body":{"nodeType":"YulBlock","src":"4317:87:28","statements":[{"nodeType":"YulAssignment","src":"4327:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4349:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4336:12:28"},"nodeType":"YulFunctionCall","src":"4336:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4327:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4392:5:28"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4365:26:28"},"nodeType":"YulFunctionCall","src":"4365:33:28"},"nodeType":"YulExpressionStatement","src":"4365:33:28"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4295:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"4303:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"4311:5:28","type":""}],"src":"4265:139:28"},{"body":{"nodeType":"YulBlock","src":"4493:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"4539:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4541:77:28"},"nodeType":"YulFunctionCall","src":"4541:79:28"},"nodeType":"YulExpressionStatement","src":"4541:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4514:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4523:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4510:3:28"},"nodeType":"YulFunctionCall","src":"4510:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4535:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4506:3:28"},"nodeType":"YulFunctionCall","src":"4506:32:28"},"nodeType":"YulIf","src":"4503:119:28"},{"nodeType":"YulBlock","src":"4632:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4647:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4661:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4651:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4676:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4711:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4722:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4707:3:28"},"nodeType":"YulFunctionCall","src":"4707:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4731:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4686:20:28"},"nodeType":"YulFunctionCall","src":"4686:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4676:6:28"}]}]},{"nodeType":"YulBlock","src":"4759:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4774:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4788:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4778:6:28","type":""}]},{"nodeType":"YulAssignment","src":"4804:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4839:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"4850:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4835:3:28"},"nodeType":"YulFunctionCall","src":"4835:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4859:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4814:20:28"},"nodeType":"YulFunctionCall","src":"4814:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4804:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4455:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4466:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4478:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4486:6:28","type":""}],"src":"4410:474:28"},{"body":{"nodeType":"YulBlock","src":"4956:263:28","statements":[{"body":{"nodeType":"YulBlock","src":"5002:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5004:77:28"},"nodeType":"YulFunctionCall","src":"5004:79:28"},"nodeType":"YulExpressionStatement","src":"5004:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4977:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"4986:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4973:3:28"},"nodeType":"YulFunctionCall","src":"4973:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"4998:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4969:3:28"},"nodeType":"YulFunctionCall","src":"4969:32:28"},"nodeType":"YulIf","src":"4966:119:28"},{"nodeType":"YulBlock","src":"5095:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5110:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5124:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5114:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5139:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5174:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5185:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5170:3:28"},"nodeType":"YulFunctionCall","src":"5170:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5194:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5149:20:28"},"nodeType":"YulFunctionCall","src":"5149:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5139:6:28"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4926:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4937:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4949:6:28","type":""}],"src":"4890:329:28"},{"body":{"nodeType":"YulBlock","src":"5325:519:28","statements":[{"body":{"nodeType":"YulBlock","src":"5371:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5373:77:28"},"nodeType":"YulFunctionCall","src":"5373:79:28"},"nodeType":"YulExpressionStatement","src":"5373:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5346:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"5355:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5342:3:28"},"nodeType":"YulFunctionCall","src":"5342:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"5367:2:28","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5338:3:28"},"nodeType":"YulFunctionCall","src":"5338:32:28"},"nodeType":"YulIf","src":"5335:119:28"},{"nodeType":"YulBlock","src":"5464:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5479:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5493:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5483:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5508:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5543:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5554:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5539:3:28"},"nodeType":"YulFunctionCall","src":"5539:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5563:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5518:20:28"},"nodeType":"YulFunctionCall","src":"5518:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5508:6:28"}]}]},{"nodeType":"YulBlock","src":"5591:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5606:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5620:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5610:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5636:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5671:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5682:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5667:3:28"},"nodeType":"YulFunctionCall","src":"5667:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5691:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5646:20:28"},"nodeType":"YulFunctionCall","src":"5646:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5636:6:28"}]}]},{"nodeType":"YulBlock","src":"5719:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5734:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5748:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5738:6:28","type":""}]},{"nodeType":"YulAssignment","src":"5764:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5799:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"5810:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5795:3:28"},"nodeType":"YulFunctionCall","src":"5795:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5819:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5774:20:28"},"nodeType":"YulFunctionCall","src":"5774:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5764:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5279:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5290:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5302:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5310:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5318:6:28","type":""}],"src":"5225:619:28"},{"body":{"nodeType":"YulBlock","src":"5915:53:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5932:3:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5955:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"5937:17:28"},"nodeType":"YulFunctionCall","src":"5937:24:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5925:6:28"},"nodeType":"YulFunctionCall","src":"5925:37:28"},"nodeType":"YulExpressionStatement","src":"5925:37:28"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5903:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5910:3:28","type":""}],"src":"5850:118:28"},{"body":{"nodeType":"YulBlock","src":"6072:124:28","statements":[{"nodeType":"YulAssignment","src":"6082:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6094:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6105:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6090:3:28"},"nodeType":"YulFunctionCall","src":"6090:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6082:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6162:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6175:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"6186:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6171:3:28"},"nodeType":"YulFunctionCall","src":"6171:17:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"6118:43:28"},"nodeType":"YulFunctionCall","src":"6118:71:28"},"nodeType":"YulExpressionStatement","src":"6118:71:28"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6044:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6056:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6067:4:28","type":""}],"src":"5974:222:28"},{"body":{"nodeType":"YulBlock","src":"6242:76:28","statements":[{"body":{"nodeType":"YulBlock","src":"6296:16:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6305:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6308:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6298:6:28"},"nodeType":"YulFunctionCall","src":"6298:12:28"},"nodeType":"YulExpressionStatement","src":"6298:12:28"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6265:5:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6287:5:28"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"6272:14:28"},"nodeType":"YulFunctionCall","src":"6272:21:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6262:2:28"},"nodeType":"YulFunctionCall","src":"6262:32:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6255:6:28"},"nodeType":"YulFunctionCall","src":"6255:40:28"},"nodeType":"YulIf","src":"6252:60:28"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6235:5:28","type":""}],"src":"6202:116:28"},{"body":{"nodeType":"YulBlock","src":"6373:84:28","statements":[{"nodeType":"YulAssignment","src":"6383:29:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6405:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6392:12:28"},"nodeType":"YulFunctionCall","src":"6392:20:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6383:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6445:5:28"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"6421:23:28"},"nodeType":"YulFunctionCall","src":"6421:30:28"},"nodeType":"YulExpressionStatement","src":"6421:30:28"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6351:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"6359:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6367:5:28","type":""}],"src":"6324:133:28"},{"body":{"nodeType":"YulBlock","src":"6543:388:28","statements":[{"body":{"nodeType":"YulBlock","src":"6589:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6591:77:28"},"nodeType":"YulFunctionCall","src":"6591:79:28"},"nodeType":"YulExpressionStatement","src":"6591:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6564:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"6573:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6560:3:28"},"nodeType":"YulFunctionCall","src":"6560:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"6585:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6556:3:28"},"nodeType":"YulFunctionCall","src":"6556:32:28"},"nodeType":"YulIf","src":"6553:119:28"},{"nodeType":"YulBlock","src":"6682:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6697:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6711:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6701:6:28","type":""}]},{"nodeType":"YulAssignment","src":"6726:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6761:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6772:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6757:3:28"},"nodeType":"YulFunctionCall","src":"6757:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6781:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6736:20:28"},"nodeType":"YulFunctionCall","src":"6736:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6726:6:28"}]}]},{"nodeType":"YulBlock","src":"6809:115:28","statements":[{"nodeType":"YulVariableDeclaration","src":"6824:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"6838:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6828:6:28","type":""}]},{"nodeType":"YulAssignment","src":"6854:60:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6886:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"6897:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6882:3:28"},"nodeType":"YulFunctionCall","src":"6882:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6906:7:28"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"6864:17:28"},"nodeType":"YulFunctionCall","src":"6864:50:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6854:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6505:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6516:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6528:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6536:6:28","type":""}],"src":"6463:468:28"},{"body":{"nodeType":"YulBlock","src":"7026:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7043:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7046:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7036:6:28"},"nodeType":"YulFunctionCall","src":"7036:12:28"},"nodeType":"YulExpressionStatement","src":"7036:12:28"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"6937:117:28"},{"body":{"nodeType":"YulBlock","src":"7149:28:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7166:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7169:1:28","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7159:6:28"},"nodeType":"YulFunctionCall","src":"7159:12:28"},"nodeType":"YulExpressionStatement","src":"7159:12:28"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"7060:117:28"},{"body":{"nodeType":"YulBlock","src":"7211:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7228:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7231:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7221:6:28"},"nodeType":"YulFunctionCall","src":"7221:88:28"},"nodeType":"YulExpressionStatement","src":"7221:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7325:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7328:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7318:6:28"},"nodeType":"YulFunctionCall","src":"7318:15:28"},"nodeType":"YulExpressionStatement","src":"7318:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7349:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7352:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7342:6:28"},"nodeType":"YulFunctionCall","src":"7342:15:28"},"nodeType":"YulExpressionStatement","src":"7342:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"7183:180:28"},{"body":{"nodeType":"YulBlock","src":"7412:238:28","statements":[{"nodeType":"YulVariableDeclaration","src":"7422:58:28","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7444:6:28"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"7474:4:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"7452:21:28"},"nodeType":"YulFunctionCall","src":"7452:27:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7440:3:28"},"nodeType":"YulFunctionCall","src":"7440:40:28"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"7426:10:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"7591:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7593:16:28"},"nodeType":"YulFunctionCall","src":"7593:18:28"},"nodeType":"YulExpressionStatement","src":"7593:18:28"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7534:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"7546:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7531:2:28"},"nodeType":"YulFunctionCall","src":"7531:34:28"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7570:10:28"},{"name":"memPtr","nodeType":"YulIdentifier","src":"7582:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"7567:2:28"},"nodeType":"YulFunctionCall","src":"7567:22:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7528:2:28"},"nodeType":"YulFunctionCall","src":"7528:62:28"},"nodeType":"YulIf","src":"7525:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7629:2:28","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"7633:10:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7622:6:28"},"nodeType":"YulFunctionCall","src":"7622:22:28"},"nodeType":"YulExpressionStatement","src":"7622:22:28"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7398:6:28","type":""},{"name":"size","nodeType":"YulTypedName","src":"7406:4:28","type":""}],"src":"7369:281:28"},{"body":{"nodeType":"YulBlock","src":"7697:88:28","statements":[{"nodeType":"YulAssignment","src":"7707:30:28","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"7717:18:28"},"nodeType":"YulFunctionCall","src":"7717:20:28"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7707:6:28"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7766:6:28"},{"name":"size","nodeType":"YulIdentifier","src":"7774:4:28"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"7746:19:28"},"nodeType":"YulFunctionCall","src":"7746:33:28"},"nodeType":"YulExpressionStatement","src":"7746:33:28"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"7681:4:28","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"7690:6:28","type":""}],"src":"7656:129:28"},{"body":{"nodeType":"YulBlock","src":"7857:241:28","statements":[{"body":{"nodeType":"YulBlock","src":"7962:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"7964:16:28"},"nodeType":"YulFunctionCall","src":"7964:18:28"},"nodeType":"YulExpressionStatement","src":"7964:18:28"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"7934:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"7942:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7931:2:28"},"nodeType":"YulFunctionCall","src":"7931:30:28"},"nodeType":"YulIf","src":"7928:56:28"},{"nodeType":"YulAssignment","src":"7994:37:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8024:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"8002:21:28"},"nodeType":"YulFunctionCall","src":"8002:29:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"7994:4:28"}]},{"nodeType":"YulAssignment","src":"8068:23:28","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8080:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"8086:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8076:3:28"},"nodeType":"YulFunctionCall","src":"8076:15:28"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8068:4:28"}]}]},"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"7841:6:28","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"7852:4:28","type":""}],"src":"7791:307:28"},{"body":{"nodeType":"YulBlock","src":"8168:82:28","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8191:3:28"},{"name":"src","nodeType":"YulIdentifier","src":"8196:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8201:6:28"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"8178:12:28"},"nodeType":"YulFunctionCall","src":"8178:30:28"},"nodeType":"YulExpressionStatement","src":"8178:30:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"8228:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8233:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8224:3:28"},"nodeType":"YulFunctionCall","src":"8224:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"8242:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8217:6:28"},"nodeType":"YulFunctionCall","src":"8217:27:28"},"nodeType":"YulExpressionStatement","src":"8217:27:28"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8150:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"8155:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"8160:6:28","type":""}],"src":"8104:146:28"},{"body":{"nodeType":"YulBlock","src":"8339:340:28","statements":[{"nodeType":"YulAssignment","src":"8349:74:28","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8415:6:28"}],"functionName":{"name":"array_allocation_size_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8374:40:28"},"nodeType":"YulFunctionCall","src":"8374:48:28"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8358:15:28"},"nodeType":"YulFunctionCall","src":"8358:65:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8349:5:28"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8439:5:28"},{"name":"length","nodeType":"YulIdentifier","src":"8446:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8432:6:28"},"nodeType":"YulFunctionCall","src":"8432:21:28"},"nodeType":"YulExpressionStatement","src":"8432:21:28"},{"nodeType":"YulVariableDeclaration","src":"8462:27:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8477:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8473:3:28"},"nodeType":"YulFunctionCall","src":"8473:16:28"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8466:3:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"8527:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"8529:77:28"},"nodeType":"YulFunctionCall","src":"8529:79:28"},"nodeType":"YulExpressionStatement","src":"8529:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8508:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8513:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8504:3:28"},"nodeType":"YulFunctionCall","src":"8504:16:28"},{"name":"end","nodeType":"YulIdentifier","src":"8522:3:28"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8501:2:28"},"nodeType":"YulFunctionCall","src":"8501:25:28"},"nodeType":"YulIf","src":"8498:112:28"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8656:3:28"},{"name":"dst","nodeType":"YulIdentifier","src":"8661:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"8666:6:28"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"8619:36:28"},"nodeType":"YulFunctionCall","src":"8619:54:28"},"nodeType":"YulExpressionStatement","src":"8619:54:28"}]},"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"8312:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"8317:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"8325:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8333:5:28","type":""}],"src":"8256:423:28"},{"body":{"nodeType":"YulBlock","src":"8759:277:28","statements":[{"body":{"nodeType":"YulBlock","src":"8808:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"8810:77:28"},"nodeType":"YulFunctionCall","src":"8810:79:28"},"nodeType":"YulExpressionStatement","src":"8810:79:28"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8787:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"8795:4:28","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8783:3:28"},"nodeType":"YulFunctionCall","src":"8783:17:28"},{"name":"end","nodeType":"YulIdentifier","src":"8802:3:28"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8779:3:28"},"nodeType":"YulFunctionCall","src":"8779:27:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8772:6:28"},"nodeType":"YulFunctionCall","src":"8772:35:28"},"nodeType":"YulIf","src":"8769:122:28"},{"nodeType":"YulVariableDeclaration","src":"8900:34:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8927:6:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8914:12:28"},"nodeType":"YulFunctionCall","src":"8914:20:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"8904:6:28","type":""}]},{"nodeType":"YulAssignment","src":"8943:87:28","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9003:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9011:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8999:3:28"},"nodeType":"YulFunctionCall","src":"8999:17:28"},{"name":"length","nodeType":"YulIdentifier","src":"9018:6:28"},{"name":"end","nodeType":"YulIdentifier","src":"9026:3:28"}],"functionName":{"name":"abi_decode_available_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"8952:46:28"},"nodeType":"YulFunctionCall","src":"8952:78:28"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8943:5:28"}]}]},"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8737:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"8745:3:28","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8753:5:28","type":""}],"src":"8698:338:28"},{"body":{"nodeType":"YulBlock","src":"9168:817:28","statements":[{"body":{"nodeType":"YulBlock","src":"9215:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9217:77:28"},"nodeType":"YulFunctionCall","src":"9217:79:28"},"nodeType":"YulExpressionStatement","src":"9217:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9189:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"9198:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9185:3:28"},"nodeType":"YulFunctionCall","src":"9185:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"9210:3:28","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9181:3:28"},"nodeType":"YulFunctionCall","src":"9181:33:28"},"nodeType":"YulIf","src":"9178:120:28"},{"nodeType":"YulBlock","src":"9308:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9323:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9337:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9327:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9352:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9387:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9398:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9383:3:28"},"nodeType":"YulFunctionCall","src":"9383:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9407:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9362:20:28"},"nodeType":"YulFunctionCall","src":"9362:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9352:6:28"}]}]},{"nodeType":"YulBlock","src":"9435:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9450:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9464:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9454:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9480:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9515:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9526:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9511:3:28"},"nodeType":"YulFunctionCall","src":"9511:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9535:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"9490:20:28"},"nodeType":"YulFunctionCall","src":"9490:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"9480:6:28"}]}]},{"nodeType":"YulBlock","src":"9563:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9578:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"9592:2:28","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9582:6:28","type":""}]},{"nodeType":"YulAssignment","src":"9608:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9643:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9654:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9639:3:28"},"nodeType":"YulFunctionCall","src":"9639:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9663:7:28"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9618:20:28"},"nodeType":"YulFunctionCall","src":"9618:53:28"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"9608:6:28"}]}]},{"nodeType":"YulBlock","src":"9691:287:28","statements":[{"nodeType":"YulVariableDeclaration","src":"9706:46:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9737:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"9748:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9733:3:28"},"nodeType":"YulFunctionCall","src":"9733:18:28"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9720:12:28"},"nodeType":"YulFunctionCall","src":"9720:32:28"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9710:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"9799:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9801:77:28"},"nodeType":"YulFunctionCall","src":"9801:79:28"},"nodeType":"YulExpressionStatement","src":"9801:79:28"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9771:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"9779:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9768:2:28"},"nodeType":"YulFunctionCall","src":"9768:30:28"},"nodeType":"YulIf","src":"9765:117:28"},{"nodeType":"YulAssignment","src":"9896:72:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9940:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"9951:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9936:3:28"},"nodeType":"YulFunctionCall","src":"9936:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"9960:7:28"}],"functionName":{"name":"abi_decode_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"9906:29:28"},"nodeType":"YulFunctionCall","src":"9906:62:28"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"9896:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9114:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9125:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9137:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"9145:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"9153:6:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"9161:6:28","type":""}],"src":"9042:943:28"},{"body":{"nodeType":"YulBlock","src":"10074:391:28","statements":[{"body":{"nodeType":"YulBlock","src":"10120:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"10122:77:28"},"nodeType":"YulFunctionCall","src":"10122:79:28"},"nodeType":"YulExpressionStatement","src":"10122:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10095:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"10104:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10091:3:28"},"nodeType":"YulFunctionCall","src":"10091:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"10116:2:28","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10087:3:28"},"nodeType":"YulFunctionCall","src":"10087:32:28"},"nodeType":"YulIf","src":"10084:119:28"},{"nodeType":"YulBlock","src":"10213:117:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10228:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10242:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10232:6:28","type":""}]},{"nodeType":"YulAssignment","src":"10257:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10292:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10303:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10288:3:28"},"nodeType":"YulFunctionCall","src":"10288:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10312:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10267:20:28"},"nodeType":"YulFunctionCall","src":"10267:53:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:28"}]}]},{"nodeType":"YulBlock","src":"10340:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"10355:16:28","value":{"kind":"number","nodeType":"YulLiteral","src":"10369:2:28","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"10359:6:28","type":""}]},{"nodeType":"YulAssignment","src":"10385:63:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10420:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"10431:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10416:3:28"},"nodeType":"YulFunctionCall","src":"10416:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10440:7:28"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"10395:20:28"},"nodeType":"YulFunctionCall","src":"10395:53:28"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"10385:6:28"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10036:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10047:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10059:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10067:6:28","type":""}],"src":"9991:474:28"},{"body":{"nodeType":"YulBlock","src":"10499:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10516:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10519:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10509:6:28"},"nodeType":"YulFunctionCall","src":"10509:88:28"},"nodeType":"YulExpressionStatement","src":"10509:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10613:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"10616:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10606:6:28"},"nodeType":"YulFunctionCall","src":"10606:15:28"},"nodeType":"YulExpressionStatement","src":"10606:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10637:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10640:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10630:6:28"},"nodeType":"YulFunctionCall","src":"10630:15:28"},"nodeType":"YulExpressionStatement","src":"10630:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"10471:180:28"},{"body":{"nodeType":"YulBlock","src":"10708:269:28","statements":[{"nodeType":"YulAssignment","src":"10718:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10732:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"10738:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"10728:3:28"},"nodeType":"YulFunctionCall","src":"10728:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10718:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"10749:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"10779:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"10785:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10775:3:28"},"nodeType":"YulFunctionCall","src":"10775:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"10753:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"10826:51:28","statements":[{"nodeType":"YulAssignment","src":"10840:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10854:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10862:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10850:3:28"},"nodeType":"YulFunctionCall","src":"10850:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10840:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10806:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10799:6:28"},"nodeType":"YulFunctionCall","src":"10799:26:28"},"nodeType":"YulIf","src":"10796:81:28"},{"body":{"nodeType":"YulBlock","src":"10929:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"10943:16:28"},"nodeType":"YulFunctionCall","src":"10943:18:28"},"nodeType":"YulExpressionStatement","src":"10943:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"10893:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"10916:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"10924:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"10913:2:28"},"nodeType":"YulFunctionCall","src":"10913:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10890:2:28"},"nodeType":"YulFunctionCall","src":"10890:38:28"},"nodeType":"YulIf","src":"10887:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"10692:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10701:6:28","type":""}],"src":"10657:320:28"},{"body":{"nodeType":"YulBlock","src":"11089:59:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11111:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"11119:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11107:3:28"},"nodeType":"YulFunctionCall","src":"11107:14:28"},{"hexValue":"416c726561647920636c61696d6564","kind":"string","nodeType":"YulLiteral","src":"11123:17:28","type":"","value":"Already claimed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11100:6:28"},"nodeType":"YulFunctionCall","src":"11100:41:28"},"nodeType":"YulExpressionStatement","src":"11100:41:28"}]},"name":"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11081:6:28","type":""}],"src":"10983:165:28"},{"body":{"nodeType":"YulBlock","src":"11300:220:28","statements":[{"nodeType":"YulAssignment","src":"11310:74:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11376:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"11381:2:28","type":"","value":"15"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11317:58:28"},"nodeType":"YulFunctionCall","src":"11317:67:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11310:3:28"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11482:3:28"}],"functionName":{"name":"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf","nodeType":"YulIdentifier","src":"11393:88:28"},"nodeType":"YulFunctionCall","src":"11393:93:28"},"nodeType":"YulExpressionStatement","src":"11393:93:28"},{"nodeType":"YulAssignment","src":"11495:19:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11506:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"11511:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11502:3:28"},"nodeType":"YulFunctionCall","src":"11502:12:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11495:3:28"}]}]},"name":"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11288:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11296:3:28","type":""}],"src":"11154:366:28"},{"body":{"nodeType":"YulBlock","src":"11697:248:28","statements":[{"nodeType":"YulAssignment","src":"11707:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11719:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11730:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11715:3:28"},"nodeType":"YulFunctionCall","src":"11715:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11707:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11754:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"11765:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11750:3:28"},"nodeType":"YulFunctionCall","src":"11750:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11773:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"11779:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11769:3:28"},"nodeType":"YulFunctionCall","src":"11769:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11743:6:28"},"nodeType":"YulFunctionCall","src":"11743:47:28"},"nodeType":"YulExpressionStatement","src":"11743:47:28"},{"nodeType":"YulAssignment","src":"11799:139:28","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11933:4:28"}],"functionName":{"name":"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11807:124:28"},"nodeType":"YulFunctionCall","src":"11807:131:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11799:4:28"}]}]},"name":"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11677:9:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11692:4:28","type":""}],"src":"11526:419:28"},{"body":{"nodeType":"YulBlock","src":"11979:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11996:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11999:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11989:6:28"},"nodeType":"YulFunctionCall","src":"11989:88:28"},"nodeType":"YulExpressionStatement","src":"11989:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12093:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12096:4:28","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12086:6:28"},"nodeType":"YulFunctionCall","src":"12086:15:28"},"nodeType":"YulExpressionStatement","src":"12086:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12117:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12120:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12110:6:28"},"nodeType":"YulFunctionCall","src":"12110:15:28"},"nodeType":"YulExpressionStatement","src":"12110:15:28"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11951:180:28"},{"body":{"nodeType":"YulBlock","src":"12180:190:28","statements":[{"nodeType":"YulAssignment","src":"12190:33:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12217:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12199:17:28"},"nodeType":"YulFunctionCall","src":"12199:24:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"12190:5:28"}]},{"body":{"nodeType":"YulBlock","src":"12313:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12315:16:28"},"nodeType":"YulFunctionCall","src":"12315:18:28"},"nodeType":"YulExpressionStatement","src":"12315:18:28"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12238:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"12245:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"12235:2:28"},"nodeType":"YulFunctionCall","src":"12235:77:28"},"nodeType":"YulIf","src":"12232:103:28"},{"nodeType":"YulAssignment","src":"12344:20:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12355:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"12362:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12351:3:28"},"nodeType":"YulFunctionCall","src":"12351:13:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"12344:3:28"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12166:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"12176:3:28","type":""}],"src":"12137:233:28"},{"body":{"nodeType":"YulBlock","src":"12530:288:28","statements":[{"nodeType":"YulAssignment","src":"12540:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12552:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12563:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12548:3:28"},"nodeType":"YulFunctionCall","src":"12548:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12540:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12620:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12633:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12644:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12629:3:28"},"nodeType":"YulFunctionCall","src":"12629:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12576:43:28"},"nodeType":"YulFunctionCall","src":"12576:71:28"},"nodeType":"YulExpressionStatement","src":"12576:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12701:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12714:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12725:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12710:3:28"},"nodeType":"YulFunctionCall","src":"12710:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12657:43:28"},"nodeType":"YulFunctionCall","src":"12657:72:28"},"nodeType":"YulExpressionStatement","src":"12657:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12783:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12796:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"12807:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12792:3:28"},"nodeType":"YulFunctionCall","src":"12792:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12739:43:28"},"nodeType":"YulFunctionCall","src":"12739:72:28"},"nodeType":"YulExpressionStatement","src":"12739:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12486:9:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12498:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12506:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12514:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12525:4:28","type":""}],"src":"12376:442:28"},{"body":{"nodeType":"YulBlock","src":"12938:34:28","statements":[{"nodeType":"YulAssignment","src":"12948:18:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"12963:3:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"12948:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12910:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"12915:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"12926:11:28","type":""}],"src":"12824:148:28"},{"body":{"nodeType":"YulBlock","src":"13088:280:28","statements":[{"nodeType":"YulVariableDeclaration","src":"13098:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13145:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13112:32:28"},"nodeType":"YulFunctionCall","src":"13112:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"13102:6:28","type":""}]},{"nodeType":"YulAssignment","src":"13160:96:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13244:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"13249:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13167:76:28"},"nodeType":"YulFunctionCall","src":"13167:89:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13160:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13304:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"13311:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13300:3:28"},"nodeType":"YulFunctionCall","src":"13300:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"13318:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"13323:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"13265:34:28"},"nodeType":"YulFunctionCall","src":"13265:65:28"},"nodeType":"YulExpressionStatement","src":"13265:65:28"},{"nodeType":"YulAssignment","src":"13339:23:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13350:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"13355:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13346:3:28"},"nodeType":"YulFunctionCall","src":"13346:16:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13339:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13069:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13076:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13084:3:28","type":""}],"src":"12978:390:28"},{"body":{"nodeType":"YulBlock","src":"13558:251:28","statements":[{"nodeType":"YulAssignment","src":"13569:102:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13658:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"13667:3:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13576:81:28"},"nodeType":"YulFunctionCall","src":"13576:95:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13569:3:28"}]},{"nodeType":"YulAssignment","src":"13681:102:28","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13770:6:28"},{"name":"pos","nodeType":"YulIdentifier","src":"13779:3:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13688:81:28"},"nodeType":"YulFunctionCall","src":"13688:95:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13681:3:28"}]},{"nodeType":"YulAssignment","src":"13793:10:28","value":{"name":"pos","nodeType":"YulIdentifier","src":"13800:3:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13793:3:28"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13529:3:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13535:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13543:6:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13554:3:28","type":""}],"src":"13374:435:28"},{"body":{"nodeType":"YulBlock","src":"13873:40:28","statements":[{"nodeType":"YulAssignment","src":"13884:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13900:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13894:5:28"},"nodeType":"YulFunctionCall","src":"13894:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"13884:6:28"}]}]},"name":"array_length_t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13856:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"13866:6:28","type":""}],"src":"13815:98:28"},{"body":{"nodeType":"YulBlock","src":"14014:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14031:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"14036:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14024:6:28"},"nodeType":"YulFunctionCall","src":"14024:19:28"},"nodeType":"YulExpressionStatement","src":"14024:19:28"},{"nodeType":"YulAssignment","src":"14052:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14071:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"14076:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14067:3:28"},"nodeType":"YulFunctionCall","src":"14067:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"14052:11:28"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13986:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"13991:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"14002:11:28","type":""}],"src":"13919:168:28"},{"body":{"nodeType":"YulBlock","src":"14183:283:28","statements":[{"nodeType":"YulVariableDeclaration","src":"14193:52:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14239:5:28"}],"functionName":{"name":"array_length_t_bytes_memory_ptr","nodeType":"YulIdentifier","src":"14207:31:28"},"nodeType":"YulFunctionCall","src":"14207:38:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14197:6:28","type":""}]},{"nodeType":"YulAssignment","src":"14254:77:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14319:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"14324:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14261:57:28"},"nodeType":"YulFunctionCall","src":"14261:70:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14254:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14379:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"14386:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14375:3:28"},"nodeType":"YulFunctionCall","src":"14375:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"14393:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"14398:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"14340:34:28"},"nodeType":"YulFunctionCall","src":"14340:65:28"},"nodeType":"YulExpressionStatement","src":"14340:65:28"},{"nodeType":"YulAssignment","src":"14414:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14425:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"14452:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"14430:21:28"},"nodeType":"YulFunctionCall","src":"14430:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14421:3:28"},"nodeType":"YulFunctionCall","src":"14421:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14414:3:28"}]}]},"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14164:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14171:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14179:3:28","type":""}],"src":"14093:373:28"},{"body":{"nodeType":"YulBlock","src":"14672:440:28","statements":[{"nodeType":"YulAssignment","src":"14682:27:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14694:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14705:3:28","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14690:3:28"},"nodeType":"YulFunctionCall","src":"14690:19:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14682:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14763:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14776:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14787:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14772:3:28"},"nodeType":"YulFunctionCall","src":"14772:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14719:43:28"},"nodeType":"YulFunctionCall","src":"14719:71:28"},"nodeType":"YulExpressionStatement","src":"14719:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14844:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14857:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14868:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14853:3:28"},"nodeType":"YulFunctionCall","src":"14853:18:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"14800:43:28"},"nodeType":"YulFunctionCall","src":"14800:72:28"},"nodeType":"YulExpressionStatement","src":"14800:72:28"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"14926:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14939:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14950:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14935:3:28"},"nodeType":"YulFunctionCall","src":"14935:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"14882:43:28"},"nodeType":"YulFunctionCall","src":"14882:72:28"},"nodeType":"YulExpressionStatement","src":"14882:72:28"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14975:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"14986:2:28","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14971:3:28"},"nodeType":"YulFunctionCall","src":"14971:18:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14995:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"15001:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14991:3:28"},"nodeType":"YulFunctionCall","src":"14991:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14964:6:28"},"nodeType":"YulFunctionCall","src":"14964:48:28"},"nodeType":"YulExpressionStatement","src":"14964:48:28"},{"nodeType":"YulAssignment","src":"15021:84:28","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15091:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"15100:4:28"}],"functionName":{"name":"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15029:61:28"},"nodeType":"YulFunctionCall","src":"15029:76:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15021:4:28"}]}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14620:9:28","type":""},{"name":"value3","nodeType":"YulTypedName","src":"14632:6:28","type":""},{"name":"value2","nodeType":"YulTypedName","src":"14640:6:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14648:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14656:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14667:4:28","type":""}],"src":"14472:640:28"},{"body":{"nodeType":"YulBlock","src":"15180:79:28","statements":[{"nodeType":"YulAssignment","src":"15190:22:28","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"15205:6:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15199:5:28"},"nodeType":"YulFunctionCall","src":"15199:13:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"15190:5:28"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15247:5:28"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"15221:25:28"},"nodeType":"YulFunctionCall","src":"15221:32:28"},"nodeType":"YulExpressionStatement","src":"15221:32:28"}]},"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"15158:6:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"15166:3:28","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"15174:5:28","type":""}],"src":"15118:141:28"},{"body":{"nodeType":"YulBlock","src":"15341:273:28","statements":[{"body":{"nodeType":"YulBlock","src":"15387:83:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"15389:77:28"},"nodeType":"YulFunctionCall","src":"15389:79:28"},"nodeType":"YulExpressionStatement","src":"15389:79:28"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15362:7:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"15371:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15358:3:28"},"nodeType":"YulFunctionCall","src":"15358:23:28"},{"kind":"number","nodeType":"YulLiteral","src":"15383:2:28","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15354:3:28"},"nodeType":"YulFunctionCall","src":"15354:32:28"},"nodeType":"YulIf","src":"15351:119:28"},{"nodeType":"YulBlock","src":"15480:127:28","statements":[{"nodeType":"YulVariableDeclaration","src":"15495:15:28","value":{"kind":"number","nodeType":"YulLiteral","src":"15509:1:28","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"15499:6:28","type":""}]},{"nodeType":"YulAssignment","src":"15524:73:28","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15569:9:28"},{"name":"offset","nodeType":"YulIdentifier","src":"15580:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15565:3:28"},"nodeType":"YulFunctionCall","src":"15565:22:28"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"15589:7:28"}],"functionName":{"name":"abi_decode_t_bytes4_fromMemory","nodeType":"YulIdentifier","src":"15534:30:28"},"nodeType":"YulFunctionCall","src":"15534:63:28"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15524:6:28"}]}]}]},"name":"abi_decode_tuple_t_bytes4_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15311:9:28","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15322:7:28","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15334:6:28","type":""}],"src":"15265:349:28"},{"body":{"nodeType":"YulBlock","src":"15648:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15665:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15668:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15658:6:28"},"nodeType":"YulFunctionCall","src":"15658:88:28"},"nodeType":"YulExpressionStatement","src":"15658:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15762:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"15765:4:28","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15755:6:28"},"nodeType":"YulFunctionCall","src":"15755:15:28"},"nodeType":"YulExpressionStatement","src":"15755:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15786:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15789:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15779:6:28"},"nodeType":"YulFunctionCall","src":"15779:15:28"},"nodeType":"YulExpressionStatement","src":"15779:15:28"}]},"name":"panic_error_0x12","nodeType":"YulFunctionDefinition","src":"15620:180:28"},{"body":{"nodeType":"YulBlock","src":"15932:206:28","statements":[{"nodeType":"YulAssignment","src":"15942:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15954:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"15965:2:28","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15950:3:28"},"nodeType":"YulFunctionCall","src":"15950:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15942:4:28"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16022:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16035:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16046:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16031:3:28"},"nodeType":"YulFunctionCall","src":"16031:17:28"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"15978:43:28"},"nodeType":"YulFunctionCall","src":"15978:71:28"},"nodeType":"YulExpressionStatement","src":"15978:71:28"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16103:6:28"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16116:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"16127:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16112:3:28"},"nodeType":"YulFunctionCall","src":"16112:18:28"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"16059:43:28"},"nodeType":"YulFunctionCall","src":"16059:72:28"},"nodeType":"YulExpressionStatement","src":"16059:72:28"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15896:9:28","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15908:6:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15916:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15927:4:28","type":""}],"src":"15806:332:28"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063a22cb46511610071578063a22cb46514610308578063b88d4fde14610324578063c87b56dd14610340578063e985e9c514610370578063f2fde38b146103a057610121565b8063715018a61461027457806373b2e80e1461027e57806375794a3c146102ae5780638da5cb5b146102cc57806395d89b41146102ea57610121565b80631e83409a116100f45780631e83409a146101c057806323b872dd146101dc57806342842e0e146101f85780636352211e1461021457806370a082311461024457610121565b806301ffc9a71461012657806306fdde0314610156578063081812fc14610174578063095ea7b3146101a4575b600080fd5b610140600480360381019061013b9190611a0c565b6103bc565b60405161014d9190611a54565b60405180910390f35b61015e61049e565b60405161016b9190611aff565b60405180910390f35b61018e60048036038101906101899190611b57565b610530565b60405161019b9190611bc5565b60405180910390f35b6101be60048036038101906101b99190611c0c565b61054c565b005b6101da60048036038101906101d59190611c4c565b610562565b005b6101f660048036038101906101f19190611c79565b610676565b005b610212600480360381019061020d9190611c79565b610778565b005b61022e60048036038101906102299190611b57565b610798565b60405161023b9190611bc5565b60405180910390f35b61025e60048036038101906102599190611c4c565b6107aa565b60405161026b9190611cdb565b60405180910390f35b61027c610864565b005b61029860048036038101906102939190611c4c565b610878565b6040516102a59190611a54565b60405180910390f35b6102b6610898565b6040516102c39190611cdb565b60405180910390f35b6102d461089e565b6040516102e19190611bc5565b60405180910390f35b6102f26108c8565b6040516102ff9190611aff565b60405180910390f35b610322600480360381019061031d9190611d22565b61095a565b005b61033e60048036038101906103399190611e97565b610970565b005b61035a60048036038101906103559190611b57565b610995565b6040516103679190611aff565b60405180910390f35b61038a60048036038101906103859190611f1a565b6109fe565b6040516103979190611a54565b60405180910390f35b6103ba60048036038101906103b59190611c4c565b610a92565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061048757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610497575061049682610b18565b5b9050919050565b6060600080546104ad90611f89565b80601f01602080910402602001604051908101604052809291908181526020018280546104d990611f89565b80156105265780601f106104fb57610100808354040283529160200191610526565b820191906000526020600020905b81548152906001019060200180831161050957829003601f168201915b5050505050905090565b600061053b82610b82565b5061054582610c0a565b9050919050565b61055e8282610559610c47565b610c4f565b5050565b61056a610c61565b600860008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16156105f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ee90612006565b60405180910390fd5b61060381600754610ce8565b6007600081548092919061061690612055565b91905055506001600860008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106e85760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106df9190611bc5565b60405180910390fd5b60006106fc83836106f7610c47565b610de1565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610772578382826040517f64283d7b0000000000000000000000000000000000000000000000000000000081526004016107699392919061209d565b60405180910390fd5b50505050565b61079383838360405180602001604052806000815250610970565b505050565b60006107a382610b82565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361081d5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108149190611bc5565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61086c610c61565b6108766000610ffb565b565b60086020528060005260406000206000915054906101000a900460ff1681565b60075481565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600180546108d790611f89565b80601f016020809104026020016040519081016040528092919081815260200182805461090390611f89565b80156109505780601f1061092557610100808354040283529160200191610950565b820191906000526020600020905b81548152906001019060200180831161093357829003601f168201915b5050505050905090565b61096c610965610c47565b83836110c1565b5050565b61097b848484610676565b61098f610986610c47565b85858585611230565b50505050565b60606109a082610b82565b5060006109ab6113e1565b905060008151116109cb57604051806020016040528060008152506109f6565b806109d5846113f8565b6040516020016109e6929190612110565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610a9a610c61565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b0c5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b039190611bc5565b60405180910390fd5b610b1581610ffb565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610b8e836114c6565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610bf89190611cdb565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610c5c8383836001611503565b505050565b610c69610c47565b73ffffffffffffffffffffffffffffffffffffffff16610c8761089e565b73ffffffffffffffffffffffffffffffffffffffff1614610ce657610caa610c47565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610cdd9190611bc5565b60405180910390fd5b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d5a5760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401610d519190611bc5565b60405180910390fd5b6000610d6883836000610de1565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ddc5760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401610dd39190611bc5565b60405180910390fd5b505050565b600080610ded846114c6565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e2f57610e2e8184866116c8565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610ec057610e71600085600080611503565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f43576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361113257816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016111299190611bc5565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112239190611a54565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b11156113da578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02868685856040518563ffffffff1660e01b815260040161128f9493929190612189565b6020604051808303816000875af19250505080156112cb57506040513d601f19601f820116820180604052508101906112c891906121ea565b60015b61134f573d80600081146112fb576040519150601f19603f3d011682016040523d82523d6000602084013e611300565b606091505b50600081510361134757836040517f64a0ae9200000000000000000000000000000000000000000000000000000000815260040161133e9190611bc5565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146113d857836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113cf9190611bc5565b60405180910390fd5b505b5050505050565b606060405180602001604052806000815250905090565b6060600060016114078461178c565b01905060008167ffffffffffffffff81111561142657611425611d6c565b5b6040519080825280601f01601f1916602001820160405280156114585781602001600182028036833780820191505090505b509050600082602001820190505b6001156114bb578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114af576114ae612217565b5b04945060008503611466575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061153c5750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561167057600061154c84610b82565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115b757508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115ca57506115c881846109fe565b155b1561160c57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016116039190611bc5565b60405180910390fd5b811561166e57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116d38383836118df565b61178757600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361174857806040517f7e27328900000000000000000000000000000000000000000000000000000000815260040161173f9190611cdb565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161177e929190612246565b60405180910390fd5b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106117ea577a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083816117e0576117df612217565b5b0492506040810190505b6d04ee2d6d415b85acef81000000008310611827576d04ee2d6d415b85acef8100000000838161181d5761181c612217565b5b0492506020810190505b662386f26fc10000831061185657662386f26fc10000838161184c5761184b612217565b5b0492506010810190505b6305f5e100831061187f576305f5e100838161187557611874612217565b5b0492506008810190505b61271083106118a457612710838161189a57611899612217565b5b0492506004810190505b606483106118c757606483816118bd576118bc612217565b5b0492506002810190505b600a83106118d6576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561199757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611958575061195784846109fe565b5b8061199657508273ffffffffffffffffffffffffffffffffffffffff1661197e83610c0a565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6119e9816119b4565b81146119f457600080fd5b50565b600081359050611a06816119e0565b92915050565b600060208284031215611a2257611a216119aa565b5b6000611a30848285016119f7565b91505092915050565b60008115159050919050565b611a4e81611a39565b82525050565b6000602082019050611a696000830184611a45565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611aa9578082015181840152602081019050611a8e565b60008484015250505050565b6000601f19601f8301169050919050565b6000611ad182611a6f565b611adb8185611a7a565b9350611aeb818560208601611a8b565b611af481611ab5565b840191505092915050565b60006020820190508181036000830152611b198184611ac6565b905092915050565b6000819050919050565b611b3481611b21565b8114611b3f57600080fd5b50565b600081359050611b5181611b2b565b92915050565b600060208284031215611b6d57611b6c6119aa565b5b6000611b7b84828501611b42565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611baf82611b84565b9050919050565b611bbf81611ba4565b82525050565b6000602082019050611bda6000830184611bb6565b92915050565b611be981611ba4565b8114611bf457600080fd5b50565b600081359050611c0681611be0565b92915050565b60008060408385031215611c2357611c226119aa565b5b6000611c3185828601611bf7565b9250506020611c4285828601611b42565b9150509250929050565b600060208284031215611c6257611c616119aa565b5b6000611c7084828501611bf7565b91505092915050565b600080600060608486031215611c9257611c916119aa565b5b6000611ca086828701611bf7565b9350506020611cb186828701611bf7565b9250506040611cc286828701611b42565b9150509250925092565b611cd581611b21565b82525050565b6000602082019050611cf06000830184611ccc565b92915050565b611cff81611a39565b8114611d0a57600080fd5b50565b600081359050611d1c81611cf6565b92915050565b60008060408385031215611d3957611d386119aa565b5b6000611d4785828601611bf7565b9250506020611d5885828601611d0d565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611da482611ab5565b810181811067ffffffffffffffff82111715611dc357611dc2611d6c565b5b80604052505050565b6000611dd66119a0565b9050611de28282611d9b565b919050565b600067ffffffffffffffff821115611e0257611e01611d6c565b5b611e0b82611ab5565b9050602081019050919050565b82818337600083830152505050565b6000611e3a611e3584611de7565b611dcc565b905082815260208101848484011115611e5657611e55611d67565b5b611e61848285611e18565b509392505050565b600082601f830112611e7e57611e7d611d62565b5b8135611e8e848260208601611e27565b91505092915050565b60008060008060808587031215611eb157611eb06119aa565b5b6000611ebf87828801611bf7565b9450506020611ed087828801611bf7565b9350506040611ee187828801611b42565b925050606085013567ffffffffffffffff811115611f0257611f016119af565b5b611f0e87828801611e69565b91505092959194509250565b60008060408385031215611f3157611f306119aa565b5b6000611f3f85828601611bf7565b9250506020611f5085828601611bf7565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611fa157607f821691505b602082108103611fb457611fb3611f5a565b5b50919050565b7f416c726561647920636c61696d65640000000000000000000000000000000000600082015250565b6000611ff0600f83611a7a565b9150611ffb82611fba565b602082019050919050565b6000602082019050818103600083015261201f81611fe3565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061206082611b21565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361209257612091612026565b5b600182019050919050565b60006060820190506120b26000830186611bb6565b6120bf6020830185611ccc565b6120cc6040830184611bb6565b949350505050565b600081905092915050565b60006120ea82611a6f565b6120f481856120d4565b9350612104818560208601611a8b565b80840191505092915050565b600061211c82856120df565b915061212882846120df565b91508190509392505050565b600081519050919050565b600082825260208201905092915050565b600061215b82612134565b612165818561213f565b9350612175818560208601611a8b565b61217e81611ab5565b840191505092915050565b600060808201905061219e6000830187611bb6565b6121ab6020830186611bb6565b6121b86040830185611ccc565b81810360608301526121ca8184612150565b905095945050505050565b6000815190506121e4816119e0565b92915050565b600060208284031215612200576121ff6119aa565b5b600061220e848285016121d5565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600060408201905061225b6000830185611bb6565b6122686020830184611ccc565b939250505056fea26469706673582212209a1abe8ed0ffd0266e88f309efe2ba46f59be29bb180593f9fb5453f37313ed464736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3A0 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x274 JUMPI DUP1 PUSH4 0x73B2E80E EQ PUSH2 0x27E JUMPI DUP1 PUSH4 0x75794A3C EQ PUSH2 0x2AE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x2EA JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1E83409A GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x1E83409A EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1F8 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x214 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x244 JUMPI PUSH2 0x121 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x156 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1A4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x140 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13B SWAP2 SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x530 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19B SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1B9 SWAP2 SWAP1 PUSH2 0x1C0C JUMP JUMPDEST PUSH2 0x54C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D5 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F1 SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x676 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x212 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20D SWAP2 SWAP1 PUSH2 0x1C79 JUMP JUMPDEST PUSH2 0x778 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x229 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x25E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x259 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27C PUSH2 0x864 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x298 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x293 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0x878 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B6 PUSH2 0x898 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D4 PUSH2 0x89E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E1 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F2 PUSH2 0x8C8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FF SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1D22 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x33E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x339 SWAP2 SWAP1 PUSH2 0x1E97 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x35A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x1B57 JUMP JUMPDEST PUSH2 0x995 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x367 SWAP2 SWAP1 PUSH2 0x1AFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x38A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x385 SWAP2 SWAP1 PUSH2 0x1F1A JUMP JUMPDEST PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x397 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH2 0xA92 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x487 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x497 JUMPI POP PUSH2 0x496 DUP3 PUSH2 0xB18 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x4AD SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4D9 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x526 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x4FB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x526 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x509 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x53B DUP3 PUSH2 0xB82 JUMP JUMPDEST POP PUSH2 0x545 DUP3 PUSH2 0xC0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x55E DUP3 DUP3 PUSH2 0x559 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xC4F JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x56A PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5EE SWAP1 PUSH2 0x2006 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x603 DUP2 PUSH1 0x7 SLOAD PUSH2 0xCE8 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x616 SWAP1 PUSH2 0x2055 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x8 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x6E8 JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6DF SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x6FC DUP4 DUP4 PUSH2 0x6F7 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x772 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x769 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x209D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x793 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x970 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7A3 DUP3 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x814 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x86C PUSH2 0xC61 JUMP JUMPDEST PUSH2 0x876 PUSH1 0x0 PUSH2 0xFFB JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH1 0x0 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x8D7 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x903 SWAP1 PUSH2 0x1F89 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x950 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x925 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x950 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x933 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x96C PUSH2 0x965 PUSH2 0xC47 JUMP JUMPDEST DUP4 DUP4 PUSH2 0x10C1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x97B DUP5 DUP5 DUP5 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x98F PUSH2 0x986 PUSH2 0xC47 JUMP JUMPDEST DUP6 DUP6 DUP6 DUP6 PUSH2 0x1230 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9A0 DUP3 PUSH2 0xB82 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x9AB PUSH2 0x13E1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0x9CB JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x9F6 JUMP JUMPDEST DUP1 PUSH2 0x9D5 DUP5 PUSH2 0x13F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x9E6 SWAP3 SWAP2 SWAP1 PUSH2 0x2110 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xA9A PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB0C JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB03 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB15 DUP2 PUSH2 0xFFB JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xB8E DUP4 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC01 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xC5C DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1503 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xC69 PUSH2 0xC47 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC87 PUSH2 0x89E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE6 JUMPI PUSH2 0xCAA PUSH2 0xC47 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD5A JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD51 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD68 DUP4 DUP4 PUSH1 0x0 PUSH2 0xDE1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDDC JUMPI PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x73C6AC6E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDD3 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0xDED DUP5 PUSH2 0x14C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xE2F JUMPI PUSH2 0xE2E DUP2 DUP5 DUP7 PUSH2 0x16C8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xEC0 JUMPI PUSH2 0xE71 PUSH1 0x0 DUP6 PUSH1 0x0 DUP1 PUSH2 0x1503 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF43 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x6 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x6 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1132 JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1223 SWAP2 SWAP1 PUSH2 0x1A54 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x13DA JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 DUP7 DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x128F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2189 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x12CB JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12C8 SWAP2 SWAP1 PUSH2 0x21EA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x134F JUMPI RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12FB JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x0 DUP2 MLOAD SUB PUSH2 0x1347 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x133E SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x13D8 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13CF SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x1 PUSH2 0x1407 DUP5 PUSH2 0x178C JUMP JUMPDEST ADD SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1426 JUMPI PUSH2 0x1425 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1458 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x20 ADD DUP3 ADD SWAP1 POP JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x14BB JUMPI DUP1 DUP1 PUSH1 0x1 SWAP1 SUB SWAP2 POP POP PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xA DUP7 MOD BYTE DUP2 MSTORE8 PUSH1 0xA DUP6 DUP2 PUSH2 0x14AF JUMPI PUSH2 0x14AE PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP5 POP PUSH1 0x0 DUP6 SUB PUSH2 0x1466 JUMPI JUMPDEST DUP2 SWAP4 POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x153C JUMPI POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x1670 JUMPI PUSH1 0x0 PUSH2 0x154C DUP5 PUSH2 0xB82 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x15B7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15CA JUMPI POP PUSH2 0x15C8 DUP2 DUP5 PUSH2 0x9FE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x160C JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1603 SWAP2 SWAP1 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x166E JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16D3 DUP4 DUP4 DUP4 PUSH2 0x18DF JUMP JUMPDEST PUSH2 0x1787 JUMPI PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1748 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x173F SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177E SWAP3 SWAP2 SWAP1 PUSH2 0x2246 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 POP PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 LT PUSH2 0x17EA JUMPI PUSH27 0x184F03E93FF9F4DAA797ED6E38ED64BF6A1F010000000000000000 DUP4 DUP2 PUSH2 0x17E0 JUMPI PUSH2 0x17DF PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x40 DUP2 ADD SWAP1 POP JUMPDEST PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 LT PUSH2 0x1827 JUMPI PUSH14 0x4EE2D6D415B85ACEF8100000000 DUP4 DUP2 PUSH2 0x181D JUMPI PUSH2 0x181C PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x20 DUP2 ADD SWAP1 POP JUMPDEST PUSH7 0x2386F26FC10000 DUP4 LT PUSH2 0x1856 JUMPI PUSH7 0x2386F26FC10000 DUP4 DUP2 PUSH2 0x184C JUMPI PUSH2 0x184B PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x10 DUP2 ADD SWAP1 POP JUMPDEST PUSH4 0x5F5E100 DUP4 LT PUSH2 0x187F JUMPI PUSH4 0x5F5E100 DUP4 DUP2 PUSH2 0x1875 JUMPI PUSH2 0x1874 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x8 DUP2 ADD SWAP1 POP JUMPDEST PUSH2 0x2710 DUP4 LT PUSH2 0x18A4 JUMPI PUSH2 0x2710 DUP4 DUP2 PUSH2 0x189A JUMPI PUSH2 0x1899 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x4 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0x64 DUP4 LT PUSH2 0x18C7 JUMPI PUSH1 0x64 DUP4 DUP2 PUSH2 0x18BD JUMPI PUSH2 0x18BC PUSH2 0x2217 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP PUSH1 0x2 DUP2 ADD SWAP1 POP JUMPDEST PUSH1 0xA DUP4 LT PUSH2 0x18D6 JUMPI PUSH1 0x1 DUP2 ADD SWAP1 POP JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1997 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1958 JUMPI POP PUSH2 0x1957 DUP5 DUP5 PUSH2 0x9FE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1996 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x197E DUP4 PUSH2 0xC0A JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x19E9 DUP2 PUSH2 0x19B4 JUMP JUMPDEST DUP2 EQ PUSH2 0x19F4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1A06 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A22 JUMPI PUSH2 0x1A21 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1A30 DUP5 DUP3 DUP6 ADD PUSH2 0x19F7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1A4E DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1A69 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1A45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1AA9 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1A8E JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AD1 DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x1ADB DUP2 DUP6 PUSH2 0x1A7A JUMP JUMPDEST SWAP4 POP PUSH2 0x1AEB DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x1AF4 DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B19 DUP2 DUP5 PUSH2 0x1AC6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B34 DUP2 PUSH2 0x1B21 JUMP JUMPDEST DUP2 EQ PUSH2 0x1B3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1B51 DUP2 PUSH2 0x1B2B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B6D JUMPI PUSH2 0x1B6C PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1B7B DUP5 DUP3 DUP6 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1BAF DUP3 PUSH2 0x1B84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1BBF DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1BDA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1BB6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1BE9 DUP2 PUSH2 0x1BA4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1BF4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C06 DUP2 PUSH2 0x1BE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C23 JUMPI PUSH2 0x1C22 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C31 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1C42 DUP6 DUP3 DUP7 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C62 JUMPI PUSH2 0x1C61 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1C70 DUP5 DUP3 DUP6 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C92 JUMPI PUSH2 0x1C91 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1CA0 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1CB1 DUP7 DUP3 DUP8 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1CC2 DUP7 DUP3 DUP8 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x1CD5 DUP2 PUSH2 0x1B21 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CF0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1CCC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CFF DUP2 PUSH2 0x1A39 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D0A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D1C DUP2 PUSH2 0x1CF6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D39 JUMPI PUSH2 0x1D38 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1D47 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1D58 DUP6 DUP3 DUP7 ADD PUSH2 0x1D0D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1DA4 DUP3 PUSH2 0x1AB5 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1DC3 JUMPI PUSH2 0x1DC2 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1DD6 PUSH2 0x19A0 JUMP JUMPDEST SWAP1 POP PUSH2 0x1DE2 DUP3 DUP3 PUSH2 0x1D9B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1E02 JUMPI PUSH2 0x1E01 PUSH2 0x1D6C JUMP JUMPDEST JUMPDEST PUSH2 0x1E0B DUP3 PUSH2 0x1AB5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E3A PUSH2 0x1E35 DUP5 PUSH2 0x1DE7 JUMP JUMPDEST PUSH2 0x1DCC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1E56 JUMPI PUSH2 0x1E55 PUSH2 0x1D67 JUMP JUMPDEST JUMPDEST PUSH2 0x1E61 DUP5 DUP3 DUP6 PUSH2 0x1E18 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1E7E JUMPI PUSH2 0x1E7D PUSH2 0x1D62 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E8E DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1E27 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1EB1 JUMPI PUSH2 0x1EB0 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1EBF DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1ED0 DUP8 DUP3 DUP9 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1EE1 DUP8 DUP3 DUP9 ADD PUSH2 0x1B42 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F02 JUMPI PUSH2 0x1F01 PUSH2 0x19AF JUMP JUMPDEST JUMPDEST PUSH2 0x1F0E DUP8 DUP3 DUP9 ADD PUSH2 0x1E69 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F31 JUMPI PUSH2 0x1F30 PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1F3F DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F50 DUP6 DUP3 DUP7 ADD PUSH2 0x1BF7 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1FA1 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1FB4 JUMPI PUSH2 0x1FB3 PUSH2 0x1F5A JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FF0 PUSH1 0xF DUP4 PUSH2 0x1A7A JUMP JUMPDEST SWAP2 POP PUSH2 0x1FFB DUP3 PUSH2 0x1FBA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x201F DUP2 PUSH2 0x1FE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2060 DUP3 PUSH2 0x1B21 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x2092 JUMPI PUSH2 0x2091 PUSH2 0x2026 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x20B2 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x20BF PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1CCC JUMP JUMPDEST PUSH2 0x20CC PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1BB6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x20EA DUP3 PUSH2 0x1A6F JUMP JUMPDEST PUSH2 0x20F4 DUP2 DUP6 PUSH2 0x20D4 JUMP JUMPDEST SWAP4 POP PUSH2 0x2104 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x211C DUP3 DUP6 PUSH2 0x20DF JUMP JUMPDEST SWAP2 POP PUSH2 0x2128 DUP3 DUP5 PUSH2 0x20DF JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x215B DUP3 PUSH2 0x2134 JUMP JUMPDEST PUSH2 0x2165 DUP2 DUP6 PUSH2 0x213F JUMP JUMPDEST SWAP4 POP PUSH2 0x2175 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A8B JUMP JUMPDEST PUSH2 0x217E DUP2 PUSH2 0x1AB5 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x219E PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x21AB PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x21B8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1CCC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x21CA DUP2 DUP5 PUSH2 0x2150 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x21E4 DUP2 PUSH2 0x19E0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2200 JUMPI PUSH2 0x21FF PUSH2 0x19AA JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x220E DUP5 DUP3 DUP6 ADD PUSH2 0x21D5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x225B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1BB6 JUMP JUMPDEST PUSH2 0x2268 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1CCC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 BYTE 0xBE DUP15 0xD0 SELFDESTRUCT 0xD0 0x26 PUSH15 0x88F309EFE2BA46F59BE29BB180593F SWAP16 0xB5 GASLIMIT EXTCODEHASH CALLDATACOPY BALANCE RETURNDATACOPY 0xD4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ","sourceMap":"222:406:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1560:300:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2364:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3496:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3322:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;434:192:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4142:578:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4786:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2184:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1919:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;308:42:26;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;272:30;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2517:93:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3717:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4984:233;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2676:255;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3927:153;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1560:300:7;1662:4;1712:25;1697:40;;;:11;:40;;;;:104;;;;1768:33;1753:48;;;:11;:48;;;;1697:104;:156;;;;1817:36;1841:11;1817:23;:36::i;:::-;1697:156;1678:175;;1560:300;;;:::o;2364:89::-;2409:13;2441:5;2434:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2364:89;:::o;3496:154::-;3563:7;3582:22;3596:7;3582:13;:22::i;:::-;;3622:21;3635:7;3622:12;:21::i;:::-;3615:28;;3496:154;;;:::o;3322:113::-;3393:35;3402:2;3406:7;3415:12;:10;:12::i;:::-;3393:8;:35::i;:::-;3322:113;;:::o;434:192:26:-;1531:13:0;:11;:13::i;:::-;499:10:26::1;:14;510:2;499:14;;;;;;;;;;;;;;;;;;;;;;;;;498:15;490:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;543:22;549:2;553:11;;543:5;:22::i;:::-;575:11;;:13;;;;;;;;;:::i;:::-;;;;;;615:4;598:10;:14;609:2;598:14;;;;;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;434:192:::0;:::o;4142:578:7:-;4250:1;4236:16;;:2;:16;;;4232:87;;4305:1;4275:33;;;;;;;;;;;:::i;:::-;;;;;;;;4232:87;4537:21;4561:34;4569:2;4573:7;4582:12;:10;:12::i;:::-;4561:7;:34::i;:::-;4537:58;;4626:4;4609:21;;:13;:21;;;4605:109;;4674:4;4680:7;4689:13;4653:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4605:109;4222:498;4142:578;;;:::o;4786:132::-;4872:39;4889:4;4895:2;4899:7;4872:39;;;;;;;;;;;;:16;:39::i;:::-;4786:132;;;:::o;2184:118::-;2247:7;2273:22;2287:7;2273:13;:22::i;:::-;2266:29;;2184:118;;;:::o;1919:208::-;1982:7;2022:1;2005:19;;:5;:19;;;2001:87;;2074:1;2047:30;;;;;;;;;;;:::i;:::-;;;;;;;;2001:87;2104:9;:16;2114:5;2104:16;;;;;;;;;;;;;;;;2097:23;;1919:208;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;308:42:26:-;;;;;;;;;;;;;;;;;;;;;;:::o;272:30::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2517:93:7:-;2564:13;2596:7;2589:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2517:93;:::o;3717:144::-;3802:52;3821:12;:10;:12::i;:::-;3835:8;3845;3802:18;:52::i;:::-;3717:144;;:::o;4984:233::-;5097:31;5110:4;5116:2;5120:7;5097:12;:31::i;:::-;5138:72;5172:12;:10;:12::i;:::-;5186:4;5192:2;5196:7;5205:4;5138:33;:72::i;:::-;4984:233;;;;:::o;2676:255::-;2740:13;2765:22;2779:7;2765:13;:22::i;:::-;;2798:21;2822:10;:8;:10::i;:::-;2798:34;;2873:1;2855:7;2849:21;:25;:75;;;;;;;;;;;;;;;;;2891:7;2900:18;:7;:16;:18::i;:::-;2877:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:75;2842:82;;;2676:255;;;:::o;3927:153::-;4015:4;4038:18;:25;4057:5;4038:25;;;;;;;;;;;;;;;:35;4064:8;4038:35;;;;;;;;;;;;;;;;;;;;;;;;;4031:42;;3927:153;;;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;763:146:19:-;839:4;877:25;862:40;;;:11;:40;;;;855:47;;763:146;;;:::o;16212:241:7:-;16275:7;16294:13;16310:17;16319:7;16310:8;:17::i;:::-;16294:33;;16358:1;16341:19;;:5;:19;;;16337:88;;16406:7;16383:31;;;;;;;;;;;:::i;:::-;;;;;;;;16337:88;16441:5;16434:12;;;16212:241;;;:::o;5963:127::-;6033:7;6059:15;:24;6075:7;6059:24;;;;;;;;;;;;;;;;;;;;;6052:31;;5963:127;;;:::o;656:96:14:-;709:7;735:10;728:17;;656:96;:::o;14492:120:7:-;14572:33;14581:2;14585:7;14594:4;14600;14572:8;:33::i;:::-;14492:120;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;9978:327:7:-;10059:1;10045:16;;:2;:16;;;10041:87;;10114:1;10084:33;;;;;;;;;;;:::i;:::-;;;;;;;;10041:87;10137:21;10161:32;10169:2;10173:7;10190:1;10161:7;:32::i;:::-;10137:56;;10232:1;10207:27;;:13;:27;;;10203:96;;10285:1;10257:31;;;;;;;;;;;:::i;:::-;;;;;;;;10203:96;10031:274;9978:327;;:::o;8861:795::-;8947:7;8966:12;8981:17;8990:7;8981:8;:17::i;:::-;8966:32;;9074:1;9058:18;;:4;:18;;;9054:86;;9092:37;9109:4;9115;9121:7;9092:16;:37::i;:::-;9054:86;9200:1;9184:18;;:4;:18;;;9180:256;;9300:48;9317:1;9321:7;9338:1;9342:5;9300:8;:48::i;:::-;9410:1;9391:9;:15;9401:4;9391:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9180:256;9464:1;9450:16;;:2;:16;;;9446:107;;9527:1;9510:9;:13;9520:2;9510:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9446:107;9582:2;9563:7;:16;9571:7;9563:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9619:7;9615:2;9600:27;;9609:4;9600:27;;;;;;;;;;;;9645:4;9638:11;;;8861:795;;;;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;15665:312:7:-;15792:1;15772:22;;:8;:22;;;15768:91;;15839:8;15817:31;;;;;;;;;;;:::i;:::-;;;;;;;;15768:91;15906:8;15868:18;:25;15887:5;15868:25;;;;;;;;;;;;;;;:35;15894:8;15868:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15951:8;15929:41;;15944:5;15929:41;;;15961:8;15929:41;;;;;;:::i;:::-;;;;;;;;15665:312;;;:::o;993:924:11:-;1190:1;1173:2;:14;;;:18;1169:742;;;1227:2;1211:36;;;1248:8;1258:4;1264:7;1273:4;1211:67;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;1207:694;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1585:1;1568:6;:13;:18;1564:323;;1708:2;1672:39;;;;;;;;;;;:::i;:::-;;;;;;;;1564:323;1839:6;1833:13;1824:6;1820:2;1816:15;1809:38;1207:694;1335:41;;;1325:51;;;:6;:51;;;;1321:182;;1481:2;1445:39;;;;;;;;;;;:::i;:::-;;;;;;;;1321:182;1279:238;1169:742;993:924;;;;;:::o;3173:92:7:-;3224:13;3249:9;;;;;;;;;;;;;;3173:92;:::o;1308:632:18:-;1364:13;1413:14;1450:1;1430:17;1441:5;1430:10;:17::i;:::-;:21;1413:38;;1465:20;1499:6;1488:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1465:41;;1520:11;1615:6;1611:2;1607:15;1599:6;1595:28;1588:35;;1650:247;1657:4;1650:247;;;1681:5;;;;;;;;1785:10;1780:2;1773:5;1769:14;1764:32;1759:3;1751:46;1841:2;1832:11;;;;;;:::i;:::-;;;;;1874:1;1865:5;:10;1650:247;1861:21;1650:247;1917:6;1910:13;;;;;1308:632;;;:::o;5732:115:7:-;5798:7;5824;:16;5832:7;5824:16;;;;;;;;;;;;;;;;;;;;;5817:23;;5732:115;;;:::o;14794:662::-;14954:9;:31;;;;14983:1;14967:18;;:4;:18;;;;14954:31;14950:460;;;15001:13;15017:22;15031:7;15017:13;:22::i;:::-;15001:38;;15183:1;15167:18;;:4;:18;;;;:35;;;;;15198:4;15189:13;;:5;:13;;;;15167:35;:69;;;;;15207:29;15224:5;15231:4;15207:16;:29::i;:::-;15206:30;15167:69;15163:142;;;15285:4;15263:27;;;;;;;;;;;:::i;:::-;;;;;;;;15163:142;15323:9;15319:81;;;15377:7;15373:2;15357:28;;15366:5;15357:28;;;;;;;;;;;;15319:81;14987:423;14950:460;15447:2;15420:15;:24;15436:7;15420:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14794:662;;;;:::o;7105:368::-;7217:38;7231:5;7238:7;7247;7217:13;:38::i;:::-;7212:255;;7292:1;7275:19;;:5;:19;;;7271:186;;7344:7;7321:31;;;;;;;;;;;:::i;:::-;;;;;;;;7271:186;7425:7;7434;7398:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7212:255;7105:368;;;:::o;29154:916:21:-;29207:7;29226:14;29243:1;29226:18;;29291:8;29282:5;:17;29278:103;;29328:8;29319:17;;;;;;:::i;:::-;;;;;29364:2;29354:12;;;;29278:103;29407:8;29398:5;:17;29394:103;;29444:8;29435:17;;;;;;:::i;:::-;;;;;29480:2;29470:12;;;;29394:103;29523:8;29514:5;:17;29510:103;;29560:8;29551:17;;;;;;:::i;:::-;;;;;29596:2;29586:12;;;;29510:103;29639:7;29630:5;:16;29626:100;;29675:7;29666:16;;;;;;:::i;:::-;;;;;29710:1;29700:11;;;;29626:100;29752:7;29743:5;:16;29739:100;;29788:7;29779:16;;;;;;:::i;:::-;;;;;29823:1;29813:11;;;;29739:100;29865:7;29856:5;:16;29852:100;;29901:7;29892:16;;;;;;:::i;:::-;;;;;29936:1;29926:11;;;;29852:100;29978:7;29969:5;:16;29965:66;;30015:1;30005:11;;;;29965:66;30057:6;30050:13;;;29154:916;;;:::o;6401:272:7:-;6504:4;6558:1;6539:21;;:7;:21;;;;:127;;;;;6586:7;6577:16;;:5;:16;;;:52;;;;6597:32;6614:5;6621:7;6597:16;:32::i;:::-;6577:52;:88;;;;6658:7;6633:32;;:21;6646:7;6633:12;:21::i;:::-;:32;;;6577:88;6539:127;6520:146;;6401:272;;;;;:::o;7:75:28:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:246::-;1879:1;1889:113;1903:6;1900:1;1897:13;1889:113;;;1988:1;1983:3;1979:11;1973:18;1969:1;1964:3;1960:11;1953:39;1925:2;1922:1;1918:10;1913:15;;1889:113;;;2036:1;2027:6;2022:3;2018:16;2011:27;1860:184;1798:246;;;:::o;2050:102::-;2091:6;2142:2;2138:7;2133:2;2126:5;2122:14;2118:28;2108:38;;2050:102;;;:::o;2158:377::-;2246:3;2274:39;2307:5;2274:39;:::i;:::-;2329:71;2393:6;2388:3;2329:71;:::i;:::-;2322:78;;2409:65;2467:6;2462:3;2455:4;2448:5;2444:16;2409:65;:::i;:::-;2499:29;2521:6;2499:29;:::i;:::-;2494:3;2490:39;2483:46;;2250:285;2158:377;;;;:::o;2541:313::-;2654:4;2692:2;2681:9;2677:18;2669:26;;2741:9;2735:4;2731:20;2727:1;2716:9;2712:17;2705:47;2769:78;2842:4;2833:6;2769:78;:::i;:::-;2761:86;;2541:313;;;;:::o;2860:77::-;2897:7;2926:5;2915:16;;2860:77;;;:::o;2943:122::-;3016:24;3034:5;3016:24;:::i;:::-;3009:5;3006:35;2996:63;;3055:1;3052;3045:12;2996:63;2943:122;:::o;3071:139::-;3117:5;3155:6;3142:20;3133:29;;3171:33;3198:5;3171:33;:::i;:::-;3071:139;;;;:::o;3216:329::-;3275:6;3324:2;3312:9;3303:7;3299:23;3295:32;3292:119;;;3330:79;;:::i;:::-;3292:119;3450:1;3475:53;3520:7;3511:6;3500:9;3496:22;3475:53;:::i;:::-;3465:63;;3421:117;3216:329;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:329::-;4949:6;4998:2;4986:9;4977:7;4973:23;4969:32;4966:119;;;5004:79;;:::i;:::-;4966:119;5124:1;5149:53;5194:7;5185:6;5174:9;5170:22;5149:53;:::i;:::-;5139:63;;5095:117;4890:329;;;;:::o;5225:619::-;5302:6;5310;5318;5367:2;5355:9;5346:7;5342:23;5338:32;5335:119;;;5373:79;;:::i;:::-;5335:119;5493:1;5518:53;5563:7;5554:6;5543:9;5539:22;5518:53;:::i;:::-;5508:63;;5464:117;5620:2;5646:53;5691:7;5682:6;5671:9;5667:22;5646:53;:::i;:::-;5636:63;;5591:118;5748:2;5774:53;5819:7;5810:6;5799:9;5795:22;5774:53;:::i;:::-;5764:63;;5719:118;5225:619;;;;;:::o;5850:118::-;5937:24;5955:5;5937:24;:::i;:::-;5932:3;5925:37;5850:118;;:::o;5974:222::-;6067:4;6105:2;6094:9;6090:18;6082:26;;6118:71;6186:1;6175:9;6171:17;6162:6;6118:71;:::i;:::-;5974:222;;;;:::o;6202:116::-;6272:21;6287:5;6272:21;:::i;:::-;6265:5;6262:32;6252:60;;6308:1;6305;6298:12;6252:60;6202:116;:::o;6324:133::-;6367:5;6405:6;6392:20;6383:29;;6421:30;6445:5;6421:30;:::i;:::-;6324:133;;;;:::o;6463:468::-;6528:6;6536;6585:2;6573:9;6564:7;6560:23;6556:32;6553:119;;;6591:79;;:::i;:::-;6553:119;6711:1;6736:53;6781:7;6772:6;6761:9;6757:22;6736:53;:::i;:::-;6726:63;;6682:117;6838:2;6864:50;6906:7;6897:6;6886:9;6882:22;6864:50;:::i;:::-;6854:60;;6809:115;6463:468;;;;;:::o;6937:117::-;7046:1;7043;7036:12;7060:117;7169:1;7166;7159:12;7183:180;7231:77;7228:1;7221:88;7328:4;7325:1;7318:15;7352:4;7349:1;7342:15;7369:281;7452:27;7474:4;7452:27;:::i;:::-;7444:6;7440:40;7582:6;7570:10;7567:22;7546:18;7534:10;7531:34;7528:62;7525:88;;;7593:18;;:::i;:::-;7525:88;7633:10;7629:2;7622:22;7412:238;7369:281;;:::o;7656:129::-;7690:6;7717:20;;:::i;:::-;7707:30;;7746:33;7774:4;7766:6;7746:33;:::i;:::-;7656:129;;;:::o;7791:307::-;7852:4;7942:18;7934:6;7931:30;7928:56;;;7964:18;;:::i;:::-;7928:56;8002:29;8024:6;8002:29;:::i;:::-;7994:37;;8086:4;8080;8076:15;8068:23;;7791:307;;;:::o;8104:146::-;8201:6;8196:3;8191;8178:30;8242:1;8233:6;8228:3;8224:16;8217:27;8104:146;;;:::o;8256:423::-;8333:5;8358:65;8374:48;8415:6;8374:48;:::i;:::-;8358:65;:::i;:::-;8349:74;;8446:6;8439:5;8432:21;8484:4;8477:5;8473:16;8522:3;8513:6;8508:3;8504:16;8501:25;8498:112;;;8529:79;;:::i;:::-;8498:112;8619:54;8666:6;8661:3;8656;8619:54;:::i;:::-;8339:340;8256:423;;;;;:::o;8698:338::-;8753:5;8802:3;8795:4;8787:6;8783:17;8779:27;8769:122;;8810:79;;:::i;:::-;8769:122;8927:6;8914:20;8952:78;9026:3;9018:6;9011:4;9003:6;8999:17;8952:78;:::i;:::-;8943:87;;8759:277;8698:338;;;;:::o;9042:943::-;9137:6;9145;9153;9161;9210:3;9198:9;9189:7;9185:23;9181:33;9178:120;;;9217:79;;:::i;:::-;9178:120;9337:1;9362:53;9407:7;9398:6;9387:9;9383:22;9362:53;:::i;:::-;9352:63;;9308:117;9464:2;9490:53;9535:7;9526:6;9515:9;9511:22;9490:53;:::i;:::-;9480:63;;9435:118;9592:2;9618:53;9663:7;9654:6;9643:9;9639:22;9618:53;:::i;:::-;9608:63;;9563:118;9748:2;9737:9;9733:18;9720:32;9779:18;9771:6;9768:30;9765:117;;;9801:79;;:::i;:::-;9765:117;9906:62;9960:7;9951:6;9940:9;9936:22;9906:62;:::i;:::-;9896:72;;9691:287;9042:943;;;;;;;:::o;9991:474::-;10059:6;10067;10116:2;10104:9;10095:7;10091:23;10087:32;10084:119;;;10122:79;;:::i;:::-;10084:119;10242:1;10267:53;10312:7;10303:6;10292:9;10288:22;10267:53;:::i;:::-;10257:63;;10213:117;10369:2;10395:53;10440:7;10431:6;10420:9;10416:22;10395:53;:::i;:::-;10385:63;;10340:118;9991:474;;;;;:::o;10471:180::-;10519:77;10516:1;10509:88;10616:4;10613:1;10606:15;10640:4;10637:1;10630:15;10657:320;10701:6;10738:1;10732:4;10728:12;10718:22;;10785:1;10779:4;10775:12;10806:18;10796:81;;10862:4;10854:6;10850:17;10840:27;;10796:81;10924:2;10916:6;10913:14;10893:18;10890:38;10887:84;;10943:18;;:::i;:::-;10887:84;10708:269;10657:320;;;:::o;10983:165::-;11123:17;11119:1;11111:6;11107:14;11100:41;10983:165;:::o;11154:366::-;11296:3;11317:67;11381:2;11376:3;11317:67;:::i;:::-;11310:74;;11393:93;11482:3;11393:93;:::i;:::-;11511:2;11506:3;11502:12;11495:19;;11154:366;;;:::o;11526:419::-;11692:4;11730:2;11719:9;11715:18;11707:26;;11779:9;11773:4;11769:20;11765:1;11754:9;11750:17;11743:47;11807:131;11933:4;11807:131;:::i;:::-;11799:139;;11526:419;;;:::o;11951:180::-;11999:77;11996:1;11989:88;12096:4;12093:1;12086:15;12120:4;12117:1;12110:15;12137:233;12176:3;12199:24;12217:5;12199:24;:::i;:::-;12190:33;;12245:66;12238:5;12235:77;12232:103;;12315:18;;:::i;:::-;12232:103;12362:1;12355:5;12351:13;12344:20;;12137:233;;;:::o;12376:442::-;12525:4;12563:2;12552:9;12548:18;12540:26;;12576:71;12644:1;12633:9;12629:17;12620:6;12576:71;:::i;:::-;12657:72;12725:2;12714:9;12710:18;12701:6;12657:72;:::i;:::-;12739;12807:2;12796:9;12792:18;12783:6;12739:72;:::i;:::-;12376:442;;;;;;:::o;12824:148::-;12926:11;12963:3;12948:18;;12824:148;;;;:::o;12978:390::-;13084:3;13112:39;13145:5;13112:39;:::i;:::-;13167:89;13249:6;13244:3;13167:89;:::i;:::-;13160:96;;13265:65;13323:6;13318:3;13311:4;13304:5;13300:16;13265:65;:::i;:::-;13355:6;13350:3;13346:16;13339:23;;13088:280;12978:390;;;;:::o;13374:435::-;13554:3;13576:95;13667:3;13658:6;13576:95;:::i;:::-;13569:102;;13688:95;13779:3;13770:6;13688:95;:::i;:::-;13681:102;;13800:3;13793:10;;13374:435;;;;;:::o;13815:98::-;13866:6;13900:5;13894:12;13884:22;;13815:98;;;:::o;13919:168::-;14002:11;14036:6;14031:3;14024:19;14076:4;14071:3;14067:14;14052:29;;13919:168;;;;:::o;14093:373::-;14179:3;14207:38;14239:5;14207:38;:::i;:::-;14261:70;14324:6;14319:3;14261:70;:::i;:::-;14254:77;;14340:65;14398:6;14393:3;14386:4;14379:5;14375:16;14340:65;:::i;:::-;14430:29;14452:6;14430:29;:::i;:::-;14425:3;14421:39;14414:46;;14183:283;14093:373;;;;:::o;14472:640::-;14667:4;14705:3;14694:9;14690:19;14682:27;;14719:71;14787:1;14776:9;14772:17;14763:6;14719:71;:::i;:::-;14800:72;14868:2;14857:9;14853:18;14844:6;14800:72;:::i;:::-;14882;14950:2;14939:9;14935:18;14926:6;14882:72;:::i;:::-;15001:9;14995:4;14991:20;14986:2;14975:9;14971:18;14964:48;15029:76;15100:4;15091:6;15029:76;:::i;:::-;15021:84;;14472:640;;;;;;;:::o;15118:141::-;15174:5;15205:6;15199:13;15190:22;;15221:32;15247:5;15221:32;:::i;:::-;15118:141;;;;:::o;15265:349::-;15334:6;15383:2;15371:9;15362:7;15358:23;15354:32;15351:119;;;15389:79;;:::i;:::-;15351:119;15509:1;15534:63;15589:7;15580:6;15569:9;15565:22;15534:63;:::i;:::-;15524:73;;15480:127;15265:349;;;;:::o;15620:180::-;15668:77;15665:1;15658:88;15765:4;15762:1;15755:15;15789:4;15786:1;15779:15;15806:332;15927:4;15965:2;15954:9;15950:18;15942:26;;15978:71;16046:1;16035:9;16031:17;16022:6;15978:71;:::i;:::-;16059:72;16127:2;16116:9;16112:18;16103:6;16059:72;:::i;:::-;15806:332;;;;;:::o"},"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","claim(address)":"1e83409a","getApproved(uint256)":"081812fc","hasClaimed(address)":"73b2e80e","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","nextTokenId()":"75794a3c","owner()":"8da5cb5b","ownerOf(uint256)":"6352211e","renounceOwnership()":"715018a6","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"hasClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextTokenId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Attendance token for event participation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AttendanceToken.sol\":\"AttendanceToken\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x39ed367e54765186281efcfe83e47cf0ad62cc879f10e191360712507125f29a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c5ae6d85bd48cca8d6d2fcec8c63efd86f56f8a5832577a47e403ce0e65cb09\",\"dweb:/ipfs/QmUtcS8AbRSWhuc61puYet58os8FvSqm329ChoW8wwZXZk\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5dc63d1c6a12fe1b17793e1745877b2fcbe1964c3edfd0a482fac21ca8f18261\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6b7f97c5960a50fd1822cb298551ffc908e37b7893a68d6d08bce18a11cb0f11\",\"dweb:/ipfs/QmQQvxBytoY1eBt3pRQDmvH2hZ2yjhs12YqVfzGm7KSURq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xb5afb8e8eebc4d1c6404df2f5e1e6d2c3d24fd01e5dfc855314951ecfaae462d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://78586466c424f076c6a2a551d848cfbe3f7c49e723830807598484a1047b3b34\",\"dweb:/ipfs/Qmb717ovcFxm7qgNKEShiV6M9SPR3v1qnNpAGH84D6w29p\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/token/ERC721/utils/ERC721Utils.sol\":{\"keccak256\":\"0xddab643169f47a2c5291afafcbfdca045d9e6835553307d090bc048b6dabd0ac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d0ffbacfee42977167b3c75bd4787f8b72a7ab1176abd544f3dff662c6528e24\",\"dweb:/ipfs/QmUprM1cWCyaQ3LDjHA2DhwiPs3wekQ6MWXHFZdMMxpcyX\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x81c274a60a7ae232ae3dc9ff3a4011b4849a853c13b0832cd3351bb1bb2f0dae\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9da0c20dc74358a2a76330818f3bac9d1e2ce3371aec847b9cbf5d147fbae4f6\",\"dweb:/ipfs/QmeczhmnFv1hbXKGLwbYXY6Rrytc9a5A2YaRi5QMMgjPnb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xddce8e17e3d3f9ed818b4f4c4478a8262aab8b11ed322f1bf5ed705bb4bd97fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8084aa71a4cc7d2980972412a88fe4f114869faea3fefa5436431644eb5c0287\",\"dweb:/ipfs/Qmbqfs5dRdPvHVKY8kTaeyc65NdqXRQwRK7h9s5UJEhD1p\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x1225214420c83ebcca88f2ae2b50f053aaa7df7bd684c3e878d334627f2edfc6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c5fab4970634f9ab9a620983dc1c8a30153981a0b1a521666e269d0a11399d3\",\"dweb:/ipfs/QmVRnBC575MESGkEHndjujtR7qub2FzU9RWy9eKLp4hPZB\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]},\"contracts/AttendanceToken.sol\":{\"keccak256\":\"0x168639ac2eecadbb7013c754fc001cb23fea2c4c0f52de1a26b388315bc4386f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ac2306ce3968b70955e18904328405b689e20b368da4ddd209870fc1371cab87\",\"dweb:/ipfs/QmTGxevTwhAyTAtCDJRaDkvtg4fHoahVJFprfLmARm2pJe\"]}},\"version\":1}"}},"contracts/Example.sol":{"Example":{"abi":[{"inputs":[],"name":"greet","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"array_dataslot_t_string_storage":{"entryPoint":245,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":91,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":542,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_uint256":{"entryPoint":377,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":507,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":397,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":683,"id":null,"parameterSlots":2,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":266,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":196,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":655,"id":null,"parameterSlots":2,"returnSlots":1},"identity":{"entryPoint":387,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":625,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":149,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":102,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":431,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":282,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":612,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":483,"id":null,"parameterSlots":2,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":295,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":441,"id":null,"parameterSlots":3,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":478,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5231:28","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:28","statements":[{"nodeType":"YulAssignment","src":"77:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:28"},"nodeType":"YulFunctionCall","src":"87:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:28","type":""}],"src":"7:99:28"},{"body":{"nodeType":"YulBlock","src":"140:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"157:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"160:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"150:6:28"},"nodeType":"YulFunctionCall","src":"150:88:28"},"nodeType":"YulExpressionStatement","src":"150:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"254:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"257:4:28","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"247:6:28"},"nodeType":"YulFunctionCall","src":"247:15:28"},"nodeType":"YulExpressionStatement","src":"247:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"278:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"281:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"271:6:28"},"nodeType":"YulFunctionCall","src":"271:15:28"},"nodeType":"YulExpressionStatement","src":"271:15:28"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"112:180:28"},{"body":{"nodeType":"YulBlock","src":"326:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"343:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"346:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"336:6:28"},"nodeType":"YulFunctionCall","src":"336:88:28"},"nodeType":"YulExpressionStatement","src":"336:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"443:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"433:6:28"},"nodeType":"YulFunctionCall","src":"433:15:28"},"nodeType":"YulExpressionStatement","src":"433:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"464:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"467:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"457:6:28"},"nodeType":"YulFunctionCall","src":"457:15:28"},"nodeType":"YulExpressionStatement","src":"457:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"298:180:28"},{"body":{"nodeType":"YulBlock","src":"535:269:28","statements":[{"nodeType":"YulAssignment","src":"545:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"559:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"565:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"555:3:28"},"nodeType":"YulFunctionCall","src":"555:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"545:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"576:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"606:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"612:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"602:3:28"},"nodeType":"YulFunctionCall","src":"602:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"580:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"653:51:28","statements":[{"nodeType":"YulAssignment","src":"667:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"689:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"677:3:28"},"nodeType":"YulFunctionCall","src":"677:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"667:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"633:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"626:6:28"},"nodeType":"YulFunctionCall","src":"626:26:28"},"nodeType":"YulIf","src":"623:81:28"},{"body":{"nodeType":"YulBlock","src":"756:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"770:16:28"},"nodeType":"YulFunctionCall","src":"770:18:28"},"nodeType":"YulExpressionStatement","src":"770:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"720:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"743:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"751:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"740:2:28"},"nodeType":"YulFunctionCall","src":"740:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"717:2:28"},"nodeType":"YulFunctionCall","src":"717:38:28"},"nodeType":"YulIf","src":"714:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"519:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"528:6:28","type":""}],"src":"484:320:28"},{"body":{"nodeType":"YulBlock","src":"864:87:28","statements":[{"nodeType":"YulAssignment","src":"874:11:28","value":{"name":"ptr","nodeType":"YulIdentifier","src":"882:3:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"874:4:28"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"902:1:28","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"905:3:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"895:6:28"},"nodeType":"YulFunctionCall","src":"895:14:28"},"nodeType":"YulExpressionStatement","src":"895:14:28"},{"nodeType":"YulAssignment","src":"918:26:28","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:4:28","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"926:9:28"},"nodeType":"YulFunctionCall","src":"926:18:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"918:4:28"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"851:3:28","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"859:4:28","type":""}],"src":"810:141:28"},{"body":{"nodeType":"YulBlock","src":"1001:49:28","statements":[{"nodeType":"YulAssignment","src":"1011:33:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1029:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"1036:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1025:3:28"},"nodeType":"YulFunctionCall","src":"1025:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"1041:2:28","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1021:3:28"},"nodeType":"YulFunctionCall","src":"1021:23:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1011:6:28"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"984:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"994:6:28","type":""}],"src":"957:93:28"},{"body":{"nodeType":"YulBlock","src":"1109:54:28","statements":[{"nodeType":"YulAssignment","src":"1119:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"1144:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"1150:5:28"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1140:3:28"},"nodeType":"YulFunctionCall","src":"1140:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"1119:8:28"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"1084:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"1090:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"1100:8:28","type":""}],"src":"1056:107:28"},{"body":{"nodeType":"YulBlock","src":"1245:317:28","statements":[{"nodeType":"YulVariableDeclaration","src":"1255:35:28","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"1276:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"1288:1:28","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1272:3:28"},"nodeType":"YulFunctionCall","src":"1272:18:28"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"1259:9:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1299:109:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1330:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1341:66:28","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1311:18:28"},"nodeType":"YulFunctionCall","src":"1311:97:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"1303:4:28","type":""}]},{"nodeType":"YulAssignment","src":"1417:51:28","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"1448:9:28"},{"name":"toInsert","nodeType":"YulIdentifier","src":"1459:8:28"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"1429:18:28"},"nodeType":"YulFunctionCall","src":"1429:39:28"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1417:8:28"}]},{"nodeType":"YulAssignment","src":"1477:30:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1490:5:28"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"1501:4:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1497:3:28"},"nodeType":"YulFunctionCall","src":"1497:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1486:3:28"},"nodeType":"YulFunctionCall","src":"1486:21:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1477:5:28"}]},{"nodeType":"YulAssignment","src":"1516:40:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1529:5:28"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"1540:8:28"},{"name":"mask","nodeType":"YulIdentifier","src":"1550:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1536:3:28"},"nodeType":"YulFunctionCall","src":"1536:19:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1526:2:28"},"nodeType":"YulFunctionCall","src":"1526:30:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"1516:6:28"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1206:5:28","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"1213:10:28","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"1225:8:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"1238:6:28","type":""}],"src":"1169:393:28"},{"body":{"nodeType":"YulBlock","src":"1613:32:28","statements":[{"nodeType":"YulAssignment","src":"1623:16:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1634:5:28"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1623:7:28"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1595:5:28","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1605:7:28","type":""}],"src":"1568:77:28"},{"body":{"nodeType":"YulBlock","src":"1683:28:28","statements":[{"nodeType":"YulAssignment","src":"1693:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1700:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1693:3:28"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1669:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1679:3:28","type":""}],"src":"1651:60:28"},{"body":{"nodeType":"YulBlock","src":"1777:82:28","statements":[{"nodeType":"YulAssignment","src":"1787:66:28","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1845:5:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1827:17:28"},"nodeType":"YulFunctionCall","src":"1827:24:28"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"1818:8:28"},"nodeType":"YulFunctionCall","src":"1818:34:28"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1800:17:28"},"nodeType":"YulFunctionCall","src":"1800:53:28"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"1787:9:28"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1757:5:28","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"1767:9:28","type":""}],"src":"1717:142:28"},{"body":{"nodeType":"YulBlock","src":"1912:28:28","statements":[{"nodeType":"YulAssignment","src":"1922:12:28","value":{"name":"value","nodeType":"YulIdentifier","src":"1929:5:28"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"1922:3:28"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1898:5:28","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"1908:3:28","type":""}],"src":"1865:75:28"},{"body":{"nodeType":"YulBlock","src":"2022:193:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2032:63:28","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"2087:7:28"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2056:30:28"},"nodeType":"YulFunctionCall","src":"2056:39:28"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"2036:16:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2111:4:28"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2151:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"2145:5:28"},"nodeType":"YulFunctionCall","src":"2145:11:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2158:6:28"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"2190:16:28"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"2166:23:28"},"nodeType":"YulFunctionCall","src":"2166:41:28"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"2117:27:28"},"nodeType":"YulFunctionCall","src":"2117:91:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2104:6:28"},"nodeType":"YulFunctionCall","src":"2104:105:28"},"nodeType":"YulExpressionStatement","src":"2104:105:28"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1999:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2005:6:28","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"2013:7:28","type":""}],"src":"1946:269:28"},{"body":{"nodeType":"YulBlock","src":"2270:24:28","statements":[{"nodeType":"YulAssignment","src":"2280:8:28","value":{"kind":"number","nodeType":"YulLiteral","src":"2287:1:28","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"2280:3:28"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"2266:3:28","type":""}],"src":"2221:73:28"},{"body":{"nodeType":"YulBlock","src":"2353:136:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2363:46:28","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"2377:30:28"},"nodeType":"YulFunctionCall","src":"2377:32:28"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"2367:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2462:4:28"},{"name":"offset","nodeType":"YulIdentifier","src":"2468:6:28"},{"name":"zero_0","nodeType":"YulIdentifier","src":"2476:6:28"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"2418:43:28"},"nodeType":"YulFunctionCall","src":"2418:65:28"},"nodeType":"YulExpressionStatement","src":"2418:65:28"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2339:4:28","type":""},{"name":"offset","nodeType":"YulTypedName","src":"2345:6:28","type":""}],"src":"2300:189:28"},{"body":{"nodeType":"YulBlock","src":"2545:136:28","statements":[{"body":{"nodeType":"YulBlock","src":"2612:63:28","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2656:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2663:1:28","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"2626:29:28"},"nodeType":"YulFunctionCall","src":"2626:39:28"},"nodeType":"YulExpressionStatement","src":"2626:39:28"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2565:5:28"},{"name":"end","nodeType":"YulIdentifier","src":"2572:3:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2562:2:28"},"nodeType":"YulFunctionCall","src":"2562:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2577:26:28","statements":[{"nodeType":"YulAssignment","src":"2579:22:28","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2592:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"2599:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2588:3:28"},"nodeType":"YulFunctionCall","src":"2588:13:28"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2579:5:28"}]}]},"pre":{"nodeType":"YulBlock","src":"2559:2:28","statements":[]},"src":"2555:120:28"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"2533:5:28","type":""},{"name":"end","nodeType":"YulTypedName","src":"2540:3:28","type":""}],"src":"2495:186:28"},{"body":{"nodeType":"YulBlock","src":"2766:464:28","statements":[{"body":{"nodeType":"YulBlock","src":"2792:431:28","statements":[{"nodeType":"YulVariableDeclaration","src":"2806:54:28","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2854:5:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"2822:31:28"},"nodeType":"YulFunctionCall","src":"2822:38:28"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"2810:8:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2873:63:28","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"2896:8:28"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2924:10:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"2906:17:28"},"nodeType":"YulFunctionCall","src":"2906:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2892:3:28"},"nodeType":"YulFunctionCall","src":"2892:44:28"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2877:11:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"3093:27:28","statements":[{"nodeType":"YulAssignment","src":"3095:23:28","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"3110:8:28"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3095:11:28"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3077:10:28"},{"kind":"number","nodeType":"YulLiteral","src":"3089:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3074:2:28"},"nodeType":"YulFunctionCall","src":"3074:18:28"},"nodeType":"YulIf","src":"3071:49:28"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3162:11:28"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"3179:8:28"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3207:3:28"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"3189:17:28"},"nodeType":"YulFunctionCall","src":"3189:22:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:28"},"nodeType":"YulFunctionCall","src":"3175:37:28"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"3133:28:28"},"nodeType":"YulFunctionCall","src":"3133:80:28"},"nodeType":"YulExpressionStatement","src":"3133:80:28"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2783:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"2788:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2780:2:28"},"nodeType":"YulFunctionCall","src":"2780:11:28"},"nodeType":"YulIf","src":"2777:446:28"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2742:5:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"2749:3:28","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2754:10:28","type":""}],"src":"2687:543:28"},{"body":{"nodeType":"YulBlock","src":"3299:54:28","statements":[{"nodeType":"YulAssignment","src":"3309:37:28","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"3334:4:28"},{"name":"value","nodeType":"YulIdentifier","src":"3340:5:28"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3330:3:28"},"nodeType":"YulFunctionCall","src":"3330:16:28"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"3309:8:28"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"3274:4:28","type":""},{"name":"value","nodeType":"YulTypedName","src":"3280:5:28","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"3290:8:28","type":""}],"src":"3236:117:28"},{"body":{"nodeType":"YulBlock","src":"3410:118:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3420:68:28","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3469:1:28","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"3472:5:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3465:3:28"},"nodeType":"YulFunctionCall","src":"3465:13:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3484:1:28","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3480:3:28"},"nodeType":"YulFunctionCall","src":"3480:6:28"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"3436:28:28"},"nodeType":"YulFunctionCall","src":"3436:51:28"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3432:3:28"},"nodeType":"YulFunctionCall","src":"3432:56:28"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"3424:4:28","type":""}]},{"nodeType":"YulAssignment","src":"3497:25:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3511:4:28"},{"name":"mask","nodeType":"YulIdentifier","src":"3517:4:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3507:3:28"},"nodeType":"YulFunctionCall","src":"3507:15:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3497:6:28"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3387:4:28","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"3393:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3403:6:28","type":""}],"src":"3359:169:28"},{"body":{"nodeType":"YulBlock","src":"3614:214:28","statements":[{"nodeType":"YulAssignment","src":"3747:37:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3774:4:28"},{"name":"len","nodeType":"YulIdentifier","src":"3780:3:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"3755:18:28"},"nodeType":"YulFunctionCall","src":"3755:29:28"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3747:4:28"}]},{"nodeType":"YulAssignment","src":"3793:29:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3804:4:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3814:1:28","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"3817:3:28"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3810:3:28"},"nodeType":"YulFunctionCall","src":"3810:11:28"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3801:2:28"},"nodeType":"YulFunctionCall","src":"3801:21:28"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3793:4:28"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3595:4:28","type":""},{"name":"len","nodeType":"YulTypedName","src":"3601:3:28","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3609:4:28","type":""}],"src":"3533:295:28"},{"body":{"nodeType":"YulBlock","src":"3925:1303:28","statements":[{"nodeType":"YulVariableDeclaration","src":"3936:51:28","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3983:3:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"3950:32:28"},"nodeType":"YulFunctionCall","src":"3950:37:28"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3940:6:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:22:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4074:16:28"},"nodeType":"YulFunctionCall","src":"4074:18:28"},"nodeType":"YulExpressionStatement","src":"4074:18:28"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4044:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4052:18:28","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4041:2:28"},"nodeType":"YulFunctionCall","src":"4041:30:28"},"nodeType":"YulIf","src":"4038:56:28"},{"nodeType":"YulVariableDeclaration","src":"4104:52:28","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4150:4:28"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"4144:5:28"},"nodeType":"YulFunctionCall","src":"4144:11:28"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"4118:25:28"},"nodeType":"YulFunctionCall","src":"4118:38:28"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"4108:6:28","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4249:4:28"},{"name":"oldLen","nodeType":"YulIdentifier","src":"4255:6:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4263:6:28"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"4203:45:28"},"nodeType":"YulFunctionCall","src":"4203:67:28"},"nodeType":"YulExpressionStatement","src":"4203:67:28"},{"nodeType":"YulVariableDeclaration","src":"4280:18:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4297:1:28","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"4284:9:28","type":""}]},{"nodeType":"YulAssignment","src":"4308:17:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4321:4:28","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4308:9:28"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"4372:611:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4386:37:28","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4405:6:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:4:28","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4413:3:28"},"nodeType":"YulFunctionCall","src":"4413:9:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4401:3:28"},"nodeType":"YulFunctionCall","src":"4401:22:28"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"4390:7:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4437:51:28","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4483:4:28"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"4451:31:28"},"nodeType":"YulFunctionCall","src":"4451:37:28"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"4441:6:28","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4501:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4510:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4505:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"4569:163:28","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4594:6:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4612:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4617:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4608:3:28"},"nodeType":"YulFunctionCall","src":"4608:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4602:5:28"},"nodeType":"YulFunctionCall","src":"4602:26:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4587:6:28"},"nodeType":"YulFunctionCall","src":"4587:42:28"},"nodeType":"YulExpressionStatement","src":"4587:42:28"},{"nodeType":"YulAssignment","src":"4646:24:28","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4660:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4668:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4656:3:28"},"nodeType":"YulFunctionCall","src":"4656:14:28"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4646:6:28"}]},{"nodeType":"YulAssignment","src":"4687:31:28","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4704:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"4715:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4700:3:28"},"nodeType":"YulFunctionCall","src":"4700:18:28"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4687:9:28"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4535:1:28"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4538:7:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4532:2:28"},"nodeType":"YulFunctionCall","src":"4532:14:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4547:21:28","statements":[{"nodeType":"YulAssignment","src":"4549:17:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4558:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"4561:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4554:3:28"},"nodeType":"YulFunctionCall","src":"4554:12:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4549:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"4528:3:28","statements":[]},"src":"4524:208:28"},{"body":{"nodeType":"YulBlock","src":"4768:156:28","statements":[{"nodeType":"YulVariableDeclaration","src":"4786:43:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4813:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4818:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4809:3:28"},"nodeType":"YulFunctionCall","src":"4809:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4803:5:28"},"nodeType":"YulFunctionCall","src":"4803:26:28"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4790:9:28","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4853:6:28"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4880:9:28"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4895:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4903:4:28","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4891:3:28"},"nodeType":"YulFunctionCall","src":"4891:17:28"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"4861:18:28"},"nodeType":"YulFunctionCall","src":"4861:48:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4846:6:28"},"nodeType":"YulFunctionCall","src":"4846:64:28"},"nodeType":"YulExpressionStatement","src":"4846:64:28"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4751:7:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"4760:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4748:2:28"},"nodeType":"YulFunctionCall","src":"4748:19:28"},"nodeType":"YulIf","src":"4745:179:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4944:4:28"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4958:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4966:1:28","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4954:3:28"},"nodeType":"YulFunctionCall","src":"4954:14:28"},{"kind":"number","nodeType":"YulLiteral","src":"4970:1:28","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:28"},"nodeType":"YulFunctionCall","src":"4950:22:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4937:6:28"},"nodeType":"YulFunctionCall","src":"4937:36:28"},"nodeType":"YulExpressionStatement","src":"4937:36:28"}]},"nodeType":"YulCase","src":"4365:618:28","value":{"kind":"number","nodeType":"YulLiteral","src":"4370:1:28","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"5000:222:28","statements":[{"nodeType":"YulVariableDeclaration","src":"5014:14:28","value":{"kind":"number","nodeType":"YulLiteral","src":"5027:1:28","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5018:5:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"5051:67:28","statements":[{"nodeType":"YulAssignment","src":"5069:35:28","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"5088:3:28"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"5093:9:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5084:3:28"},"nodeType":"YulFunctionCall","src":"5084:19:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5078:5:28"},"nodeType":"YulFunctionCall","src":"5078:26:28"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"5069:5:28"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"5044:6:28"},"nodeType":"YulIf","src":"5041:77:28"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"5138:4:28"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5197:5:28"},{"name":"newLen","nodeType":"YulIdentifier","src":"5204:6:28"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"5144:52:28"},"nodeType":"YulFunctionCall","src":"5144:67:28"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"5131:6:28"},"nodeType":"YulFunctionCall","src":"5131:81:28"},"nodeType":"YulExpressionStatement","src":"5131:81:28"}]},"nodeType":"YulCase","src":"4992:230:28","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"4345:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"4353:2:28","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4342:2:28"},"nodeType":"YulFunctionCall","src":"4342:14:28"},"nodeType":"YulSwitch","src":"4335:887:28"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3914:4:28","type":""},{"name":"src","nodeType":"YulTypedName","src":"3920:3:28","type":""}],"src":"3833:1395:28"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040518060400160405280601081526020017f48656c6c6f2041667465727061727479000000000000000000000000000000008152506000908161004891906102ab565b5034801561005557600080fd5b5061037d565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806100dc57607f821691505b6020821081036100ef576100ee610095565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026101577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261011a565b610161868361011a565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006101a86101a361019e84610179565b610183565b610179565b9050919050565b6000819050919050565b6101c28361018d565b6101d66101ce826101af565b848454610127565b825550505050565b600090565b6101eb6101de565b6101f68184846101b9565b505050565b5b8181101561021a5761020f6000826101e3565b6001810190506101fc565b5050565b601f82111561025f57610230816100f5565b6102398461010a565b81016020851015610248578190505b61025c6102548561010a565b8301826101fb565b50505b505050565b600082821c905092915050565b600061028260001984600802610264565b1980831691505092915050565b600061029b8383610271565b9150826002028217905092915050565b6102b48261005b565b67ffffffffffffffff8111156102cd576102cc610066565b5b6102d782546100c4565b6102e282828561021e565b600060209050601f8311600181146103155760008415610303578287015190505b61030d858261028f565b865550610375565b601f198416610323866100f5565b60005b8281101561034b57848901518255600182019150602085019450602081019050610326565b868310156103685784890151610364601f891682610271565b8355505b6001600288020188555050505b505050505050565b6102248061038c6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cfae321714610030575b600080fd5b61003861004e565b604051610045919061016c565b60405180910390f35b6000805461005b906101bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610087906101bd565b80156100d45780601f106100a9576101008083540402835291602001916100d4565b820191906000526020600020905b8154815290600101906020018083116100b757829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b838110156101165780820151818401526020810190506100fb565b60008484015250505050565b6000601f19601f8301169050919050565b600061013e826100dc565b61014881856100e7565b93506101588185602086016100f8565b61016181610122565b840191505092915050565b600060208201905081810360008301526101868184610133565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806101d557607f821691505b6020821081036101e8576101e761018e565b5b5091905056fea2646970667358221220d480b95b13d5b658db66cd870d7bce5b94877d548e21115e3873c77e98e6c76364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x10 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x48656C6C6F204166746572706172747900000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x0 SWAP1 DUP2 PUSH2 0x48 SWAP2 SWAP1 PUSH2 0x2AB JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xEF JUMPI PUSH2 0xEE PUSH2 0x95 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x157 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x11A JUMP JUMPDEST PUSH2 0x161 DUP7 DUP4 PUSH2 0x11A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A8 PUSH2 0x1A3 PUSH2 0x19E DUP5 PUSH2 0x179 JUMP JUMPDEST PUSH2 0x183 JUMP JUMPDEST PUSH2 0x179 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C2 DUP4 PUSH2 0x18D JUMP JUMPDEST PUSH2 0x1D6 PUSH2 0x1CE DUP3 PUSH2 0x1AF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x127 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x1EB PUSH2 0x1DE JUMP JUMPDEST PUSH2 0x1F6 DUP2 DUP5 DUP5 PUSH2 0x1B9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x21A JUMPI PUSH2 0x20F PUSH1 0x0 DUP3 PUSH2 0x1E3 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x1FC JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x25F JUMPI PUSH2 0x230 DUP2 PUSH2 0xF5 JUMP JUMPDEST PUSH2 0x239 DUP5 PUSH2 0x10A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x248 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x25C PUSH2 0x254 DUP6 PUSH2 0x10A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x1FB JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x282 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x264 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x29B DUP4 DUP4 PUSH2 0x271 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2B4 DUP3 PUSH2 0x5B JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2CD JUMPI PUSH2 0x2CC PUSH2 0x66 JUMP JUMPDEST JUMPDEST PUSH2 0x2D7 DUP3 SLOAD PUSH2 0xC4 JUMP JUMPDEST PUSH2 0x2E2 DUP3 DUP3 DUP6 PUSH2 0x21E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x315 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x303 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x30D DUP6 DUP3 PUSH2 0x28F JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x375 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x323 DUP7 PUSH2 0xF5 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x34B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x326 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x368 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x364 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x271 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x224 DUP1 PUSH2 0x38C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCFAE3217 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x5B SWAP1 PUSH2 0x1BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x87 SWAP1 PUSH2 0x1BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E DUP3 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x148 DUP2 DUP6 PUSH2 0xE7 JUMP JUMPDEST SWAP4 POP PUSH2 0x158 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF8 JUMP JUMPDEST PUSH2 0x161 DUP2 PUSH2 0x122 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x186 DUP2 DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E8 JUMPI PUSH2 0x1E7 PUSH2 0x18E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP1 0xB9 JUMPDEST SGT 0xD5 0xB6 PC 0xDB PUSH7 0xCD870D7BCE5B94 DUP8 PUSH30 0x548E21115E3873C77E98E6C76364736F6C63430008140033000000000000 ","sourceMap":"101:66:27:-:0;;;124:40;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;101:66;;;;;;;;;;;;7:99:28;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;101:66:27:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@greet_9302":{"entryPoint":78,"id":9302,"parameterSlots":0,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":307,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":364,"id":null,"parameterSlots":2,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":220,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":231,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory_with_cleanup":{"entryPoint":248,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":445,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":398,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":290,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:1858:28","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:28","statements":[{"nodeType":"YulAssignment","src":"77:22:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:28"},"nodeType":"YulFunctionCall","src":"87:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:28"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:28","type":""}],"src":"7:99:28"},{"body":{"nodeType":"YulBlock","src":"208:73:28","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:28"},"nodeType":"YulFunctionCall","src":"218:19:28"},"nodeType":"YulExpressionStatement","src":"218:19:28"},{"nodeType":"YulAssignment","src":"246:29:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:28"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:28"},"nodeType":"YulFunctionCall","src":"261:14:28"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:28"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:28","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:28","type":""}],"src":"112:169:28"},{"body":{"nodeType":"YulBlock","src":"349:184:28","statements":[{"nodeType":"YulVariableDeclaration","src":"359:10:28","value":{"kind":"number","nodeType":"YulLiteral","src":"368:1:28","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"363:1:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"428:63:28","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"453:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"458:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"449:3:28"},"nodeType":"YulFunctionCall","src":"449:11:28"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"472:3:28"},{"name":"i","nodeType":"YulIdentifier","src":"477:1:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"468:3:28"},"nodeType":"YulFunctionCall","src":"468:11:28"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"462:5:28"},"nodeType":"YulFunctionCall","src":"462:18:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"442:6:28"},"nodeType":"YulFunctionCall","src":"442:39:28"},"nodeType":"YulExpressionStatement","src":"442:39:28"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:28"},{"name":"length","nodeType":"YulIdentifier","src":"392:6:28"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"386:2:28"},"nodeType":"YulFunctionCall","src":"386:13:28"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"400:19:28","statements":[{"nodeType":"YulAssignment","src":"402:15:28","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"411:1:28"},{"kind":"number","nodeType":"YulLiteral","src":"414:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"407:3:28"},"nodeType":"YulFunctionCall","src":"407:10:28"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"402:1:28"}]}]},"pre":{"nodeType":"YulBlock","src":"382:3:28","statements":[]},"src":"378:113:28"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"511:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"516:6:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"507:3:28"},"nodeType":"YulFunctionCall","src":"507:16:28"},{"kind":"number","nodeType":"YulLiteral","src":"525:1:28","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"500:6:28"},"nodeType":"YulFunctionCall","src":"500:27:28"},"nodeType":"YulExpressionStatement","src":"500:27:28"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"331:3:28","type":""},{"name":"dst","nodeType":"YulTypedName","src":"336:3:28","type":""},{"name":"length","nodeType":"YulTypedName","src":"341:6:28","type":""}],"src":"287:246:28"},{"body":{"nodeType":"YulBlock","src":"587:54:28","statements":[{"nodeType":"YulAssignment","src":"597:38:28","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"615:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"622:2:28","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"611:3:28"},"nodeType":"YulFunctionCall","src":"611:14:28"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"631:2:28","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"627:3:28"},"nodeType":"YulFunctionCall","src":"627:7:28"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"607:3:28"},"nodeType":"YulFunctionCall","src":"607:28:28"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"597:6:28"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"570:5:28","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"580:6:28","type":""}],"src":"539:102:28"},{"body":{"nodeType":"YulBlock","src":"739:285:28","statements":[{"nodeType":"YulVariableDeclaration","src":"749:53:28","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"796:5:28"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"763:32:28"},"nodeType":"YulFunctionCall","src":"763:39:28"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"753:6:28","type":""}]},{"nodeType":"YulAssignment","src":"811:78:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"877:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"882:6:28"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"818:58:28"},"nodeType":"YulFunctionCall","src":"818:71:28"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"811:3:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"937:5:28"},{"kind":"number","nodeType":"YulLiteral","src":"944:4:28","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"933:3:28"},"nodeType":"YulFunctionCall","src":"933:16:28"},{"name":"pos","nodeType":"YulIdentifier","src":"951:3:28"},{"name":"length","nodeType":"YulIdentifier","src":"956:6:28"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"898:34:28"},"nodeType":"YulFunctionCall","src":"898:65:28"},"nodeType":"YulExpressionStatement","src":"898:65:28"},{"nodeType":"YulAssignment","src":"972:46:28","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"983:3:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1010:6:28"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"988:21:28"},"nodeType":"YulFunctionCall","src":"988:29:28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"979:3:28"},"nodeType":"YulFunctionCall","src":"979:39:28"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"972:3:28"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"720:5:28","type":""},{"name":"pos","nodeType":"YulTypedName","src":"727:3:28","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"735:3:28","type":""}],"src":"647:377:28"},{"body":{"nodeType":"YulBlock","src":"1148:195:28","statements":[{"nodeType":"YulAssignment","src":"1158:26:28","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:28","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:28"},"nodeType":"YulFunctionCall","src":"1166:18:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:28"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1205:9:28"},{"kind":"number","nodeType":"YulLiteral","src":"1216:1:28","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1201:3:28"},"nodeType":"YulFunctionCall","src":"1201:17:28"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1224:4:28"},{"name":"headStart","nodeType":"YulIdentifier","src":"1230:9:28"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1220:3:28"},"nodeType":"YulFunctionCall","src":"1220:20:28"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1194:6:28"},"nodeType":"YulFunctionCall","src":"1194:47:28"},"nodeType":"YulExpressionStatement","src":"1194:47:28"},{"nodeType":"YulAssignment","src":"1250:86:28","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1322:6:28"},{"name":"tail","nodeType":"YulIdentifier","src":"1331:4:28"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1258:63:28"},"nodeType":"YulFunctionCall","src":"1258:78:28"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1250:4:28"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1120:9:28","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1132:6:28","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1143:4:28","type":""}],"src":"1030:313:28"},{"body":{"nodeType":"YulBlock","src":"1377:152:28","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1394:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1397:77:28","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1387:6:28"},"nodeType":"YulFunctionCall","src":"1387:88:28"},"nodeType":"YulExpressionStatement","src":"1387:88:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1491:1:28","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1494:4:28","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1484:6:28"},"nodeType":"YulFunctionCall","src":"1484:15:28"},"nodeType":"YulExpressionStatement","src":"1484:15:28"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1515:1:28","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1518:4:28","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1508:6:28"},"nodeType":"YulFunctionCall","src":"1508:15:28"},"nodeType":"YulExpressionStatement","src":"1508:15:28"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"1349:180:28"},{"body":{"nodeType":"YulBlock","src":"1586:269:28","statements":[{"nodeType":"YulAssignment","src":"1596:22:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1610:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1616:1:28","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1606:3:28"},"nodeType":"YulFunctionCall","src":"1606:12:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1596:6:28"}]},{"nodeType":"YulVariableDeclaration","src":"1627:38:28","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1657:4:28"},{"kind":"number","nodeType":"YulLiteral","src":"1663:1:28","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1653:3:28"},"nodeType":"YulFunctionCall","src":"1653:12:28"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1631:18:28","type":""}]},{"body":{"nodeType":"YulBlock","src":"1704:51:28","statements":[{"nodeType":"YulAssignment","src":"1718:27:28","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1732:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1740:4:28","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1728:3:28"},"nodeType":"YulFunctionCall","src":"1728:17:28"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1718:6:28"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1684:18:28"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1677:6:28"},"nodeType":"YulFunctionCall","src":"1677:26:28"},"nodeType":"YulIf","src":"1674:81:28"},{"body":{"nodeType":"YulBlock","src":"1807:42:28","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"1821:16:28"},"nodeType":"YulFunctionCall","src":"1821:18:28"},"nodeType":"YulExpressionStatement","src":"1821:18:28"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1771:18:28"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1794:6:28"},{"kind":"number","nodeType":"YulLiteral","src":"1802:2:28","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1791:2:28"},"nodeType":"YulFunctionCall","src":"1791:14:28"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1768:2:28"},"nodeType":"YulFunctionCall","src":"1768:38:28"},"nodeType":"YulIf","src":"1765:84:28"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1570:4:28","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1579:6:28","type":""}],"src":"1535:320:28"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":28,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cfae321714610030575b600080fd5b61003861004e565b604051610045919061016c565b60405180910390f35b6000805461005b906101bd565b80601f0160208091040260200160405190810160405280929190818152602001828054610087906101bd565b80156100d45780601f106100a9576101008083540402835291602001916100d4565b820191906000526020600020905b8154815290600101906020018083116100b757829003601f168201915b505050505081565b600081519050919050565b600082825260208201905092915050565b60005b838110156101165780820151818401526020810190506100fb565b60008484015250505050565b6000601f19601f8301169050919050565b600061013e826100dc565b61014881856100e7565b93506101588185602086016100f8565b61016181610122565b840191505092915050565b600060208201905081810360008301526101868184610133565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806101d557607f821691505b6020821081036101e8576101e761018e565b5b5091905056fea2646970667358221220d480b95b13d5b658db66cd870d7bce5b94877d548e21115e3873c77e98e6c76364736f6c63430008140033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xCFAE3217 EQ PUSH2 0x30 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x38 PUSH2 0x4E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45 SWAP2 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x5B SWAP1 PUSH2 0x1BD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x87 SWAP1 PUSH2 0x1BD JUMP JUMPDEST DUP1 ISZERO PUSH2 0xD4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xA9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xD4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13E DUP3 PUSH2 0xDC JUMP JUMPDEST PUSH2 0x148 DUP2 DUP6 PUSH2 0xE7 JUMP JUMPDEST SWAP4 POP PUSH2 0x158 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xF8 JUMP JUMPDEST PUSH2 0x161 DUP2 PUSH2 0x122 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x186 DUP2 DUP5 PUSH2 0x133 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1D5 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1E8 JUMPI PUSH2 0x1E7 PUSH2 0x18E JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DUP1 0xB9 JUMPDEST SGT 0xD5 0xB6 PC 0xDB PUSH7 0xCD870D7BCE5B94 DUP8 PUSH30 0x548E21115E3873C77E98E6C76364736F6C63430008140033000000000000 ","sourceMap":"101:66:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;124:40;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:99:28:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1349:180::-;1397:77;1394:1;1387:88;1494:4;1491:1;1484:15;1518:4;1515:1;1508:15;1535:320;1579:6;1616:1;1610:4;1606:12;1596:22;;1663:1;1657:4;1653:12;1684:18;1674:81;;1740:4;1732:6;1728:17;1718:27;;1674:81;1802:2;1794:6;1791:14;1771:18;1768:38;1765:84;;1821:18;;:::i;:::-;1765:84;1586:269;1535:320;;;:::o"},"methodIdentifiers":{"greet()":"cfae3217"}},"metadata":"{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"greet\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Example contract for Afterparty\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Example.sol\":\"Example\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Example.sol\":{\"keccak256\":\"0x8940212724b2155a2e109ddb8ef93bebbbeeb22461d0e4d9d1c98c323bf5e712\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://347eadfb766e568bf9d910431e03178fa4724889d254d6456f24d46569dee26c\",\"dweb:/ipfs/QmXcth3YRJ6i3dPv2N7crsmtRAJSwZizx67kjdGSwYNuTs\"]}},\"version\":1}"}}}}}